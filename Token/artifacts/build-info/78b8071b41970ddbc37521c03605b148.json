{
	"id": "78b8071b41970ddbc37521c03605b148",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20/Bloque 3/Token/RealCrypto.sol": {
				"content": "//SPDX-License-Identifier: LGPL-3.0-only\r\n\r\n//Version\r\npragma solidity 0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n//import \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\n\r\ncontract RealCrypto is ERC20, AccessControl, Pausable{\r\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\r\n    bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");\r\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\r\n\r\n\r\n/*    constructor(address minter) public ERC20(\"MyToken\", \"TKN\");\r\n        _setupRole(MINTER_ROLE, minter); //Grant the minter role to a specified account\r\n\r\n    }*/\r\n    constructor(address minter_, address burner_, address pauser_) ERC20(\"MyToken\", \"TKN\") {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender); // The creator is the admin\r\n        _grantRole(MINTER_ROLE, minter_); //Grant the minter role to a specified account\r\n        _grantRole(BURNER_ROLE, burner_); //Grant the minter role to a specified account\r\n        _grantRole(PAUSER_ROLE, pauser_); //Grant the pauser role to a specified account, only to the owner\r\n    }\r\n\r\n   \r\n\r\n    function mint(address to_ , uint amount_) public  {\r\n        require(hasRole(MINTER_ROLE, msg.sender), \"Caller is not a minter\");\r\n        _mint(to_, amount_);\r\n    }\r\n\r\n    function burn(address to_ , uint amount_) public onlyRole(BURNER_ROLE) {\r\n        _burn(to_, amount_);\r\n    }\r\n\r\n    function pause() public onlyRole(PAUSER_ROLE){\r\n        _pause();\r\n    }\r\n    \r\n\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 533,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 646,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 652,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 654,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 656,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 658,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC20/Bloque 3/Token/RealCrypto.sol": {
				"RealCrypto": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "minter_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "burner_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "pauser_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BURNER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":314:1608  contract RealCrypto is ERC20, AccessControl, Pausable{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":752:1217  constructor(address minter_, address burner_, address pauser_) ERC20(\"MyToken\", \"TKN\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x4d79546f6b656e00000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x544b4e0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x06\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":850:892  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":861:879  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":881:891  msg.sender */\n  caller\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":850:860  _grantRole */\n  shl(0x20, tag_14)\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":850:892  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":931:963  _grantRole(MINTER_ROLE, minter_) */\n  tag_15\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":412:436  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":955:962  minter_ */\n  dup5\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":931:941  _grantRole */\n  shl(0x20, tag_14)\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":931:963  _grantRole(MINTER_ROLE, minter_) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1021:1053  _grantRole(BURNER_ROLE, burner_) */\n  tag_16\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":481:505  keccak256(\"BURNER_ROLE\") */\n  0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1045:1052  burner_ */\n  dup4\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1021:1031  _grantRole */\n  shl(0x20, tag_14)\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1021:1053  _grantRole(BURNER_ROLE, burner_) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n  pop\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1111:1143  _grantRole(PAUSER_ROLE, pauser_) */\n  tag_17\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":550:574  keccak256(\"PAUSER_ROLE\") */\n  0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1135:1142  pauser_ */\n  dup3\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1111:1121  _grantRole */\n  shl(0x20, tag_14)\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1111:1143  _grantRole(PAUSER_ROLE, pauser_) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n  pop\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":752:1217  constructor(address minter_, address burner_, address pauser_) ERC20(\"MyToken\", \"TKN\") {... */\n  pop\n  pop\n  pop\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":314:1608  contract RealCrypto is ERC20, AccessControl, Pausable{... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_20\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_21)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_22\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_23\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_24)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_19:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_21:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_29:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_31:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_32:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_61\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_31\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_33:\n    /* \"#utility.yul\":641:665   */\n  tag_63\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_32\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_64\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_64:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_34:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_66\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_33\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_3:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  dup1\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_69\n  tag_29\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":966:1085   */\ntag_68:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_70\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_34\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_71\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_34\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_72\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_34\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1514:1613   */\ntag_35:\n    /* \"#utility.yul\":1566:1572   */\n  0x00\n    /* \"#utility.yul\":1600:1605   */\n  dup2\n    /* \"#utility.yul\":1594:1606   */\n  mload\n    /* \"#utility.yul\":1584:1606   */\n  swap1\n  pop\n    /* \"#utility.yul\":1514:1613   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1619:1799   */\ntag_36:\n    /* \"#utility.yul\":1667:1744   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1664:1665   */\n  0x00\n    /* \"#utility.yul\":1657:1745   */\n  mstore\n    /* \"#utility.yul\":1764:1768   */\n  0x41\n    /* \"#utility.yul\":1761:1762   */\n  0x04\n    /* \"#utility.yul\":1754:1769   */\n  mstore\n    /* \"#utility.yul\":1788:1792   */\n  0x24\n    /* \"#utility.yul\":1785:1786   */\n  0x00\n    /* \"#utility.yul\":1778:1793   */\n  revert\n    /* \"#utility.yul\":1805:1985   */\ntag_37:\n    /* \"#utility.yul\":1853:1930   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1850:1851   */\n  0x00\n    /* \"#utility.yul\":1843:1931   */\n  mstore\n    /* \"#utility.yul\":1950:1954   */\n  0x22\n    /* \"#utility.yul\":1947:1948   */\n  0x04\n    /* \"#utility.yul\":1940:1955   */\n  mstore\n    /* \"#utility.yul\":1974:1978   */\n  0x24\n    /* \"#utility.yul\":1971:1972   */\n  0x00\n    /* \"#utility.yul\":1964:1979   */\n  revert\n    /* \"#utility.yul\":1991:2311   */\ntag_38:\n    /* \"#utility.yul\":2035:2041   */\n  0x00\n    /* \"#utility.yul\":2072:2073   */\n  0x02\n    /* \"#utility.yul\":2066:2070   */\n  dup3\n    /* \"#utility.yul\":2062:2074   */\n  div\n    /* \"#utility.yul\":2052:2074   */\n  swap1\n  pop\n    /* \"#utility.yul\":2119:2120   */\n  0x01\n    /* \"#utility.yul\":2113:2117   */\n  dup3\n    /* \"#utility.yul\":2109:2121   */\n  and\n    /* \"#utility.yul\":2140:2158   */\n  dup1\n    /* \"#utility.yul\":2130:2211   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2196:2200   */\n  0x7f\n    /* \"#utility.yul\":2188:2194   */\n  dup3\n    /* \"#utility.yul\":2184:2201   */\n  and\n    /* \"#utility.yul\":2174:2201   */\n  swap2\n  pop\n    /* \"#utility.yul\":2130:2211   */\ntag_77:\n    /* \"#utility.yul\":2258:2260   */\n  0x20\n    /* \"#utility.yul\":2250:2256   */\n  dup3\n    /* \"#utility.yul\":2247:2261   */\n  lt\n    /* \"#utility.yul\":2227:2245   */\n  dup2\n    /* \"#utility.yul\":2224:2262   */\n  sub\n    /* \"#utility.yul\":2221:2305   */\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2277:2295   */\n  tag_79\n  tag_37\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2221:2305   */\ntag_78:\n    /* \"#utility.yul\":2042:2311   */\n  pop\n    /* \"#utility.yul\":1991:2311   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2317:2458   */\ntag_39:\n    /* \"#utility.yul\":2366:2370   */\n  0x00\n    /* \"#utility.yul\":2389:2392   */\n  dup2\n    /* \"#utility.yul\":2381:2392   */\n  swap1\n  pop\n    /* \"#utility.yul\":2412:2415   */\n  dup2\n    /* \"#utility.yul\":2409:2410   */\n  0x00\n    /* \"#utility.yul\":2402:2416   */\n  mstore\n    /* \"#utility.yul\":2446:2450   */\n  0x20\n    /* \"#utility.yul\":2443:2444   */\n  0x00\n    /* \"#utility.yul\":2433:2451   */\n  keccak256\n    /* \"#utility.yul\":2425:2451   */\n  swap1\n  pop\n    /* \"#utility.yul\":2317:2458   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2464:2557   */\ntag_40:\n    /* \"#utility.yul\":2501:2507   */\n  0x00\n    /* \"#utility.yul\":2548:2550   */\n  0x20\n    /* \"#utility.yul\":2543:2545   */\n  0x1f\n    /* \"#utility.yul\":2536:2541   */\n  dup4\n    /* \"#utility.yul\":2532:2546   */\n  add\n    /* \"#utility.yul\":2528:2551   */\n  div\n    /* \"#utility.yul\":2518:2551   */\n  swap1\n  pop\n    /* \"#utility.yul\":2464:2557   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2563:2670   */\ntag_41:\n    /* \"#utility.yul\":2607:2615   */\n  0x00\n    /* \"#utility.yul\":2657:2662   */\n  dup3\n    /* \"#utility.yul\":2651:2655   */\n  dup3\n    /* \"#utility.yul\":2647:2663   */\n  shl\n    /* \"#utility.yul\":2626:2663   */\n  swap1\n  pop\n    /* \"#utility.yul\":2563:2670   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2676:3069   */\ntag_42:\n    /* \"#utility.yul\":2745:2751   */\n  0x00\n    /* \"#utility.yul\":2795:2796   */\n  0x08\n    /* \"#utility.yul\":2783:2793   */\n  dup4\n    /* \"#utility.yul\":2779:2797   */\n  mul\n    /* \"#utility.yul\":2818:2915   */\n  tag_84\n    /* \"#utility.yul\":2848:2914   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2837:2846   */\n  dup3\n    /* \"#utility.yul\":2818:2915   */\n  tag_41\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2936:2975   */\n  tag_85\n    /* \"#utility.yul\":2966:2974   */\n  dup7\n    /* \"#utility.yul\":2955:2964   */\n  dup4\n    /* \"#utility.yul\":2936:2975   */\n  tag_41\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2924:2975   */\n  swap6\n  pop\n    /* \"#utility.yul\":3008:3012   */\n  dup1\n    /* \"#utility.yul\":3004:3013   */\n  not\n    /* \"#utility.yul\":2997:3002   */\n  dup5\n    /* \"#utility.yul\":2993:3014   */\n  and\n    /* \"#utility.yul\":2984:3014   */\n  swap4\n  pop\n    /* \"#utility.yul\":3057:3061   */\n  dup1\n    /* \"#utility.yul\":3047:3055   */\n  dup7\n    /* \"#utility.yul\":3043:3062   */\n  and\n    /* \"#utility.yul\":3036:3041   */\n  dup5\n    /* \"#utility.yul\":3033:3063   */\n  or\n    /* \"#utility.yul\":3023:3063   */\n  swap3\n  pop\n    /* \"#utility.yul\":2752:3069   */\n  pop\n  pop\n    /* \"#utility.yul\":2676:3069   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3075:3152   */\ntag_43:\n    /* \"#utility.yul\":3112:3119   */\n  0x00\n    /* \"#utility.yul\":3141:3146   */\n  dup2\n    /* \"#utility.yul\":3130:3146   */\n  swap1\n  pop\n    /* \"#utility.yul\":3075:3152   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3158:3218   */\ntag_44:\n    /* \"#utility.yul\":3186:3189   */\n  0x00\n    /* \"#utility.yul\":3207:3212   */\n  dup2\n    /* \"#utility.yul\":3200:3212   */\n  swap1\n  pop\n    /* \"#utility.yul\":3158:3218   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3224:3366   */\ntag_45:\n    /* \"#utility.yul\":3274:3283   */\n  0x00\n    /* \"#utility.yul\":3307:3360   */\n  tag_89\n    /* \"#utility.yul\":3325:3359   */\n  tag_90\n    /* \"#utility.yul\":3334:3358   */\n  tag_91\n    /* \"#utility.yul\":3352:3357   */\n  dup5\n    /* \"#utility.yul\":3334:3358   */\n  tag_43\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3325:3359   */\n  tag_44\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3307:3360   */\n  tag_43\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3294:3360   */\n  swap1\n  pop\n    /* \"#utility.yul\":3224:3366   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3372:3447   */\ntag_46:\n    /* \"#utility.yul\":3415:3418   */\n  0x00\n    /* \"#utility.yul\":3436:3441   */\n  dup2\n    /* \"#utility.yul\":3429:3441   */\n  swap1\n  pop\n    /* \"#utility.yul\":3372:3447   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3453:3722   */\ntag_47:\n    /* \"#utility.yul\":3563:3602   */\n  tag_94\n    /* \"#utility.yul\":3594:3601   */\n  dup4\n    /* \"#utility.yul\":3563:3602   */\n  tag_45\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3624:3715   */\n  tag_95\n    /* \"#utility.yul\":3673:3714   */\n  tag_96\n    /* \"#utility.yul\":3697:3713   */\n  dup3\n    /* \"#utility.yul\":3673:3714   */\n  tag_46\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3665:3671   */\n  dup5\n    /* \"#utility.yul\":3658:3662   */\n  dup5\n    /* \"#utility.yul\":3652:3663   */\n  sload\n    /* \"#utility.yul\":3624:3715   */\n  tag_42\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3618:3622   */\n  dup3\n    /* \"#utility.yul\":3611:3716   */\n  sstore\n    /* \"#utility.yul\":3529:3722   */\n  pop\n    /* \"#utility.yul\":3453:3722   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3728:3801   */\ntag_48:\n    /* \"#utility.yul\":3773:3776   */\n  0x00\n    /* \"#utility.yul\":3728:3801   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3807:3996   */\ntag_49:\n    /* \"#utility.yul\":3884:3916   */\n  tag_99\n  tag_48\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3925:3990   */\n  tag_100\n    /* \"#utility.yul\":3983:3989   */\n  dup2\n    /* \"#utility.yul\":3975:3981   */\n  dup5\n    /* \"#utility.yul\":3969:3973   */\n  dup5\n    /* \"#utility.yul\":3925:3990   */\n  tag_47\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":3860:3996   */\n  pop\n    /* \"#utility.yul\":3807:3996   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4002:4188   */\ntag_50:\n    /* \"#utility.yul\":4062:4182   */\ntag_102:\n    /* \"#utility.yul\":4079:4082   */\n  dup2\n    /* \"#utility.yul\":4072:4077   */\n  dup2\n    /* \"#utility.yul\":4069:4083   */\n  lt\n    /* \"#utility.yul\":4062:4182   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":4133:4172   */\n  tag_105\n    /* \"#utility.yul\":4170:4171   */\n  0x00\n    /* \"#utility.yul\":4163:4168   */\n  dup3\n    /* \"#utility.yul\":4133:4172   */\n  tag_49\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4106:4107   */\n  0x01\n    /* \"#utility.yul\":4099:4104   */\n  dup2\n    /* \"#utility.yul\":4095:4108   */\n  add\n    /* \"#utility.yul\":4086:4108   */\n  swap1\n  pop\n    /* \"#utility.yul\":4062:4182   */\n  jump(tag_102)\ntag_104:\n    /* \"#utility.yul\":4002:4188   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4194:4737   */\ntag_51:\n    /* \"#utility.yul\":4295:4297   */\n  0x1f\n    /* \"#utility.yul\":4290:4293   */\n  dup3\n    /* \"#utility.yul\":4287:4298   */\n  gt\n    /* \"#utility.yul\":4284:4730   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":4329:4367   */\n  tag_108\n    /* \"#utility.yul\":4361:4366   */\n  dup2\n    /* \"#utility.yul\":4329:4367   */\n  tag_39\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4413:4442   */\n  tag_109\n    /* \"#utility.yul\":4431:4441   */\n  dup5\n    /* \"#utility.yul\":4413:4442   */\n  tag_40\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":4403:4411   */\n  dup2\n    /* \"#utility.yul\":4399:4443   */\n  add\n    /* \"#utility.yul\":4596:4598   */\n  0x20\n    /* \"#utility.yul\":4584:4594   */\n  dup6\n    /* \"#utility.yul\":4581:4599   */\n  lt\n    /* \"#utility.yul\":4578:4627   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":4617:4625   */\n  dup2\n    /* \"#utility.yul\":4602:4625   */\n  swap1\n  pop\n    /* \"#utility.yul\":4578:4627   */\ntag_110:\n    /* \"#utility.yul\":4640:4720   */\n  tag_111\n    /* \"#utility.yul\":4696:4718   */\n  tag_112\n    /* \"#utility.yul\":4714:4717   */\n  dup6\n    /* \"#utility.yul\":4696:4718   */\n  tag_40\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4686:4694   */\n  dup4\n    /* \"#utility.yul\":4682:4719   */\n  add\n    /* \"#utility.yul\":4669:4680   */\n  dup3\n    /* \"#utility.yul\":4640:4720   */\n  tag_50\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":4299:4730   */\n  pop\n  pop\n    /* \"#utility.yul\":4284:4730   */\ntag_107:\n    /* \"#utility.yul\":4194:4737   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4743:4860   */\ntag_52:\n    /* \"#utility.yul\":4797:4805   */\n  0x00\n    /* \"#utility.yul\":4847:4852   */\n  dup3\n    /* \"#utility.yul\":4841:4845   */\n  dup3\n    /* \"#utility.yul\":4837:4853   */\n  shr\n    /* \"#utility.yul\":4816:4853   */\n  swap1\n  pop\n    /* \"#utility.yul\":4743:4860   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4866:5035   */\ntag_53:\n    /* \"#utility.yul\":4910:4916   */\n  0x00\n    /* \"#utility.yul\":4943:4994   */\n  tag_115\n    /* \"#utility.yul\":4991:4992   */\n  0x00\n    /* \"#utility.yul\":4987:4993   */\n  not\n    /* \"#utility.yul\":4979:4984   */\n  dup5\n    /* \"#utility.yul\":4976:4977   */\n  0x08\n    /* \"#utility.yul\":4972:4985   */\n  mul\n    /* \"#utility.yul\":4943:4994   */\n  tag_52\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":4939:4995   */\n  not\n    /* \"#utility.yul\":5024:5028   */\n  dup1\n    /* \"#utility.yul\":5018:5022   */\n  dup4\n    /* \"#utility.yul\":5014:5029   */\n  and\n    /* \"#utility.yul\":5004:5029   */\n  swap2\n  pop\n    /* \"#utility.yul\":4917:5035   */\n  pop\n    /* \"#utility.yul\":4866:5035   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5040:5335   */\ntag_54:\n    /* \"#utility.yul\":5116:5120   */\n  0x00\n    /* \"#utility.yul\":5262:5291   */\n  tag_117\n    /* \"#utility.yul\":5287:5290   */\n  dup4\n    /* \"#utility.yul\":5281:5285   */\n  dup4\n    /* \"#utility.yul\":5262:5291   */\n  tag_53\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5254:5291   */\n  swap2\n  pop\n    /* \"#utility.yul\":5324:5327   */\n  dup3\n    /* \"#utility.yul\":5321:5322   */\n  0x02\n    /* \"#utility.yul\":5317:5328   */\n  mul\n    /* \"#utility.yul\":5311:5315   */\n  dup3\n    /* \"#utility.yul\":5308:5329   */\n  or\n    /* \"#utility.yul\":5300:5329   */\n  swap1\n  pop\n    /* \"#utility.yul\":5040:5335   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5340:6735   */\ntag_9:\n    /* \"#utility.yul\":5457:5494   */\n  tag_119\n    /* \"#utility.yul\":5490:5493   */\n  dup3\n    /* \"#utility.yul\":5457:5494   */\n  tag_35\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5559:5577   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5551:5557   */\n  dup2\n    /* \"#utility.yul\":5548:5578   */\n  gt\n    /* \"#utility.yul\":5545:5601   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":5581:5599   */\n  tag_121\n  tag_36\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5545:5601   */\ntag_120:\n    /* \"#utility.yul\":5625:5663   */\n  tag_122\n    /* \"#utility.yul\":5657:5661   */\n  dup3\n    /* \"#utility.yul\":5651:5662   */\n  sload\n    /* \"#utility.yul\":5625:5663   */\n  tag_38\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":5710:5777   */\n  tag_123\n    /* \"#utility.yul\":5770:5776   */\n  dup3\n    /* \"#utility.yul\":5762:5768   */\n  dup3\n    /* \"#utility.yul\":5756:5760   */\n  dup6\n    /* \"#utility.yul\":5710:5777   */\n  tag_51\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5828:5832   */\n  0x20\n    /* \"#utility.yul\":5815:5832   */\n  swap1\n  pop\n    /* \"#utility.yul\":5860:5862   */\n  0x1f\n    /* \"#utility.yul\":5852:5858   */\n  dup4\n    /* \"#utility.yul\":5849:5863   */\n  gt\n    /* \"#utility.yul\":5877:5878   */\n  0x01\n    /* \"#utility.yul\":5872:6490   */\n  dup2\n  eq\n  tag_125\n  jumpi\n    /* \"#utility.yul\":6534:6535   */\n  0x00\n    /* \"#utility.yul\":6551:6557   */\n  dup5\n    /* \"#utility.yul\":6548:6625   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":6600:6609   */\n  dup3\n    /* \"#utility.yul\":6595:6598   */\n  dup8\n    /* \"#utility.yul\":6591:6610   */\n  add\n    /* \"#utility.yul\":6585:6611   */\n  mload\n    /* \"#utility.yul\":6576:6611   */\n  swap1\n  pop\n    /* \"#utility.yul\":6548:6625   */\ntag_126:\n    /* \"#utility.yul\":6651:6718   */\n  tag_127\n    /* \"#utility.yul\":6711:6717   */\n  dup6\n    /* \"#utility.yul\":6704:6709   */\n  dup3\n    /* \"#utility.yul\":6651:6718   */\n  tag_54\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6645:6649   */\n  dup7\n    /* \"#utility.yul\":6638:6719   */\n  sstore\n    /* \"#utility.yul\":6507:6729   */\n  pop\n    /* \"#utility.yul\":5842:6729   */\n  jump(tag_124)\n    /* \"#utility.yul\":5872:6490   */\ntag_125:\n    /* \"#utility.yul\":5924:5928   */\n  0x1f\n    /* \"#utility.yul\":5920:5929   */\n  not\n    /* \"#utility.yul\":5912:5918   */\n  dup5\n    /* \"#utility.yul\":5908:5930   */\n  and\n    /* \"#utility.yul\":5958:5995   */\n  tag_128\n    /* \"#utility.yul\":5990:5994   */\n  dup7\n    /* \"#utility.yul\":5958:5995   */\n  tag_39\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6017:6018   */\n  0x00\n    /* \"#utility.yul\":6031:6239   */\ntag_129:\n    /* \"#utility.yul\":6045:6052   */\n  dup3\n    /* \"#utility.yul\":6042:6043   */\n  dup2\n    /* \"#utility.yul\":6039:6053   */\n  lt\n    /* \"#utility.yul\":6031:6239   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":6124:6133   */\n  dup5\n    /* \"#utility.yul\":6119:6122   */\n  dup10\n    /* \"#utility.yul\":6115:6134   */\n  add\n    /* \"#utility.yul\":6109:6135   */\n  mload\n    /* \"#utility.yul\":6101:6107   */\n  dup3\n    /* \"#utility.yul\":6094:6136   */\n  sstore\n    /* \"#utility.yul\":6175:6176   */\n  0x01\n    /* \"#utility.yul\":6167:6173   */\n  dup3\n    /* \"#utility.yul\":6163:6177   */\n  add\n    /* \"#utility.yul\":6153:6177   */\n  swap2\n  pop\n    /* \"#utility.yul\":6222:6224   */\n  0x20\n    /* \"#utility.yul\":6211:6220   */\n  dup6\n    /* \"#utility.yul\":6207:6225   */\n  add\n    /* \"#utility.yul\":6194:6225   */\n  swap5\n  pop\n    /* \"#utility.yul\":6068:6072   */\n  0x20\n    /* \"#utility.yul\":6065:6066   */\n  dup2\n    /* \"#utility.yul\":6061:6073   */\n  add\n    /* \"#utility.yul\":6056:6073   */\n  swap1\n  pop\n    /* \"#utility.yul\":6031:6239   */\n  jump(tag_129)\ntag_131:\n    /* \"#utility.yul\":6267:6273   */\n  dup7\n    /* \"#utility.yul\":6258:6265   */\n  dup4\n    /* \"#utility.yul\":6255:6274   */\n  lt\n    /* \"#utility.yul\":6252:6431   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":6325:6334   */\n  dup5\n    /* \"#utility.yul\":6320:6323   */\n  dup10\n    /* \"#utility.yul\":6316:6335   */\n  add\n    /* \"#utility.yul\":6310:6336   */\n  mload\n    /* \"#utility.yul\":6368:6416   */\n  tag_133\n    /* \"#utility.yul\":6410:6414   */\n  0x1f\n    /* \"#utility.yul\":6402:6408   */\n  dup10\n    /* \"#utility.yul\":6398:6415   */\n  and\n    /* \"#utility.yul\":6387:6396   */\n  dup3\n    /* \"#utility.yul\":6368:6416   */\n  tag_53\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":6360:6366   */\n  dup4\n    /* \"#utility.yul\":6353:6417   */\n  sstore\n    /* \"#utility.yul\":6275:6431   */\n  pop\n    /* \"#utility.yul\":6252:6431   */\ntag_132:\n    /* \"#utility.yul\":6477:6478   */\n  0x01\n    /* \"#utility.yul\":6473:6474   */\n  0x02\n    /* \"#utility.yul\":6465:6471   */\n  dup9\n    /* \"#utility.yul\":6461:6475   */\n  mul\n    /* \"#utility.yul\":6457:6479   */\n  add\n    /* \"#utility.yul\":6451:6455   */\n  dup9\n    /* \"#utility.yul\":6444:6480   */\n  sstore\n    /* \"#utility.yul\":5879:6490   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5842:6729   */\ntag_124:\n  pop\n    /* \"#utility.yul\":5432:6735   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5340:6735   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":314:1608  contract RealCrypto is ERC20, AccessControl, Pausable{... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":314:1608  contract RealCrypto is ERC20, AccessControl, Pausable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x5c975abb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x248a9ca3\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x282c51f3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_8:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":443:505  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_9:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_10:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_12:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1232:1398  function mint(address to_ , uint amount_) public  {... */\n    tag_13:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_14:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1523:1595  function pause() public onlyRole(PAUSER_ROLE){... */\n    tag_16:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_17:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1406:1515  function burn(address to_ , uint amount_) public onlyRole(BURNER_ROLE) {... */\n    tag_19:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_20:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":374:436  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_22:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_23:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_24:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      tag_112\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":512:574  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_25:\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_118\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_120\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_124\n      swap1\n      tag_123\n      jump\t// in\n    tag_124:\n      dup1\n      iszero\n      tag_125\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_126\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_125)\n    tag_126:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_127:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_127\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":443:505  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_60:\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":481:505  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":443:505  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_56\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_143\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_144\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_146\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_147\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_146:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_153\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_152:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1232:1398  function mint(address to_ , uint amount_) public  {... */\n    tag_75:\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1301:1333  hasRole(MINTER_ROLE, msg.sender) */\n      tag_155\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":412:436  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1322:1332  msg.sender */\n      caller\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1301:1308  hasRole */\n      tag_88\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1301:1333  hasRole(MINTER_ROLE, msg.sender) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1293:1360  require(hasRole(MINTER_ROLE, msg.sender), \"Caller is not a minter\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1371:1390  _mint(to_, amount_) */\n      tag_159\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1377:1380  to_ */\n      dup3\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1382:1389  amount_ */\n      dup3\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1371:1376  _mint */\n      tag_160\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1371:1390  _mint(to_, amount_) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1232:1398  function mint(address to_ , uint amount_) public  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1523:1595  function pause() public onlyRole(PAUSER_ROLE){... */\n    tag_85:\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":550:574  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_144\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1579:1587  _pause() */\n      tag_166\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1579:1585  _pause */\n      tag_167\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1579:1587  _pause() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1523:1595  function pause() public onlyRole(PAUSER_ROLE){... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_170\n      swap1\n      tag_123\n      jump\t// in\n    tag_170:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_171\n      swap1\n      tag_123\n      jump\t// in\n    tag_171:\n      dup1\n      iszero\n      tag_172\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_173\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_172)\n    tag_173:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_174:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_174\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1406:1515  function burn(address to_ , uint amount_) public onlyRole(BURNER_ROLE) {... */\n    tag_95:\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":481:505  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_176\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_144\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1488:1507  _burn(to_, amount_) */\n      tag_178\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1494:1497  to_ */\n      dup4\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1499:1506  amount_ */\n      dup4\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1488:1493  _burn */\n      tag_179\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1488:1507  _burn(to_, amount_) */\n      jump\t// in\n    tag_178:\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":1406:1515  function burn(address to_ , uint amount_) public onlyRole(BURNER_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":374:436  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_104:\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":412:436  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":374:436  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_56\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_185\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_144\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_153\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_187:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":512:574  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_115:\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":550:574  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":512:574  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_210\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_211\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_212\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_214\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_88\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_215\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_216\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_213)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_213:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_219\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_88\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_221\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_218)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_218:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_228\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_229\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x06\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_231\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_232\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_243\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_246\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_248)\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_252)\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_253\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_255\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_88\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap3\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_260\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_77\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_261:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_265:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_267:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_268:\n        /* \"#utility.yul\":561:584   */\n      tag_304\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_267\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_305:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_269:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_307\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_268\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_31:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_310\n      tag_265\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":833:952   */\n    tag_309:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_311\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_269\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_270:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_271:\n        /* \"#utility.yul\":1268:1289   */\n      tag_314\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_270\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_34:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_316\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_271\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_272:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_273:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_274:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_320:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_320)\n    tag_322:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_275:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_276:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_325\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_272\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":2329:2400   */\n      tag_326\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_273\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_327\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_274\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":2499:2528   */\n      tag_328\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_275\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_38:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_330\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_276\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2986   */\n    tag_277:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2937:2979   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2930:2935   */\n      dup3\n        /* \"#utility.yul\":2926:2980   */\n      and\n        /* \"#utility.yul\":2915:2980   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2992:3088   */\n    tag_278:\n        /* \"#utility.yul\":3029:3036   */\n      0x00\n        /* \"#utility.yul\":3058:3082   */\n      tag_333\n        /* \"#utility.yul\":3076:3081   */\n      dup3\n        /* \"#utility.yul\":3058:3082   */\n      tag_277\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":3047:3082   */\n      swap1\n      pop\n        /* \"#utility.yul\":2992:3088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3094:3216   */\n    tag_279:\n        /* \"#utility.yul\":3167:3191   */\n      tag_335\n        /* \"#utility.yul\":3185:3190   */\n      dup2\n        /* \"#utility.yul\":3167:3191   */\n      tag_278\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3160:3165   */\n      dup2\n        /* \"#utility.yul\":3157:3192   */\n      eq\n        /* \"#utility.yul\":3147:3210   */\n      tag_336\n      jumpi\n        /* \"#utility.yul\":3206:3207   */\n      0x00\n        /* \"#utility.yul\":3203:3204   */\n      dup1\n        /* \"#utility.yul\":3196:3208   */\n      revert\n        /* \"#utility.yul\":3147:3210   */\n    tag_336:\n        /* \"#utility.yul\":3094:3216   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3222:3361   */\n    tag_280:\n        /* \"#utility.yul\":3268:3273   */\n      0x00\n        /* \"#utility.yul\":3306:3312   */\n      dup2\n        /* \"#utility.yul\":3293:3313   */\n      calldataload\n        /* \"#utility.yul\":3284:3313   */\n      swap1\n      pop\n        /* \"#utility.yul\":3322:3355   */\n      tag_338\n        /* \"#utility.yul\":3349:3354   */\n      dup2\n        /* \"#utility.yul\":3322:3355   */\n      tag_279\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3222:3361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3367:3444   */\n    tag_281:\n        /* \"#utility.yul\":3404:3411   */\n      0x00\n        /* \"#utility.yul\":3433:3438   */\n      dup2\n        /* \"#utility.yul\":3422:3438   */\n      swap1\n      pop\n        /* \"#utility.yul\":3367:3444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3450:3572   */\n    tag_282:\n        /* \"#utility.yul\":3523:3547   */\n      tag_341\n        /* \"#utility.yul\":3541:3546   */\n      dup2\n        /* \"#utility.yul\":3523:3547   */\n      tag_281\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3516:3521   */\n      dup2\n        /* \"#utility.yul\":3513:3548   */\n      eq\n        /* \"#utility.yul\":3503:3566   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":3562:3563   */\n      0x00\n        /* \"#utility.yul\":3559:3560   */\n      dup1\n        /* \"#utility.yul\":3552:3564   */\n      revert\n        /* \"#utility.yul\":3503:3566   */\n    tag_342:\n        /* \"#utility.yul\":3450:3572   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3578:3717   */\n    tag_283:\n        /* \"#utility.yul\":3624:3629   */\n      0x00\n        /* \"#utility.yul\":3662:3668   */\n      dup2\n        /* \"#utility.yul\":3649:3669   */\n      calldataload\n        /* \"#utility.yul\":3640:3669   */\n      swap1\n      pop\n        /* \"#utility.yul\":3678:3711   */\n      tag_344\n        /* \"#utility.yul\":3705:3710   */\n      dup2\n        /* \"#utility.yul\":3678:3711   */\n      tag_282\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3578:3717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3723:4197   */\n    tag_41:\n        /* \"#utility.yul\":3791:3797   */\n      0x00\n        /* \"#utility.yul\":3799:3805   */\n      dup1\n        /* \"#utility.yul\":3848:3850   */\n      0x40\n        /* \"#utility.yul\":3836:3845   */\n      dup4\n        /* \"#utility.yul\":3827:3834   */\n      dup6\n        /* \"#utility.yul\":3823:3846   */\n      sub\n        /* \"#utility.yul\":3819:3851   */\n      slt\n        /* \"#utility.yul\":3816:3935   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":3854:3933   */\n      tag_347\n      tag_265\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3816:3935   */\n    tag_346:\n        /* \"#utility.yul\":3974:3975   */\n      0x00\n        /* \"#utility.yul\":3999:4052   */\n      tag_348\n        /* \"#utility.yul\":4044:4051   */\n      dup6\n        /* \"#utility.yul\":4035:4041   */\n      dup3\n        /* \"#utility.yul\":4024:4033   */\n      dup7\n        /* \"#utility.yul\":4020:4042   */\n      add\n        /* \"#utility.yul\":3999:4052   */\n      tag_280\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":3989:4052   */\n      swap3\n      pop\n        /* \"#utility.yul\":3945:4062   */\n      pop\n        /* \"#utility.yul\":4101:4103   */\n      0x20\n        /* \"#utility.yul\":4127:4180   */\n      tag_349\n        /* \"#utility.yul\":4172:4179   */\n      dup6\n        /* \"#utility.yul\":4163:4169   */\n      dup3\n        /* \"#utility.yul\":4152:4161   */\n      dup7\n        /* \"#utility.yul\":4148:4170   */\n      add\n        /* \"#utility.yul\":4127:4180   */\n      tag_283\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4117:4180   */\n      swap2\n      pop\n        /* \"#utility.yul\":4072:4190   */\n      pop\n        /* \"#utility.yul\":3723:4197   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4203:4321   */\n    tag_284:\n        /* \"#utility.yul\":4290:4314   */\n      tag_351\n        /* \"#utility.yul\":4308:4313   */\n      dup2\n        /* \"#utility.yul\":4290:4314   */\n      tag_281\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4285:4288   */\n      dup3\n        /* \"#utility.yul\":4278:4315   */\n      mstore\n        /* \"#utility.yul\":4203:4321   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4327:4549   */\n    tag_47:\n        /* \"#utility.yul\":4420:4424   */\n      0x00\n        /* \"#utility.yul\":4458:4460   */\n      0x20\n        /* \"#utility.yul\":4447:4456   */\n      dup3\n        /* \"#utility.yul\":4443:4461   */\n      add\n        /* \"#utility.yul\":4435:4461   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4542   */\n      tag_353\n        /* \"#utility.yul\":4539:4540   */\n      0x00\n        /* \"#utility.yul\":4528:4537   */\n      dup4\n        /* \"#utility.yul\":4524:4541   */\n      add\n        /* \"#utility.yul\":4515:4521   */\n      dup5\n        /* \"#utility.yul\":4471:4542   */\n      tag_284\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4327:4549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4555:5174   */\n    tag_50:\n        /* \"#utility.yul\":4632:4638   */\n      0x00\n        /* \"#utility.yul\":4640:4646   */\n      dup1\n        /* \"#utility.yul\":4648:4654   */\n      0x00\n        /* \"#utility.yul\":4697:4699   */\n      0x60\n        /* \"#utility.yul\":4685:4694   */\n      dup5\n        /* \"#utility.yul\":4676:4683   */\n      dup7\n        /* \"#utility.yul\":4672:4695   */\n      sub\n        /* \"#utility.yul\":4668:4700   */\n      slt\n        /* \"#utility.yul\":4665:4784   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":4703:4782   */\n      tag_356\n      tag_265\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4665:4784   */\n    tag_355:\n        /* \"#utility.yul\":4823:4824   */\n      0x00\n        /* \"#utility.yul\":4848:4901   */\n      tag_357\n        /* \"#utility.yul\":4893:4900   */\n      dup7\n        /* \"#utility.yul\":4884:4890   */\n      dup3\n        /* \"#utility.yul\":4873:4882   */\n      dup8\n        /* \"#utility.yul\":4869:4891   */\n      add\n        /* \"#utility.yul\":4848:4901   */\n      tag_280\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":4838:4901   */\n      swap4\n      pop\n        /* \"#utility.yul\":4794:4911   */\n      pop\n        /* \"#utility.yul\":4950:4952   */\n      0x20\n        /* \"#utility.yul\":4976:5029   */\n      tag_358\n        /* \"#utility.yul\":5021:5028   */\n      dup7\n        /* \"#utility.yul\":5012:5018   */\n      dup3\n        /* \"#utility.yul\":5001:5010   */\n      dup8\n        /* \"#utility.yul\":4997:5019   */\n      add\n        /* \"#utility.yul\":4976:5029   */\n      tag_280\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":4966:5029   */\n      swap3\n      pop\n        /* \"#utility.yul\":4921:5039   */\n      pop\n        /* \"#utility.yul\":5078:5080   */\n      0x40\n        /* \"#utility.yul\":5104:5157   */\n      tag_359\n        /* \"#utility.yul\":5149:5156   */\n      dup7\n        /* \"#utility.yul\":5140:5146   */\n      dup3\n        /* \"#utility.yul\":5129:5138   */\n      dup8\n        /* \"#utility.yul\":5125:5147   */\n      add\n        /* \"#utility.yul\":5104:5157   */\n      tag_283\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5094:5157   */\n      swap2\n      pop\n        /* \"#utility.yul\":5049:5167   */\n      pop\n        /* \"#utility.yul\":4555:5174   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5180:5257   */\n    tag_285:\n        /* \"#utility.yul\":5217:5224   */\n      0x00\n        /* \"#utility.yul\":5246:5251   */\n      dup2\n        /* \"#utility.yul\":5235:5251   */\n      swap1\n      pop\n        /* \"#utility.yul\":5180:5257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5263:5385   */\n    tag_286:\n        /* \"#utility.yul\":5336:5360   */\n      tag_362\n        /* \"#utility.yul\":5354:5359   */\n      dup2\n        /* \"#utility.yul\":5336:5360   */\n      tag_285\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5329:5334   */\n      dup2\n        /* \"#utility.yul\":5326:5361   */\n      eq\n        /* \"#utility.yul\":5316:5379   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":5375:5376   */\n      0x00\n        /* \"#utility.yul\":5372:5373   */\n      dup1\n        /* \"#utility.yul\":5365:5377   */\n      revert\n        /* \"#utility.yul\":5316:5379   */\n    tag_363:\n        /* \"#utility.yul\":5263:5385   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5391:5530   */\n    tag_287:\n        /* \"#utility.yul\":5437:5442   */\n      0x00\n        /* \"#utility.yul\":5475:5481   */\n      dup2\n        /* \"#utility.yul\":5462:5482   */\n      calldataload\n        /* \"#utility.yul\":5453:5482   */\n      swap1\n      pop\n        /* \"#utility.yul\":5491:5524   */\n      tag_365\n        /* \"#utility.yul\":5518:5523   */\n      dup2\n        /* \"#utility.yul\":5491:5524   */\n      tag_286\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5391:5530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5536:5865   */\n    tag_55:\n        /* \"#utility.yul\":5595:5601   */\n      0x00\n        /* \"#utility.yul\":5644:5646   */\n      0x20\n        /* \"#utility.yul\":5632:5641   */\n      dup3\n        /* \"#utility.yul\":5623:5630   */\n      dup5\n        /* \"#utility.yul\":5619:5642   */\n      sub\n        /* \"#utility.yul\":5615:5647   */\n      slt\n        /* \"#utility.yul\":5612:5731   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":5650:5729   */\n      tag_368\n      tag_265\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5612:5731   */\n    tag_367:\n        /* \"#utility.yul\":5770:5771   */\n      0x00\n        /* \"#utility.yul\":5795:5848   */\n      tag_369\n        /* \"#utility.yul\":5840:5847   */\n      dup5\n        /* \"#utility.yul\":5831:5837   */\n      dup3\n        /* \"#utility.yul\":5820:5829   */\n      dup6\n        /* \"#utility.yul\":5816:5838   */\n      add\n        /* \"#utility.yul\":5795:5848   */\n      tag_287\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":5785:5848   */\n      swap2\n      pop\n        /* \"#utility.yul\":5741:5858   */\n      pop\n        /* \"#utility.yul\":5536:5865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5871:5989   */\n    tag_288:\n        /* \"#utility.yul\":5958:5982   */\n      tag_371\n        /* \"#utility.yul\":5976:5981   */\n      dup2\n        /* \"#utility.yul\":5958:5982   */\n      tag_285\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":5953:5956   */\n      dup3\n        /* \"#utility.yul\":5946:5983   */\n      mstore\n        /* \"#utility.yul\":5871:5989   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5995:6217   */\n    tag_58:\n        /* \"#utility.yul\":6088:6092   */\n      0x00\n        /* \"#utility.yul\":6126:6128   */\n      0x20\n        /* \"#utility.yul\":6115:6124   */\n      dup3\n        /* \"#utility.yul\":6111:6129   */\n      add\n        /* \"#utility.yul\":6103:6129   */\n      swap1\n      pop\n        /* \"#utility.yul\":6139:6210   */\n      tag_373\n        /* \"#utility.yul\":6207:6208   */\n      0x00\n        /* \"#utility.yul\":6196:6205   */\n      dup4\n        /* \"#utility.yul\":6192:6209   */\n      add\n        /* \"#utility.yul\":6183:6189   */\n      dup5\n        /* \"#utility.yul\":6139:6210   */\n      tag_288\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":5995:6217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6223:6697   */\n    tag_64:\n        /* \"#utility.yul\":6291:6297   */\n      0x00\n        /* \"#utility.yul\":6299:6305   */\n      dup1\n        /* \"#utility.yul\":6348:6350   */\n      0x40\n        /* \"#utility.yul\":6336:6345   */\n      dup4\n        /* \"#utility.yul\":6327:6334   */\n      dup6\n        /* \"#utility.yul\":6323:6346   */\n      sub\n        /* \"#utility.yul\":6319:6351   */\n      slt\n        /* \"#utility.yul\":6316:6435   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":6354:6433   */\n      tag_376\n      tag_265\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":6316:6435   */\n    tag_375:\n        /* \"#utility.yul\":6474:6475   */\n      0x00\n        /* \"#utility.yul\":6499:6552   */\n      tag_377\n        /* \"#utility.yul\":6544:6551   */\n      dup6\n        /* \"#utility.yul\":6535:6541   */\n      dup3\n        /* \"#utility.yul\":6524:6533   */\n      dup7\n        /* \"#utility.yul\":6520:6542   */\n      add\n        /* \"#utility.yul\":6499:6552   */\n      tag_287\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":6489:6552   */\n      swap3\n      pop\n        /* \"#utility.yul\":6445:6562   */\n      pop\n        /* \"#utility.yul\":6601:6603   */\n      0x20\n        /* \"#utility.yul\":6627:6680   */\n      tag_378\n        /* \"#utility.yul\":6672:6679   */\n      dup6\n        /* \"#utility.yul\":6663:6669   */\n      dup3\n        /* \"#utility.yul\":6652:6661   */\n      dup7\n        /* \"#utility.yul\":6648:6670   */\n      add\n        /* \"#utility.yul\":6627:6680   */\n      tag_280\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6617:6680   */\n      swap2\n      pop\n        /* \"#utility.yul\":6572:6690   */\n      pop\n        /* \"#utility.yul\":6223:6697   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6703:6789   */\n    tag_289:\n        /* \"#utility.yul\":6738:6745   */\n      0x00\n        /* \"#utility.yul\":6778:6782   */\n      0xff\n        /* \"#utility.yul\":6771:6776   */\n      dup3\n        /* \"#utility.yul\":6767:6783   */\n      and\n        /* \"#utility.yul\":6756:6783   */\n      swap1\n      pop\n        /* \"#utility.yul\":6703:6789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6795:6907   */\n    tag_290:\n        /* \"#utility.yul\":6878:6900   */\n      tag_381\n        /* \"#utility.yul\":6894:6899   */\n      dup2\n        /* \"#utility.yul\":6878:6900   */\n      tag_289\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":6873:6876   */\n      dup3\n        /* \"#utility.yul\":6866:6901   */\n      mstore\n        /* \"#utility.yul\":6795:6907   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6913:7127   */\n    tag_69:\n        /* \"#utility.yul\":7002:7006   */\n      0x00\n        /* \"#utility.yul\":7040:7042   */\n      0x20\n        /* \"#utility.yul\":7029:7038   */\n      dup3\n        /* \"#utility.yul\":7025:7043   */\n      add\n        /* \"#utility.yul\":7017:7043   */\n      swap1\n      pop\n        /* \"#utility.yul\":7053:7120   */\n      tag_383\n        /* \"#utility.yul\":7117:7118   */\n      0x00\n        /* \"#utility.yul\":7106:7115   */\n      dup4\n        /* \"#utility.yul\":7102:7119   */\n      add\n        /* \"#utility.yul\":7093:7099   */\n      dup5\n        /* \"#utility.yul\":7053:7120   */\n      tag_290\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":6913:7127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7133:7462   */\n    tag_81:\n        /* \"#utility.yul\":7192:7198   */\n      0x00\n        /* \"#utility.yul\":7241:7243   */\n      0x20\n        /* \"#utility.yul\":7229:7238   */\n      dup3\n        /* \"#utility.yul\":7220:7227   */\n      dup5\n        /* \"#utility.yul\":7216:7239   */\n      sub\n        /* \"#utility.yul\":7212:7244   */\n      slt\n        /* \"#utility.yul\":7209:7328   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":7247:7326   */\n      tag_386\n      tag_265\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":7209:7328   */\n    tag_385:\n        /* \"#utility.yul\":7367:7368   */\n      0x00\n        /* \"#utility.yul\":7392:7445   */\n      tag_387\n        /* \"#utility.yul\":7437:7444   */\n      dup5\n        /* \"#utility.yul\":7428:7434   */\n      dup3\n        /* \"#utility.yul\":7417:7426   */\n      dup6\n        /* \"#utility.yul\":7413:7435   */\n      add\n        /* \"#utility.yul\":7392:7445   */\n      tag_280\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":7382:7445   */\n      swap2\n      pop\n        /* \"#utility.yul\":7338:7455   */\n      pop\n        /* \"#utility.yul\":7133:7462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7468:7942   */\n    tag_111:\n        /* \"#utility.yul\":7536:7542   */\n      0x00\n        /* \"#utility.yul\":7544:7550   */\n      dup1\n        /* \"#utility.yul\":7593:7595   */\n      0x40\n        /* \"#utility.yul\":7581:7590   */\n      dup4\n        /* \"#utility.yul\":7572:7579   */\n      dup6\n        /* \"#utility.yul\":7568:7591   */\n      sub\n        /* \"#utility.yul\":7564:7596   */\n      slt\n        /* \"#utility.yul\":7561:7680   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":7599:7678   */\n      tag_390\n      tag_265\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":7561:7680   */\n    tag_389:\n        /* \"#utility.yul\":7719:7720   */\n      0x00\n        /* \"#utility.yul\":7744:7797   */\n      tag_391\n        /* \"#utility.yul\":7789:7796   */\n      dup6\n        /* \"#utility.yul\":7780:7786   */\n      dup3\n        /* \"#utility.yul\":7769:7778   */\n      dup7\n        /* \"#utility.yul\":7765:7787   */\n      add\n        /* \"#utility.yul\":7744:7797   */\n      tag_280\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":7734:7797   */\n      swap3\n      pop\n        /* \"#utility.yul\":7690:7807   */\n      pop\n        /* \"#utility.yul\":7846:7848   */\n      0x20\n        /* \"#utility.yul\":7872:7925   */\n      tag_392\n        /* \"#utility.yul\":7917:7924   */\n      dup6\n        /* \"#utility.yul\":7908:7914   */\n      dup3\n        /* \"#utility.yul\":7897:7906   */\n      dup7\n        /* \"#utility.yul\":7893:7915   */\n      add\n        /* \"#utility.yul\":7872:7925   */\n      tag_280\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":7862:7925   */\n      swap2\n      pop\n        /* \"#utility.yul\":7817:7935   */\n      pop\n        /* \"#utility.yul\":7468:7942   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7948:8128   */\n    tag_291:\n        /* \"#utility.yul\":7996:8073   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7993:7994   */\n      0x00\n        /* \"#utility.yul\":7986:8074   */\n      mstore\n        /* \"#utility.yul\":8093:8097   */\n      0x22\n        /* \"#utility.yul\":8090:8091   */\n      0x04\n        /* \"#utility.yul\":8083:8098   */\n      mstore\n        /* \"#utility.yul\":8117:8121   */\n      0x24\n        /* \"#utility.yul\":8114:8115   */\n      0x00\n        /* \"#utility.yul\":8107:8122   */\n      revert\n        /* \"#utility.yul\":8134:8454   */\n    tag_123:\n        /* \"#utility.yul\":8178:8184   */\n      0x00\n        /* \"#utility.yul\":8215:8216   */\n      0x02\n        /* \"#utility.yul\":8209:8213   */\n      dup3\n        /* \"#utility.yul\":8205:8217   */\n      div\n        /* \"#utility.yul\":8195:8217   */\n      swap1\n      pop\n        /* \"#utility.yul\":8262:8263   */\n      0x01\n        /* \"#utility.yul\":8256:8260   */\n      dup3\n        /* \"#utility.yul\":8252:8264   */\n      and\n        /* \"#utility.yul\":8283:8301   */\n      dup1\n        /* \"#utility.yul\":8273:8354   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":8339:8343   */\n      0x7f\n        /* \"#utility.yul\":8331:8337   */\n      dup3\n        /* \"#utility.yul\":8327:8344   */\n      and\n        /* \"#utility.yul\":8317:8344   */\n      swap2\n      pop\n        /* \"#utility.yul\":8273:8354   */\n    tag_395:\n        /* \"#utility.yul\":8401:8403   */\n      0x20\n        /* \"#utility.yul\":8393:8399   */\n      dup3\n        /* \"#utility.yul\":8390:8404   */\n      lt\n        /* \"#utility.yul\":8370:8388   */\n      dup2\n        /* \"#utility.yul\":8367:8405   */\n      sub\n        /* \"#utility.yul\":8364:8448   */\n      tag_396\n      jumpi\n        /* \"#utility.yul\":8420:8438   */\n      tag_397\n      tag_291\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":8364:8448   */\n    tag_396:\n        /* \"#utility.yul\":8185:8454   */\n      pop\n        /* \"#utility.yul\":8134:8454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8460:8632   */\n    tag_292:\n        /* \"#utility.yul\":8600:8624   */\n      0x43616c6c6572206973206e6f742061206d696e74657200000000000000000000\n        /* \"#utility.yul\":8596:8597   */\n      0x00\n        /* \"#utility.yul\":8588:8594   */\n      dup3\n        /* \"#utility.yul\":8584:8598   */\n      add\n        /* \"#utility.yul\":8577:8625   */\n      mstore\n        /* \"#utility.yul\":8460:8632   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8638:9004   */\n    tag_293:\n        /* \"#utility.yul\":8780:8783   */\n      0x00\n        /* \"#utility.yul\":8801:8868   */\n      tag_400\n        /* \"#utility.yul\":8865:8867   */\n      0x16\n        /* \"#utility.yul\":8860:8863   */\n      dup4\n        /* \"#utility.yul\":8801:8868   */\n      tag_273\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":8794:8868   */\n      swap2\n      pop\n        /* \"#utility.yul\":8877:8970   */\n      tag_401\n        /* \"#utility.yul\":8966:8969   */\n      dup3\n        /* \"#utility.yul\":8877:8970   */\n      tag_292\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":8995:8997   */\n      0x20\n        /* \"#utility.yul\":8990:8993   */\n      dup3\n        /* \"#utility.yul\":8986:8998   */\n      add\n        /* \"#utility.yul\":8979:8998   */\n      swap1\n      pop\n        /* \"#utility.yul\":8638:9004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9010:9429   */\n    tag_158:\n        /* \"#utility.yul\":9176:9180   */\n      0x00\n        /* \"#utility.yul\":9214:9216   */\n      0x20\n        /* \"#utility.yul\":9203:9212   */\n      dup3\n        /* \"#utility.yul\":9199:9217   */\n      add\n        /* \"#utility.yul\":9191:9217   */\n      swap1\n      pop\n        /* \"#utility.yul\":9263:9272   */\n      dup2\n        /* \"#utility.yul\":9257:9261   */\n      dup2\n        /* \"#utility.yul\":9253:9273   */\n      sub\n        /* \"#utility.yul\":9249:9250   */\n      0x00\n        /* \"#utility.yul\":9238:9247   */\n      dup4\n        /* \"#utility.yul\":9234:9251   */\n      add\n        /* \"#utility.yul\":9227:9274   */\n      mstore\n        /* \"#utility.yul\":9291:9422   */\n      tag_403\n        /* \"#utility.yul\":9417:9421   */\n      dup2\n        /* \"#utility.yul\":9291:9422   */\n      tag_293\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9283:9422   */\n      swap1\n      pop\n        /* \"#utility.yul\":9010:9429   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9435:9553   */\n    tag_294:\n        /* \"#utility.yul\":9522:9546   */\n      tag_405\n        /* \"#utility.yul\":9540:9545   */\n      dup2\n        /* \"#utility.yul\":9522:9546   */\n      tag_278\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":9517:9520   */\n      dup3\n        /* \"#utility.yul\":9510:9547   */\n      mstore\n        /* \"#utility.yul\":9435:9553   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9559:10001   */\n    tag_199:\n        /* \"#utility.yul\":9708:9712   */\n      0x00\n        /* \"#utility.yul\":9746:9748   */\n      0x60\n        /* \"#utility.yul\":9735:9744   */\n      dup3\n        /* \"#utility.yul\":9731:9749   */\n      add\n        /* \"#utility.yul\":9723:9749   */\n      swap1\n      pop\n        /* \"#utility.yul\":9759:9830   */\n      tag_407\n        /* \"#utility.yul\":9827:9828   */\n      0x00\n        /* \"#utility.yul\":9816:9825   */\n      dup4\n        /* \"#utility.yul\":9812:9829   */\n      add\n        /* \"#utility.yul\":9803:9809   */\n      dup7\n        /* \"#utility.yul\":9759:9830   */\n      tag_294\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":9840:9912   */\n      tag_408\n        /* \"#utility.yul\":9908:9910   */\n      0x20\n        /* \"#utility.yul\":9897:9906   */\n      dup4\n        /* \"#utility.yul\":9893:9911   */\n      add\n        /* \"#utility.yul\":9884:9890   */\n      dup6\n        /* \"#utility.yul\":9840:9912   */\n      tag_284\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":9922:9994   */\n      tag_409\n        /* \"#utility.yul\":9990:9992   */\n      0x40\n        /* \"#utility.yul\":9979:9988   */\n      dup4\n        /* \"#utility.yul\":9975:9993   */\n      add\n        /* \"#utility.yul\":9966:9972   */\n      dup5\n        /* \"#utility.yul\":9922:9994   */\n      tag_284\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":9559:10001   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10007:10229   */\n    tag_204:\n        /* \"#utility.yul\":10100:10104   */\n      0x00\n        /* \"#utility.yul\":10138:10140   */\n      0x20\n        /* \"#utility.yul\":10127:10136   */\n      dup3\n        /* \"#utility.yul\":10123:10141   */\n      add\n        /* \"#utility.yul\":10115:10141   */\n      swap1\n      pop\n        /* \"#utility.yul\":10151:10222   */\n      tag_411\n        /* \"#utility.yul\":10219:10220   */\n      0x00\n        /* \"#utility.yul\":10208:10217   */\n      dup4\n        /* \"#utility.yul\":10204:10221   */\n      add\n        /* \"#utility.yul\":10195:10201   */\n      dup5\n        /* \"#utility.yul\":10151:10222   */\n      tag_294\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":10007:10229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10235:10415   */\n    tag_295:\n        /* \"#utility.yul\":10283:10360   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10280:10281   */\n      0x00\n        /* \"#utility.yul\":10273:10361   */\n      mstore\n        /* \"#utility.yul\":10380:10384   */\n      0x11\n        /* \"#utility.yul\":10377:10378   */\n      0x04\n        /* \"#utility.yul\":10370:10385   */\n      mstore\n        /* \"#utility.yul\":10404:10408   */\n      0x24\n        /* \"#utility.yul\":10401:10402   */\n      0x00\n        /* \"#utility.yul\":10394:10409   */\n      revert\n        /* \"#utility.yul\":10421:10612   */\n    tag_247:\n        /* \"#utility.yul\":10461:10464   */\n      0x00\n        /* \"#utility.yul\":10480:10500   */\n      tag_414\n        /* \"#utility.yul\":10498:10499   */\n      dup3\n        /* \"#utility.yul\":10480:10500   */\n      tag_281\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":10475:10500   */\n      swap2\n      pop\n        /* \"#utility.yul\":10514:10534   */\n      tag_415\n        /* \"#utility.yul\":10532:10533   */\n      dup4\n        /* \"#utility.yul\":10514:10534   */\n      tag_281\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":10509:10534   */\n      swap3\n      pop\n        /* \"#utility.yul\":10557:10558   */\n      dup3\n        /* \"#utility.yul\":10554:10555   */\n      dup3\n        /* \"#utility.yul\":10550:10559   */\n      add\n        /* \"#utility.yul\":10543:10559   */\n      swap1\n      pop\n        /* \"#utility.yul\":10578:10581   */\n      dup1\n        /* \"#utility.yul\":10575:10576   */\n      dup3\n        /* \"#utility.yul\":10572:10582   */\n      gt\n        /* \"#utility.yul\":10569:10605   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":10585:10603   */\n      tag_417\n      tag_295\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":10569:10605   */\n    tag_416:\n        /* \"#utility.yul\":10421:10612   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10618:10950   */\n    tag_258:\n        /* \"#utility.yul\":10739:10743   */\n      0x00\n        /* \"#utility.yul\":10777:10779   */\n      0x40\n        /* \"#utility.yul\":10766:10775   */\n      dup3\n        /* \"#utility.yul\":10762:10780   */\n      add\n        /* \"#utility.yul\":10754:10780   */\n      swap1\n      pop\n        /* \"#utility.yul\":10790:10861   */\n      tag_419\n        /* \"#utility.yul\":10858:10859   */\n      0x00\n        /* \"#utility.yul\":10847:10856   */\n      dup4\n        /* \"#utility.yul\":10843:10860   */\n      add\n        /* \"#utility.yul\":10834:10840   */\n      dup6\n        /* \"#utility.yul\":10790:10861   */\n      tag_294\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":10871:10943   */\n      tag_420\n        /* \"#utility.yul\":10939:10941   */\n      0x20\n        /* \"#utility.yul\":10928:10937   */\n      dup4\n        /* \"#utility.yul\":10924:10942   */\n      add\n        /* \"#utility.yul\":10915:10921   */\n      dup5\n        /* \"#utility.yul\":10871:10943   */\n      tag_288\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":10618:10950   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10956:11122   */\n    tag_296:\n        /* \"#utility.yul\":11096:11114   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":11092:11093   */\n      0x00\n        /* \"#utility.yul\":11084:11090   */\n      dup3\n        /* \"#utility.yul\":11080:11094   */\n      add\n        /* \"#utility.yul\":11073:11115   */\n      mstore\n        /* \"#utility.yul\":10956:11122   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11128:11494   */\n    tag_297:\n        /* \"#utility.yul\":11270:11273   */\n      0x00\n        /* \"#utility.yul\":11291:11358   */\n      tag_423\n        /* \"#utility.yul\":11355:11357   */\n      0x10\n        /* \"#utility.yul\":11350:11353   */\n      dup4\n        /* \"#utility.yul\":11291:11358   */\n      tag_273\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":11284:11358   */\n      swap2\n      pop\n        /* \"#utility.yul\":11367:11460   */\n      tag_424\n        /* \"#utility.yul\":11456:11459   */\n      dup3\n        /* \"#utility.yul\":11367:11460   */\n      tag_296\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":11485:11487   */\n      0x20\n        /* \"#utility.yul\":11480:11483   */\n      dup3\n        /* \"#utility.yul\":11476:11488   */\n      add\n        /* \"#utility.yul\":11469:11488   */\n      swap1\n      pop\n        /* \"#utility.yul\":11128:11494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11500:11919   */\n    tag_263:\n        /* \"#utility.yul\":11666:11670   */\n      0x00\n        /* \"#utility.yul\":11704:11706   */\n      0x20\n        /* \"#utility.yul\":11693:11702   */\n      dup3\n        /* \"#utility.yul\":11689:11707   */\n      add\n        /* \"#utility.yul\":11681:11707   */\n      swap1\n      pop\n        /* \"#utility.yul\":11753:11762   */\n      dup2\n        /* \"#utility.yul\":11747:11751   */\n      dup2\n        /* \"#utility.yul\":11743:11763   */\n      sub\n        /* \"#utility.yul\":11739:11740   */\n      0x00\n        /* \"#utility.yul\":11728:11737   */\n      dup4\n        /* \"#utility.yul\":11724:11741   */\n      add\n        /* \"#utility.yul\":11717:11764   */\n      mstore\n        /* \"#utility.yul\":11781:11912   */\n      tag_426\n        /* \"#utility.yul\":11907:11911   */\n      dup2\n        /* \"#utility.yul\":11781:11912   */\n      tag_297\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":11773:11912   */\n      swap1\n      pop\n        /* \"#utility.yul\":11500:11919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bfbdd952e29a76b60b9607f66d10d9fa6c37320d0d79c79f084e08a5db81df9164736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1369": {
									"entryPoint": null,
									"id": 1369,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_542": {
									"entryPoint": null,
									"id": 542,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_675": {
									"entryPoint": null,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 408,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1254": {
									"entryPoint": 760,
									"id": 1254,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 660,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1418,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1348,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6738:11",
										"nodeType": "YulBlock",
										"src": "0:6738:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "611:79:11",
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:11",
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:11",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:11",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nativeSrc": "670:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nativeSrc": "670:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nativeSrc": "641:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nativeSrc": "631:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nativeSrc": "624:43:11",
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nativeSrc": "621:63:11",
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:11",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nativeSrc": "759:80:11",
													"nodeType": "YulBlock",
													"src": "759:80:11",
													"statements": [
														{
															"nativeSrc": "769:22:11",
															"nodeType": "YulAssignment",
															"src": "769:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:11"
																},
																"nativeSrc": "778:13:11",
																"nodeType": "YulFunctionCall",
																"src": "778:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:11"
																},
																"nativeSrc": "800:33:11",
																"nodeType": "YulFunctionCall",
																"src": "800:33:11"
															},
															"nativeSrc": "800:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:11",
														"nodeType": "YulTypedName",
														"src": "737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:11",
														"nodeType": "YulTypedName",
														"src": "745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:11",
														"nodeType": "YulTypedName",
														"src": "753:5:11",
														"type": ""
													}
												],
												"src": "696:143:11"
											},
											{
												"body": {
													"nativeSrc": "956:552:11",
													"nodeType": "YulBlock",
													"src": "956:552:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1002:83:11",
																"nodeType": "YulBlock",
																"src": "1002:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1004:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:11"
																			},
																			"nativeSrc": "1004:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:11"
																		},
																		"nativeSrc": "1004:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "977:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "986:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "973:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:11"
																		},
																		"nativeSrc": "973:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "998:2:11",
																		"nodeType": "YulLiteral",
																		"src": "998:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "969:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:11"
																},
																"nativeSrc": "969:32:11",
																"nodeType": "YulFunctionCall",
																"src": "969:32:11"
															},
															"nativeSrc": "966:119:11",
															"nodeType": "YulIf",
															"src": "966:119:11"
														},
														{
															"nativeSrc": "1095:128:11",
															"nodeType": "YulBlock",
															"src": "1095:128:11",
															"statements": [
																{
																	"nativeSrc": "1110:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1124:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1114:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1139:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1139:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1185:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1196:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1181:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:11"
																				},
																				"nativeSrc": "1181:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1205:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1149:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:11"
																		},
																		"nativeSrc": "1149:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1139:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1233:129:11",
															"nodeType": "YulBlock",
															"src": "1233:129:11",
															"statements": [
																{
																	"nativeSrc": "1248:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1262:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1252:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1278:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1278:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1324:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1335:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1320:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:11"
																				},
																				"nativeSrc": "1320:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1344:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1288:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:11"
																		},
																		"nativeSrc": "1288:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1278:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1372:129:11",
															"nodeType": "YulBlock",
															"src": "1372:129:11",
															"statements": [
																{
																	"nativeSrc": "1387:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1401:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1391:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1417:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1417:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1463:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1474:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1459:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:11"
																				},
																				"nativeSrc": "1459:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1483:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1427:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:11"
																		},
																		"nativeSrc": "1427:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1417:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:663:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "910:9:11",
														"nodeType": "YulTypedName",
														"src": "910:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "921:7:11",
														"nodeType": "YulTypedName",
														"src": "921:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "933:6:11",
														"nodeType": "YulTypedName",
														"src": "933:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "941:6:11",
														"nodeType": "YulTypedName",
														"src": "941:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "949:6:11",
														"nodeType": "YulTypedName",
														"src": "949:6:11",
														"type": ""
													}
												],
												"src": "845:663:11"
											},
											{
												"body": {
													"nativeSrc": "1573:40:11",
													"nodeType": "YulBlock",
													"src": "1573:40:11",
													"statements": [
														{
															"nativeSrc": "1584:22:11",
															"nodeType": "YulAssignment",
															"src": "1584:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1600:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1600:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1594:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1594:5:11"
																},
																"nativeSrc": "1594:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1594:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1584:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1514:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1556:5:11",
														"nodeType": "YulTypedName",
														"src": "1556:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1566:6:11",
														"nodeType": "YulTypedName",
														"src": "1566:6:11",
														"type": ""
													}
												],
												"src": "1514:99:11"
											},
											{
												"body": {
													"nativeSrc": "1647:152:11",
													"nodeType": "YulBlock",
													"src": "1647:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1664:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1667:77:11",
																		"nodeType": "YulLiteral",
																		"src": "1667:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1657:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:11"
																},
																"nativeSrc": "1657:88:11",
																"nodeType": "YulFunctionCall",
																"src": "1657:88:11"
															},
															"nativeSrc": "1657:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "1657:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1761:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1761:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1764:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1754:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1754:6:11"
																},
																"nativeSrc": "1754:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1754:15:11"
															},
															"nativeSrc": "1754:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1754:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1785:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1785:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1788:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1788:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1778:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1778:6:11"
																},
																"nativeSrc": "1778:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1778:15:11"
															},
															"nativeSrc": "1778:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1778:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1619:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1619:180:11"
											},
											{
												"body": {
													"nativeSrc": "1833:152:11",
													"nodeType": "YulBlock",
													"src": "1833:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1850:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1850:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1853:77:11",
																		"nodeType": "YulLiteral",
																		"src": "1853:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1843:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1843:6:11"
																},
																"nativeSrc": "1843:88:11",
																"nodeType": "YulFunctionCall",
																"src": "1843:88:11"
															},
															"nativeSrc": "1843:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "1843:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1947:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1947:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1950:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1950:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1940:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1940:6:11"
																},
																"nativeSrc": "1940:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1940:15:11"
															},
															"nativeSrc": "1940:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1940:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1971:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1971:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1974:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1964:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1964:6:11"
																},
																"nativeSrc": "1964:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1964:15:11"
															},
															"nativeSrc": "1964:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1964:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1805:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1805:180:11"
											},
											{
												"body": {
													"nativeSrc": "2042:269:11",
													"nodeType": "YulBlock",
													"src": "2042:269:11",
													"statements": [
														{
															"nativeSrc": "2052:22:11",
															"nodeType": "YulAssignment",
															"src": "2052:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2066:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2066:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2072:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2072:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2062:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2062:3:11"
																},
																"nativeSrc": "2062:12:11",
																"nodeType": "YulFunctionCall",
																"src": "2062:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2052:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2052:6:11"
																}
															]
														},
														{
															"nativeSrc": "2083:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2083:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2113:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2113:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2119:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2119:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2109:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2109:3:11"
																},
																"nativeSrc": "2109:12:11",
																"nodeType": "YulFunctionCall",
																"src": "2109:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2087:18:11",
																	"nodeType": "YulTypedName",
																	"src": "2087:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2160:51:11",
																"nodeType": "YulBlock",
																"src": "2160:51:11",
																"statements": [
																	{
																		"nativeSrc": "2174:27:11",
																		"nodeType": "YulAssignment",
																		"src": "2174:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2188:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "2188:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2196:4:11",
																					"nodeType": "YulLiteral",
																					"src": "2196:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2184:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2184:3:11"
																			},
																			"nativeSrc": "2184:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2184:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2174:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2174:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2140:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "2140:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2133:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:11"
																},
																"nativeSrc": "2133:26:11",
																"nodeType": "YulFunctionCall",
																"src": "2133:26:11"
															},
															"nativeSrc": "2130:81:11",
															"nodeType": "YulIf",
															"src": "2130:81:11"
														},
														{
															"body": {
																"nativeSrc": "2263:42:11",
																"nodeType": "YulBlock",
																"src": "2263:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2277:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "2277:16:11"
																			},
																			"nativeSrc": "2277:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2277:18:11"
																		},
																		"nativeSrc": "2277:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2277:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2227:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "2227:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2250:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2250:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2258:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2258:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2247:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2247:2:11"
																		},
																		"nativeSrc": "2247:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2247:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2224:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2224:2:11"
																},
																"nativeSrc": "2224:38:11",
																"nodeType": "YulFunctionCall",
																"src": "2224:38:11"
															},
															"nativeSrc": "2221:84:11",
															"nodeType": "YulIf",
															"src": "2221:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1991:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2026:4:11",
														"nodeType": "YulTypedName",
														"src": "2026:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2035:6:11",
														"nodeType": "YulTypedName",
														"src": "2035:6:11",
														"type": ""
													}
												],
												"src": "1991:320:11"
											},
											{
												"body": {
													"nativeSrc": "2371:87:11",
													"nodeType": "YulBlock",
													"src": "2371:87:11",
													"statements": [
														{
															"nativeSrc": "2381:11:11",
															"nodeType": "YulAssignment",
															"src": "2381:11:11",
															"value": {
																"name": "ptr",
																"nativeSrc": "2389:3:11",
																"nodeType": "YulIdentifier",
																"src": "2389:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2381:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2381:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2409:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2409:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2412:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2412:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2402:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:11"
																},
																"nativeSrc": "2402:14:11",
																"nodeType": "YulFunctionCall",
																"src": "2402:14:11"
															},
															"nativeSrc": "2402:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "2402:14:11"
														},
														{
															"nativeSrc": "2425:26:11",
															"nodeType": "YulAssignment",
															"src": "2425:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2443:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2443:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2446:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2446:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2433:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2433:9:11"
																},
																"nativeSrc": "2433:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2433:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2425:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2425:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2317:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2358:3:11",
														"nodeType": "YulTypedName",
														"src": "2358:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2366:4:11",
														"nodeType": "YulTypedName",
														"src": "2366:4:11",
														"type": ""
													}
												],
												"src": "2317:141:11"
											},
											{
												"body": {
													"nativeSrc": "2508:49:11",
													"nodeType": "YulBlock",
													"src": "2508:49:11",
													"statements": [
														{
															"nativeSrc": "2518:33:11",
															"nodeType": "YulAssignment",
															"src": "2518:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2536:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2536:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2543:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2543:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2532:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:11"
																		},
																		"nativeSrc": "2532:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2548:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2548:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2528:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:11"
																},
																"nativeSrc": "2528:23:11",
																"nodeType": "YulFunctionCall",
																"src": "2528:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2518:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2464:93:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2491:5:11",
														"nodeType": "YulTypedName",
														"src": "2491:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2501:6:11",
														"nodeType": "YulTypedName",
														"src": "2501:6:11",
														"type": ""
													}
												],
												"src": "2464:93:11"
											},
											{
												"body": {
													"nativeSrc": "2616:54:11",
													"nodeType": "YulBlock",
													"src": "2616:54:11",
													"statements": [
														{
															"nativeSrc": "2626:37:11",
															"nodeType": "YulAssignment",
															"src": "2626:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2651:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2651:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2657:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2657:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2647:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2647:3:11"
																},
																"nativeSrc": "2647:16:11",
																"nodeType": "YulFunctionCall",
																"src": "2647:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2626:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "2626:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2563:107:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2591:4:11",
														"nodeType": "YulTypedName",
														"src": "2591:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2597:5:11",
														"nodeType": "YulTypedName",
														"src": "2597:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2607:8:11",
														"nodeType": "YulTypedName",
														"src": "2607:8:11",
														"type": ""
													}
												],
												"src": "2563:107:11"
											},
											{
												"body": {
													"nativeSrc": "2752:317:11",
													"nodeType": "YulBlock",
													"src": "2752:317:11",
													"statements": [
														{
															"nativeSrc": "2762:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2762:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2783:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "2783:10:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2795:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2795:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2779:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2779:3:11"
																},
																"nativeSrc": "2779:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2779:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2766:9:11",
																	"nodeType": "YulTypedName",
																	"src": "2766:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2806:109:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2806:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2837:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2837:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2848:66:11",
																		"nodeType": "YulLiteral",
																		"src": "2848:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2818:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2818:18:11"
																},
																"nativeSrc": "2818:97:11",
																"nodeType": "YulFunctionCall",
																"src": "2818:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2810:4:11",
																	"nodeType": "YulTypedName",
																	"src": "2810:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2924:51:11",
															"nodeType": "YulAssignment",
															"src": "2924:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2955:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2955:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2966:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "2966:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2936:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2936:18:11"
																},
																"nativeSrc": "2936:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2936:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2924:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "2924:8:11"
																}
															]
														},
														{
															"nativeSrc": "2984:30:11",
															"nodeType": "YulAssignment",
															"src": "2984:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2997:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2997:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3008:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "3008:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3004:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:11"
																		},
																		"nativeSrc": "3004:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3004:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2993:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:11"
																},
																"nativeSrc": "2993:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2993:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2984:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2984:5:11"
																}
															]
														},
														{
															"nativeSrc": "3023:40:11",
															"nodeType": "YulAssignment",
															"src": "3023:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3036:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3036:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3047:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "3047:8:11"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3057:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "3057:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3043:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3043:3:11"
																		},
																		"nativeSrc": "3043:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3043:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3033:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3033:2:11"
																},
																"nativeSrc": "3033:30:11",
																"nodeType": "YulFunctionCall",
																"src": "3033:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3023:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3023:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2676:393:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2713:5:11",
														"nodeType": "YulTypedName",
														"src": "2713:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2720:10:11",
														"nodeType": "YulTypedName",
														"src": "2720:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2732:8:11",
														"nodeType": "YulTypedName",
														"src": "2732:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2745:6:11",
														"nodeType": "YulTypedName",
														"src": "2745:6:11",
														"type": ""
													}
												],
												"src": "2676:393:11"
											},
											{
												"body": {
													"nativeSrc": "3120:32:11",
													"nodeType": "YulBlock",
													"src": "3120:32:11",
													"statements": [
														{
															"nativeSrc": "3130:16:11",
															"nodeType": "YulAssignment",
															"src": "3130:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "3141:5:11",
																"nodeType": "YulIdentifier",
																"src": "3141:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3130:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "3130:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3075:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3102:5:11",
														"nodeType": "YulTypedName",
														"src": "3102:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3112:7:11",
														"nodeType": "YulTypedName",
														"src": "3112:7:11",
														"type": ""
													}
												],
												"src": "3075:77:11"
											},
											{
												"body": {
													"nativeSrc": "3190:28:11",
													"nodeType": "YulBlock",
													"src": "3190:28:11",
													"statements": [
														{
															"nativeSrc": "3200:12:11",
															"nodeType": "YulAssignment",
															"src": "3200:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "3207:5:11",
																"nodeType": "YulIdentifier",
																"src": "3207:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3200:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3200:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3158:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3176:5:11",
														"nodeType": "YulTypedName",
														"src": "3176:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3186:3:11",
														"nodeType": "YulTypedName",
														"src": "3186:3:11",
														"type": ""
													}
												],
												"src": "3158:60:11"
											},
											{
												"body": {
													"nativeSrc": "3284:82:11",
													"nodeType": "YulBlock",
													"src": "3284:82:11",
													"statements": [
														{
															"nativeSrc": "3294:66:11",
															"nodeType": "YulAssignment",
															"src": "3294:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3352:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3352:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3334:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3334:17:11"
																				},
																				"nativeSrc": "3334:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3334:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3325:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "3325:8:11"
																		},
																		"nativeSrc": "3325:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3325:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3307:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "3307:17:11"
																},
																"nativeSrc": "3307:53:11",
																"nodeType": "YulFunctionCall",
																"src": "3307:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3294:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "3294:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3224:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3264:5:11",
														"nodeType": "YulTypedName",
														"src": "3264:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3274:9:11",
														"nodeType": "YulTypedName",
														"src": "3274:9:11",
														"type": ""
													}
												],
												"src": "3224:142:11"
											},
											{
												"body": {
													"nativeSrc": "3419:28:11",
													"nodeType": "YulBlock",
													"src": "3419:28:11",
													"statements": [
														{
															"nativeSrc": "3429:12:11",
															"nodeType": "YulAssignment",
															"src": "3429:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "3436:5:11",
																"nodeType": "YulIdentifier",
																"src": "3436:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3429:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3429:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3372:75:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3405:5:11",
														"nodeType": "YulTypedName",
														"src": "3405:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3415:3:11",
														"nodeType": "YulTypedName",
														"src": "3415:3:11",
														"type": ""
													}
												],
												"src": "3372:75:11"
											},
											{
												"body": {
													"nativeSrc": "3529:193:11",
													"nodeType": "YulBlock",
													"src": "3529:193:11",
													"statements": [
														{
															"nativeSrc": "3539:63:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3539:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3594:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "3594:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3563:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "3563:30:11"
																},
																"nativeSrc": "3563:39:11",
																"nodeType": "YulFunctionCall",
																"src": "3563:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3543:16:11",
																	"nodeType": "YulTypedName",
																	"src": "3543:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3618:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3618:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3658:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "3658:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3652:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "3652:5:11"
																				},
																				"nativeSrc": "3652:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3652:11:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3665:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3665:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3697:16:11",
																						"nodeType": "YulIdentifier",
																						"src": "3697:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3673:23:11",
																					"nodeType": "YulIdentifier",
																					"src": "3673:23:11"
																				},
																				"nativeSrc": "3673:41:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3673:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3624:27:11",
																			"nodeType": "YulIdentifier",
																			"src": "3624:27:11"
																		},
																		"nativeSrc": "3624:91:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3624:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3611:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3611:6:11"
																},
																"nativeSrc": "3611:105:11",
																"nodeType": "YulFunctionCall",
																"src": "3611:105:11"
															},
															"nativeSrc": "3611:105:11",
															"nodeType": "YulExpressionStatement",
															"src": "3611:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3453:269:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3506:4:11",
														"nodeType": "YulTypedName",
														"src": "3506:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3512:6:11",
														"nodeType": "YulTypedName",
														"src": "3512:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3520:7:11",
														"nodeType": "YulTypedName",
														"src": "3520:7:11",
														"type": ""
													}
												],
												"src": "3453:269:11"
											},
											{
												"body": {
													"nativeSrc": "3777:24:11",
													"nodeType": "YulBlock",
													"src": "3777:24:11",
													"statements": [
														{
															"nativeSrc": "3787:8:11",
															"nodeType": "YulAssignment",
															"src": "3787:8:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3794:1:11",
																"nodeType": "YulLiteral",
																"src": "3794:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3787:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3787:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3728:73:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3773:3:11",
														"nodeType": "YulTypedName",
														"src": "3773:3:11",
														"type": ""
													}
												],
												"src": "3728:73:11"
											},
											{
												"body": {
													"nativeSrc": "3860:136:11",
													"nodeType": "YulBlock",
													"src": "3860:136:11",
													"statements": [
														{
															"nativeSrc": "3870:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3870:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3884:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "3884:30:11"
																},
																"nativeSrc": "3884:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3884:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3874:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3874:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3969:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3969:4:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3975:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3975:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3983:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3983:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3925:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3925:43:11"
																},
																"nativeSrc": "3925:65:11",
																"nodeType": "YulFunctionCall",
																"src": "3925:65:11"
															},
															"nativeSrc": "3925:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "3925:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3807:189:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3846:4:11",
														"nodeType": "YulTypedName",
														"src": "3846:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3852:6:11",
														"nodeType": "YulTypedName",
														"src": "3852:6:11",
														"type": ""
													}
												],
												"src": "3807:189:11"
											},
											{
												"body": {
													"nativeSrc": "4052:136:11",
													"nodeType": "YulBlock",
													"src": "4052:136:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4119:63:11",
																"nodeType": "YulBlock",
																"src": "4119:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4163:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "4163:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4170:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4170:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4133:29:11",
																				"nodeType": "YulIdentifier",
																				"src": "4133:29:11"
																			},
																			"nativeSrc": "4133:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4133:39:11"
																		},
																		"nativeSrc": "4133:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4133:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4072:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4072:5:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4079:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4079:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4069:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4069:2:11"
																},
																"nativeSrc": "4069:14:11",
																"nodeType": "YulFunctionCall",
																"src": "4069:14:11"
															},
															"nativeSrc": "4062:120:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4084:26:11",
																"nodeType": "YulBlock",
																"src": "4084:26:11",
																"statements": [
																	{
																		"nativeSrc": "4086:22:11",
																		"nodeType": "YulAssignment",
																		"src": "4086:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4099:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "4099:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4106:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4106:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4095:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4095:3:11"
																			},
																			"nativeSrc": "4095:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4095:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4086:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4086:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4066:2:11",
																"nodeType": "YulBlock",
																"src": "4066:2:11",
																"statements": []
															},
															"src": "4062:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4002:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4040:5:11",
														"nodeType": "YulTypedName",
														"src": "4040:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4047:3:11",
														"nodeType": "YulTypedName",
														"src": "4047:3:11",
														"type": ""
													}
												],
												"src": "4002:186:11"
											},
											{
												"body": {
													"nativeSrc": "4273:464:11",
													"nodeType": "YulBlock",
													"src": "4273:464:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4299:431:11",
																"nodeType": "YulBlock",
																"src": "4299:431:11",
																"statements": [
																	{
																		"nativeSrc": "4313:54:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4313:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4361:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "4361:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4329:31:11",
																				"nodeType": "YulIdentifier",
																				"src": "4329:31:11"
																			},
																			"nativeSrc": "4329:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4329:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4317:8:11",
																				"nodeType": "YulTypedName",
																				"src": "4317:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4380:63:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4380:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4403:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "4403:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4431:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "4431:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4413:17:11",
																						"nodeType": "YulIdentifier",
																						"src": "4413:17:11"
																					},
																					"nativeSrc": "4413:29:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4413:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4399:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4399:3:11"
																			},
																			"nativeSrc": "4399:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4399:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4384:11:11",
																				"nodeType": "YulTypedName",
																				"src": "4384:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4600:27:11",
																			"nodeType": "YulBlock",
																			"src": "4600:27:11",
																			"statements": [
																				{
																					"nativeSrc": "4602:23:11",
																					"nodeType": "YulAssignment",
																					"src": "4602:23:11",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4617:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "4617:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4602:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "4602:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4584:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "4584:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4596:2:11",
																					"nodeType": "YulLiteral",
																					"src": "4596:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4581:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "4581:2:11"
																			},
																			"nativeSrc": "4581:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4581:18:11"
																		},
																		"nativeSrc": "4578:49:11",
																		"nodeType": "YulIf",
																		"src": "4578:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4669:11:11",
																					"nodeType": "YulIdentifier",
																					"src": "4669:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4686:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "4686:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4714:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4714:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4696:17:11",
																								"nodeType": "YulIdentifier",
																								"src": "4696:17:11"
																							},
																							"nativeSrc": "4696:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "4696:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4682:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "4682:3:11"
																					},
																					"nativeSrc": "4682:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4682:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4640:28:11",
																				"nodeType": "YulIdentifier",
																				"src": "4640:28:11"
																			},
																			"nativeSrc": "4640:80:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4640:80:11"
																		},
																		"nativeSrc": "4640:80:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4640:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4290:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4290:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4295:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4295:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4287:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4287:2:11"
																},
																"nativeSrc": "4287:11:11",
																"nodeType": "YulFunctionCall",
																"src": "4287:11:11"
															},
															"nativeSrc": "4284:446:11",
															"nodeType": "YulIf",
															"src": "4284:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4194:543:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4249:5:11",
														"nodeType": "YulTypedName",
														"src": "4249:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4256:3:11",
														"nodeType": "YulTypedName",
														"src": "4256:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4261:10:11",
														"nodeType": "YulTypedName",
														"src": "4261:10:11",
														"type": ""
													}
												],
												"src": "4194:543:11"
											},
											{
												"body": {
													"nativeSrc": "4806:54:11",
													"nodeType": "YulBlock",
													"src": "4806:54:11",
													"statements": [
														{
															"nativeSrc": "4816:37:11",
															"nodeType": "YulAssignment",
															"src": "4816:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4841:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4841:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4847:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4847:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4837:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4837:3:11"
																},
																"nativeSrc": "4837:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4837:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4816:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "4816:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4743:117:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4781:4:11",
														"nodeType": "YulTypedName",
														"src": "4781:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4787:5:11",
														"nodeType": "YulTypedName",
														"src": "4787:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4797:8:11",
														"nodeType": "YulTypedName",
														"src": "4797:8:11",
														"type": ""
													}
												],
												"src": "4743:117:11"
											},
											{
												"body": {
													"nativeSrc": "4917:118:11",
													"nodeType": "YulBlock",
													"src": "4917:118:11",
													"statements": [
														{
															"nativeSrc": "4927:68:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4927:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4976:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4976:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4979:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4979:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4972:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4972:3:11"
																				},
																				"nativeSrc": "4972:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4972:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4991:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4991:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4987:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4987:3:11"
																				},
																				"nativeSrc": "4987:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4987:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4943:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "4943:28:11"
																		},
																		"nativeSrc": "4943:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4943:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4939:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4939:3:11"
																},
																"nativeSrc": "4939:56:11",
																"nodeType": "YulFunctionCall",
																"src": "4939:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4931:4:11",
																	"nodeType": "YulTypedName",
																	"src": "4931:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5004:25:11",
															"nodeType": "YulAssignment",
															"src": "5004:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5018:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5018:4:11"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5024:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5024:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5014:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5014:3:11"
																},
																"nativeSrc": "5014:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5014:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5004:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5004:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4866:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4894:4:11",
														"nodeType": "YulTypedName",
														"src": "4894:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4900:5:11",
														"nodeType": "YulTypedName",
														"src": "4900:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4910:6:11",
														"nodeType": "YulTypedName",
														"src": "4910:6:11",
														"type": ""
													}
												],
												"src": "4866:169:11"
											},
											{
												"body": {
													"nativeSrc": "5121:214:11",
													"nodeType": "YulBlock",
													"src": "5121:214:11",
													"statements": [
														{
															"nativeSrc": "5254:37:11",
															"nodeType": "YulAssignment",
															"src": "5254:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5281:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5281:4:11"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5287:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5287:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5262:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "5262:18:11"
																},
																"nativeSrc": "5262:29:11",
																"nodeType": "YulFunctionCall",
																"src": "5262:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5254:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5254:4:11"
																}
															]
														},
														{
															"nativeSrc": "5300:29:11",
															"nodeType": "YulAssignment",
															"src": "5300:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5311:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5311:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5321:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5321:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5324:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "5324:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5317:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5317:3:11"
																		},
																		"nativeSrc": "5317:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5317:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5308:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5308:2:11"
																},
																"nativeSrc": "5308:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5308:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5300:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5300:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5040:295:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5102:4:11",
														"nodeType": "YulTypedName",
														"src": "5102:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5108:3:11",
														"nodeType": "YulTypedName",
														"src": "5108:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5116:4:11",
														"nodeType": "YulTypedName",
														"src": "5116:4:11",
														"type": ""
													}
												],
												"src": "5040:295:11"
											},
											{
												"body": {
													"nativeSrc": "5432:1303:11",
													"nodeType": "YulBlock",
													"src": "5432:1303:11",
													"statements": [
														{
															"nativeSrc": "5443:51:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5443:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5490:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5490:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5457:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "5457:32:11"
																},
																"nativeSrc": "5457:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5457:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5447:6:11",
																	"nodeType": "YulTypedName",
																	"src": "5447:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5579:22:11",
																"nodeType": "YulBlock",
																"src": "5579:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5581:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5581:16:11"
																			},
																			"nativeSrc": "5581:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5581:18:11"
																		},
																		"nativeSrc": "5581:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5581:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5551:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5551:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5559:18:11",
																		"nodeType": "YulLiteral",
																		"src": "5559:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5548:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5548:2:11"
																},
																"nativeSrc": "5548:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5548:30:11"
															},
															"nativeSrc": "5545:56:11",
															"nodeType": "YulIf",
															"src": "5545:56:11"
														},
														{
															"nativeSrc": "5611:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5611:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5657:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5657:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5651:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5651:5:11"
																		},
																		"nativeSrc": "5651:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5651:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5625:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "5625:25:11"
																},
																"nativeSrc": "5625:38:11",
																"nodeType": "YulFunctionCall",
																"src": "5625:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5615:6:11",
																	"nodeType": "YulTypedName",
																	"src": "5615:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5756:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5756:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5762:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5762:6:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5770:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5770:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5710:45:11",
																	"nodeType": "YulIdentifier",
																	"src": "5710:45:11"
																},
																"nativeSrc": "5710:67:11",
																"nodeType": "YulFunctionCall",
																"src": "5710:67:11"
															},
															"nativeSrc": "5710:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "5710:67:11"
														},
														{
															"nativeSrc": "5787:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5787:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "5804:1:11",
																"nodeType": "YulLiteral",
																"src": "5804:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5791:9:11",
																	"nodeType": "YulTypedName",
																	"src": "5791:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5815:17:11",
															"nodeType": "YulAssignment",
															"src": "5815:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "5828:4:11",
																"nodeType": "YulLiteral",
																"src": "5828:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5815:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5815:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5879:611:11",
																		"nodeType": "YulBlock",
																		"src": "5879:611:11",
																		"statements": [
																			{
																				"nativeSrc": "5893:37:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5893:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5912:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "5912:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5924:4:11",
																									"nodeType": "YulLiteral",
																									"src": "5924:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5920:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "5920:3:11"
																							},
																							"nativeSrc": "5920:9:11",
																							"nodeType": "YulFunctionCall",
																							"src": "5920:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5908:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "5908:3:11"
																					},
																					"nativeSrc": "5908:22:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5908:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5897:7:11",
																						"nodeType": "YulTypedName",
																						"src": "5897:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5944:51:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5944:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5990:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "5990:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5958:31:11",
																						"nodeType": "YulIdentifier",
																						"src": "5958:31:11"
																					},
																					"nativeSrc": "5958:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5958:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5948:6:11",
																						"nodeType": "YulTypedName",
																						"src": "5948:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6008:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6008:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6017:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6017:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6012:1:11",
																						"nodeType": "YulTypedName",
																						"src": "6012:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6076:163:11",
																					"nodeType": "YulBlock",
																					"src": "6076:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6101:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "6101:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6119:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "6119:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6124:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "6124:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6115:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "6115:3:11"
																												},
																												"nativeSrc": "6115:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "6115:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6109:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "6109:5:11"
																										},
																										"nativeSrc": "6109:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "6109:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6094:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "6094:6:11"
																								},
																								"nativeSrc": "6094:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "6094:42:11"
																							},
																							"nativeSrc": "6094:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "6094:42:11"
																						},
																						{
																							"nativeSrc": "6153:24:11",
																							"nodeType": "YulAssignment",
																							"src": "6153:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6167:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "6167:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6175:1:11",
																										"nodeType": "YulLiteral",
																										"src": "6175:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6163:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "6163:3:11"
																								},
																								"nativeSrc": "6163:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "6163:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6153:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "6153:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6194:31:11",
																							"nodeType": "YulAssignment",
																							"src": "6194:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6211:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "6211:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6222:2:11",
																										"nodeType": "YulLiteral",
																										"src": "6222:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6207:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "6207:3:11"
																								},
																								"nativeSrc": "6207:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "6207:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6194:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "6194:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6042:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "6042:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6045:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "6045:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6039:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "6039:2:11"
																					},
																					"nativeSrc": "6039:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6039:14:11"
																				},
																				"nativeSrc": "6031:208:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6054:21:11",
																					"nodeType": "YulBlock",
																					"src": "6054:21:11",
																					"statements": [
																						{
																							"nativeSrc": "6056:17:11",
																							"nodeType": "YulAssignment",
																							"src": "6056:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6065:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "6065:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6068:4:11",
																										"nodeType": "YulLiteral",
																										"src": "6068:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6061:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "6061:3:11"
																								},
																								"nativeSrc": "6061:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "6061:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6056:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "6056:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6035:3:11",
																					"nodeType": "YulBlock",
																					"src": "6035:3:11",
																					"statements": []
																				},
																				"src": "6031:208:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "6275:156:11",
																					"nodeType": "YulBlock",
																					"src": "6275:156:11",
																					"statements": [
																						{
																							"nativeSrc": "6293:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6293:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6320:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "6320:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6325:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "6325:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6316:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "6316:3:11"
																										},
																										"nativeSrc": "6316:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "6316:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6310:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "6310:5:11"
																								},
																								"nativeSrc": "6310:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "6310:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6297:9:11",
																									"nodeType": "YulTypedName",
																									"src": "6297:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6360:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "6360:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6387:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "6387:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6402:6:11",
																														"nodeType": "YulIdentifier",
																														"src": "6402:6:11"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6410:4:11",
																														"nodeType": "YulLiteral",
																														"src": "6410:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6398:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "6398:3:11"
																												},
																												"nativeSrc": "6398:17:11",
																												"nodeType": "YulFunctionCall",
																												"src": "6398:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6368:18:11",
																											"nodeType": "YulIdentifier",
																											"src": "6368:18:11"
																										},
																										"nativeSrc": "6368:48:11",
																										"nodeType": "YulFunctionCall",
																										"src": "6368:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6353:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "6353:6:11"
																								},
																								"nativeSrc": "6353:64:11",
																								"nodeType": "YulFunctionCall",
																								"src": "6353:64:11"
																							},
																							"nativeSrc": "6353:64:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "6353:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6258:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "6258:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6267:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "6267:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6255:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "6255:2:11"
																					},
																					"nativeSrc": "6255:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6255:19:11"
																				},
																				"nativeSrc": "6252:179:11",
																				"nodeType": "YulIf",
																				"src": "6252:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6451:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "6451:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6465:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "6465:6:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6473:1:11",
																											"nodeType": "YulLiteral",
																											"src": "6473:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6461:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "6461:3:11"
																									},
																									"nativeSrc": "6461:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "6461:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6477:1:11",
																									"nodeType": "YulLiteral",
																									"src": "6477:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6457:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "6457:3:11"
																							},
																							"nativeSrc": "6457:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "6457:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6444:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6444:6:11"
																					},
																					"nativeSrc": "6444:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6444:36:11"
																				},
																				"nativeSrc": "6444:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "6444:36:11"
																			}
																		]
																	},
																	"nativeSrc": "5872:618:11",
																	"nodeType": "YulCase",
																	"src": "5872:618:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5877:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5877:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6507:222:11",
																		"nodeType": "YulBlock",
																		"src": "6507:222:11",
																		"statements": [
																			{
																				"nativeSrc": "6521:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6521:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6534:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6534:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6525:5:11",
																						"nodeType": "YulTypedName",
																						"src": "6525:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6558:67:11",
																					"nodeType": "YulBlock",
																					"src": "6558:67:11",
																					"statements": [
																						{
																							"nativeSrc": "6576:35:11",
																							"nodeType": "YulAssignment",
																							"src": "6576:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6595:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "6595:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6600:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "6600:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6591:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "6591:3:11"
																										},
																										"nativeSrc": "6591:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "6591:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6585:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "6585:5:11"
																								},
																								"nativeSrc": "6585:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "6585:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6576:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "6576:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6551:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "6551:6:11"
																				},
																				"nativeSrc": "6548:77:11",
																				"nodeType": "YulIf",
																				"src": "6548:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6645:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "6645:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6704:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "6704:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6711:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "6711:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6651:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "6651:52:11"
																							},
																							"nativeSrc": "6651:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "6651:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6638:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6638:6:11"
																					},
																					"nativeSrc": "6638:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6638:81:11"
																				},
																				"nativeSrc": "6638:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "6638:81:11"
																			}
																		]
																	},
																	"nativeSrc": "6499:230:11",
																	"nodeType": "YulCase",
																	"src": "6499:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5852:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5852:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5860:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5860:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5849:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5849:2:11"
																},
																"nativeSrc": "5849:14:11",
																"nodeType": "YulFunctionCall",
																"src": "5849:14:11"
															},
															"nativeSrc": "5842:887:11",
															"nodeType": "YulSwitch",
															"src": "5842:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5340:1395:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5421:4:11",
														"nodeType": "YulTypedName",
														"src": "5421:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5427:3:11",
														"nodeType": "YulTypedName",
														"src": "5427:3:11",
														"type": ""
													}
												],
												"src": "5340:1395:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200213138038062002131833981810160405281019062000036919062000364565b6040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f544b4e00000000000000000000000000000000000000000000000000000000008152508160039081620000b3919062000621565b508060049081620000c5919062000621565b5050505f60065f6101000a81548160ff021916908315150217905550620000f55f801b336200019860201b60201c565b50620001287f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6846200019860201b60201c565b506200015b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848836200019860201b60201c565b506200018e7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a826200019860201b60201c565b5050505062000705565b5f620001ab83836200029460201b60201c565b6200028a57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555062000226620002f860201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506200028e565b5f90505b92915050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200032e8262000303565b9050919050565b620003408162000322565b81146200034b575f80fd5b50565b5f815190506200035e8162000335565b92915050565b5f805f606084860312156200037e576200037d620002ff565b5b5f6200038d868287016200034e565b9350506020620003a0868287016200034e565b9250506040620003b3868287016200034e565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200043957607f821691505b6020821081036200044f576200044e620003f4565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620004b37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000476565b620004bf868362000476565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200050962000503620004fd84620004d7565b620004e0565b620004d7565b9050919050565b5f819050919050565b6200052483620004e9565b6200053c620005338262000510565b84845462000482565b825550505050565b5f90565b6200055262000544565b6200055f81848462000519565b505050565b5b8181101562000586576200057a5f8262000548565b60018101905062000565565b5050565b601f821115620005d5576200059f8162000455565b620005aa8462000467565b81016020851015620005ba578190505b620005d2620005c98562000467565b83018262000564565b50505b505050565b5f82821c905092915050565b5f620005f75f1984600802620005da565b1980831691505092915050565b5f620006118383620005e6565b9150826002028217905092915050565b6200062c82620003bd565b67ffffffffffffffff811115620006485762000647620003c7565b5b62000654825462000421565b620006618282856200058a565b5f60209050601f83116001811462000697575f841562000682578287015190505b6200068e858262000604565b865550620006fd565b601f198416620006a78662000455565b5f5b82811015620006d057848901518255600182019150602085019450602081019050620006a9565b86831015620006f05784890151620006ec601f891682620005e6565b8355505b6001600288020188555050505b505050505050565b611a1e80620007135f395ff3fe608060405234801561000f575f80fd5b506004361061014b575f3560e01c80635c975abb116100c1578063a217fddf1161007a578063a217fddf1461039d578063a9059cbb146103bb578063d5391393146103eb578063d547741f14610409578063dd62ed3e14610425578063e63ab1e9146104555761014b565b80635c975abb146102db57806370a08231146102f95780638456cb591461032957806391d148541461033357806395d89b41146103635780639dc29fac146103815761014b565b8063248a9ca311610113578063248a9ca31461021b578063282c51f31461024b5780632f2ff15d14610269578063313ce5671461028557806336568abe146102a357806340c10f19146102bf5761014b565b806301ffc9a71461014f57806306fdde031461017f578063095ea7b31461019d57806318160ddd146101cd57806323b872dd146101eb575b5f80fd5b6101696004803603810190610164919061142b565b610473565b6040516101769190611470565b60405180910390f35b6101876104ec565b6040516101949190611513565b60405180910390f35b6101b760048036038101906101b291906115c0565b61057c565b6040516101c49190611470565b60405180910390f35b6101d561059e565b6040516101e2919061160d565b60405180910390f35b61020560048036038101906102009190611626565b6105a7565b6040516102129190611470565b60405180910390f35b610235600480360381019061023091906116a9565b6105d5565b60405161024291906116e3565b60405180910390f35b6102536105f2565b60405161026091906116e3565b60405180910390f35b610283600480360381019061027e91906116fc565b610616565b005b61028d610638565b60405161029a9190611755565b60405180910390f35b6102bd60048036038101906102b891906116fc565b610640565b005b6102d960048036038101906102d491906115c0565b6106bb565b005b6102e3610732565b6040516102f09190611470565b60405180910390f35b610313600480360381019061030e919061176e565b610747565b604051610320919061160d565b60405180910390f35b61033161078c565b005b61034d600480360381019061034891906116fc565b6107c1565b60405161035a9190611470565b60405180910390f35b61036b610825565b6040516103789190611513565b60405180910390f35b61039b600480360381019061039691906115c0565b6108b5565b005b6103a56108ee565b6040516103b291906116e3565b60405180910390f35b6103d560048036038101906103d091906115c0565b6108f4565b6040516103e29190611470565b60405180910390f35b6103f3610916565b60405161040091906116e3565b60405180910390f35b610423600480360381019061041e91906116fc565b61093a565b005b61043f600480360381019061043a9190611799565b61095c565b60405161044c919061160d565b60405180910390f35b61045d6109de565b60405161046a91906116e3565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104e557506104e482610a02565b5b9050919050565b6060600380546104fb90611804565b80601f016020809104026020016040519081016040528092919081815260200182805461052790611804565b80156105725780601f1061054957610100808354040283529160200191610572565b820191905f5260205f20905b81548152906001019060200180831161055557829003601f168201915b5050505050905090565b5f80610586610a6b565b9050610593818585610a72565b600191505092915050565b5f600254905090565b5f806105b1610a6b565b90506105be858285610a84565b6105c9858585610b17565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b61061f826105d5565b61062881610c07565b6106328383610c1b565b50505050565b5f6012905090565b610648610a6b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106ac576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106b68282610d05565b505050565b6106e57f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6336107c1565b610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b9061187e565b60405180910390fd5b61072e8282610def565b5050565b5f60065f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6107b681610c07565b6107be610e6e565b50565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60606004805461083490611804565b80601f016020809104026020016040519081016040528092919081815260200182805461086090611804565b80156108ab5780601f10610882576101008083540402835291602001916108ab565b820191905f5260205f20905b81548152906001019060200180831161088e57829003601f168201915b5050505050905090565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8486108df81610c07565b6108e98383610ed0565b505050565b5f801b81565b5f806108fe610a6b565b905061090b818585610b17565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610943826105d5565b61094c81610c07565b6109568383610d05565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b610a7f8383836001610f4f565b505050565b5f610a8f848461095c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610b115781811015610b02578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610af9939291906118ab565b60405180910390fd5b610b1084848484035f610f4f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b87575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b7e91906118e0565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bf7575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bee91906118e0565b60405180910390fd5b610c0283838361111e565b505050565b610c1881610c13610a6b565b611337565b50565b5f610c2683836107c1565b610cfb57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610c98610a6b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610cff565b5f90505b92915050565b5f610d1083836107c1565b15610de5575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610d82610a6b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610de9565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e5f575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e5691906118e0565b60405180910390fd5b610e6a5f838361111e565b5050565b610e76611388565b600160065f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610eb9610a6b565b604051610ec691906118e0565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f40575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f3791906118e0565b60405180910390fd5b610f4b825f8361111e565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fbf575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610fb691906118e0565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361102f575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161102691906118e0565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611118578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161110f919061160d565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361116e578060025f8282546111629190611926565b9250508190555061123c565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156111f7578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016111ee939291906118ab565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611283578060025f82825403925050819055506112cd565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161132a919061160d565b60405180910390a3505050565b61134182826107c1565b6113845780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161137b929190611959565b60405180910390fd5b5050565b611390610732565b156113d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c7906119ca565b60405180910390fd5b565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61140a816113d6565b8114611414575f80fd5b50565b5f8135905061142581611401565b92915050565b5f602082840312156114405761143f6113d2565b5b5f61144d84828501611417565b91505092915050565b5f8115159050919050565b61146a81611456565b82525050565b5f6020820190506114835f830184611461565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156114c05780820151818401526020810190506114a5565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6114e582611489565b6114ef8185611493565b93506114ff8185602086016114a3565b611508816114cb565b840191505092915050565b5f6020820190508181035f83015261152b81846114db565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61155c82611533565b9050919050565b61156c81611552565b8114611576575f80fd5b50565b5f8135905061158781611563565b92915050565b5f819050919050565b61159f8161158d565b81146115a9575f80fd5b50565b5f813590506115ba81611596565b92915050565b5f80604083850312156115d6576115d56113d2565b5b5f6115e385828601611579565b92505060206115f4858286016115ac565b9150509250929050565b6116078161158d565b82525050565b5f6020820190506116205f8301846115fe565b92915050565b5f805f6060848603121561163d5761163c6113d2565b5b5f61164a86828701611579565b935050602061165b86828701611579565b925050604061166c868287016115ac565b9150509250925092565b5f819050919050565b61168881611676565b8114611692575f80fd5b50565b5f813590506116a38161167f565b92915050565b5f602082840312156116be576116bd6113d2565b5b5f6116cb84828501611695565b91505092915050565b6116dd81611676565b82525050565b5f6020820190506116f65f8301846116d4565b92915050565b5f8060408385031215611712576117116113d2565b5b5f61171f85828601611695565b925050602061173085828601611579565b9150509250929050565b5f60ff82169050919050565b61174f8161173a565b82525050565b5f6020820190506117685f830184611746565b92915050565b5f60208284031215611783576117826113d2565b5b5f61179084828501611579565b91505092915050565b5f80604083850312156117af576117ae6113d2565b5b5f6117bc85828601611579565b92505060206117cd85828601611579565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061181b57607f821691505b60208210810361182e5761182d6117d7565b5b50919050565b7f43616c6c6572206973206e6f742061206d696e746572000000000000000000005f82015250565b5f611868601683611493565b915061187382611834565b602082019050919050565b5f6020820190508181035f8301526118958161185c565b9050919050565b6118a581611552565b82525050565b5f6060820190506118be5f83018661189c565b6118cb60208301856115fe565b6118d860408301846115fe565b949350505050565b5f6020820190506118f35f83018461189c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119308261158d565b915061193b8361158d565b9250828201905080821115611953576119526118f9565b5b92915050565b5f60408201905061196c5f83018561189c565b61197960208301846116d4565b9392505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6119b4601083611493565b91506119bf82611980565b602082019050919050565b5f6020820190508181035f8301526119e1816119a8565b905091905056fea2646970667358221220bfbdd952e29a76b60b9607f66d10d9fa6c37320d0d79c79f084e08a5db81df9164736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2131 CODESIZE SUB DUP1 PUSH3 0x2131 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x544B4E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB3 SWAP2 SWAP1 PUSH3 0x621 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC5 SWAP2 SWAP1 PUSH3 0x621 JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0xF5 PUSH0 DUP1 SHL CALLER PUSH3 0x198 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x128 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP5 PUSH3 0x198 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x15B PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP4 PUSH3 0x198 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x18E PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP3 PUSH3 0x198 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0x705 JUMP JUMPDEST PUSH0 PUSH3 0x1AB DUP4 DUP4 PUSH3 0x294 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x28A JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x226 PUSH3 0x2F8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x28E JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x32E DUP3 PUSH3 0x303 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x340 DUP2 PUSH3 0x322 JUMP JUMPDEST DUP2 EQ PUSH3 0x34B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x35E DUP2 PUSH3 0x335 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x37E JUMPI PUSH3 0x37D PUSH3 0x2FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x38D DUP7 DUP3 DUP8 ADD PUSH3 0x34E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x3A0 DUP7 DUP3 DUP8 ADD PUSH3 0x34E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x3B3 DUP7 DUP3 DUP8 ADD PUSH3 0x34E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x439 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x44F JUMPI PUSH3 0x44E PUSH3 0x3F4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x4B3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x476 JUMP JUMPDEST PUSH3 0x4BF DUP7 DUP4 PUSH3 0x476 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x509 PUSH3 0x503 PUSH3 0x4FD DUP5 PUSH3 0x4D7 JUMP JUMPDEST PUSH3 0x4E0 JUMP JUMPDEST PUSH3 0x4D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x524 DUP4 PUSH3 0x4E9 JUMP JUMPDEST PUSH3 0x53C PUSH3 0x533 DUP3 PUSH3 0x510 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x482 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x552 PUSH3 0x544 JUMP JUMPDEST PUSH3 0x55F DUP2 DUP5 DUP5 PUSH3 0x519 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x586 JUMPI PUSH3 0x57A PUSH0 DUP3 PUSH3 0x548 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x565 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x5D5 JUMPI PUSH3 0x59F DUP2 PUSH3 0x455 JUMP JUMPDEST PUSH3 0x5AA DUP5 PUSH3 0x467 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x5BA JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x5D2 PUSH3 0x5C9 DUP6 PUSH3 0x467 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x564 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x5F7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x5DA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x611 DUP4 DUP4 PUSH3 0x5E6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x62C DUP3 PUSH3 0x3BD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x648 JUMPI PUSH3 0x647 PUSH3 0x3C7 JUMP JUMPDEST JUMPDEST PUSH3 0x654 DUP3 SLOAD PUSH3 0x421 JUMP JUMPDEST PUSH3 0x661 DUP3 DUP3 DUP6 PUSH3 0x58A JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x697 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x682 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x68E DUP6 DUP3 PUSH3 0x604 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x6FD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x6A7 DUP7 PUSH3 0x455 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x6D0 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x6A9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x6F0 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x6EC PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x5E6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A1E DUP1 PUSH3 0x713 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x455 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x381 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2BF JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1EB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x142B JUMP JUMPDEST PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1513 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x59E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28D PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E3 PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH2 0x78C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH2 0x825 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x1513 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x8B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A5 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F3 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x423 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x1799 JUMP JUMPDEST PUSH2 0x95C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4E5 JUMPI POP PUSH2 0x4E4 DUP3 PUSH2 0xA02 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4FB SWAP1 PUSH2 0x1804 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x527 SWAP1 PUSH2 0x1804 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x572 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x549 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x572 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x555 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x586 PUSH2 0xA6B JUMP JUMPDEST SWAP1 POP PUSH2 0x593 DUP2 DUP6 DUP6 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5B1 PUSH2 0xA6B JUMP JUMPDEST SWAP1 POP PUSH2 0x5BE DUP6 DUP3 DUP6 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0x5C9 DUP6 DUP6 DUP6 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0x61F DUP3 PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x628 DUP2 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 PUSH2 0xC1B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x648 PUSH2 0xA6B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B6 DUP3 DUP3 PUSH2 0xD05 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6E5 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x724 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71B SWAP1 PUSH2 0x187E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72E DUP3 DUP3 PUSH2 0xDEF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x7B6 DUP2 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x7BE PUSH2 0xE6E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x834 SWAP1 PUSH2 0x1804 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x860 SWAP1 PUSH2 0x1804 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8AB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x882 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8AB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x88E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x8DF DUP2 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x8E9 DUP4 DUP4 PUSH2 0xED0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8FE PUSH2 0xA6B JUMP JUMPDEST SWAP1 POP PUSH2 0x90B DUP2 DUP6 DUP6 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x943 DUP3 PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x94C DUP2 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x956 DUP4 DUP4 PUSH2 0xD05 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA7F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF4F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA8F DUP5 DUP5 PUSH2 0x95C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xB11 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB02 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB10 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xF4F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB87 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7E SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEE SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC02 DUP4 DUP4 DUP4 PUSH2 0x111E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC18 DUP2 PUSH2 0xC13 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x1337 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xC26 DUP4 DUP4 PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0xCFB JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC98 PUSH2 0xA6B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xCFF JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD10 DUP4 DUP4 PUSH2 0x7C1 JUMP JUMPDEST ISZERO PUSH2 0xDE5 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD82 PUSH2 0xA6B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xDE9 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE5F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE56 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE6A PUSH0 DUP4 DUP4 PUSH2 0x111E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE76 PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xEB9 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC6 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF40 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF37 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF4B DUP3 PUSH0 DUP4 PUSH2 0x111E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFBF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB6 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x102F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1026 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1118 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x110F SWAP2 SWAP1 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x116E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1162 SWAP2 SWAP1 PUSH2 0x1926 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x123C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x11F7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1283 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12CD JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x132A SWAP2 SWAP1 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1341 DUP3 DUP3 PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x1384 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137B SWAP3 SWAP2 SWAP1 PUSH2 0x1959 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1390 PUSH2 0x732 JUMP JUMPDEST ISZERO PUSH2 0x13D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C7 SWAP1 PUSH2 0x19CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140A DUP2 PUSH2 0x13D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1414 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1425 DUP2 PUSH2 0x1401 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1440 JUMPI PUSH2 0x143F PUSH2 0x13D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x144D DUP5 DUP3 DUP6 ADD PUSH2 0x1417 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146A DUP2 PUSH2 0x1456 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1483 PUSH0 DUP4 ADD DUP5 PUSH2 0x1461 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14C0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14A5 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14E5 DUP3 PUSH2 0x1489 JUMP JUMPDEST PUSH2 0x14EF DUP2 DUP6 PUSH2 0x1493 JUMP JUMPDEST SWAP4 POP PUSH2 0x14FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14A3 JUMP JUMPDEST PUSH2 0x1508 DUP2 PUSH2 0x14CB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x152B DUP2 DUP5 PUSH2 0x14DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x155C DUP3 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x156C DUP2 PUSH2 0x1552 JUMP JUMPDEST DUP2 EQ PUSH2 0x1576 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1587 DUP2 PUSH2 0x1563 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x159F DUP2 PUSH2 0x158D JUMP JUMPDEST DUP2 EQ PUSH2 0x15A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15BA DUP2 PUSH2 0x1596 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15D6 JUMPI PUSH2 0x15D5 PUSH2 0x13D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15E3 DUP6 DUP3 DUP7 ADD PUSH2 0x1579 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15F4 DUP6 DUP3 DUP7 ADD PUSH2 0x15AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1607 DUP2 PUSH2 0x158D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1620 PUSH0 DUP4 ADD DUP5 PUSH2 0x15FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x163D JUMPI PUSH2 0x163C PUSH2 0x13D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x164A DUP7 DUP3 DUP8 ADD PUSH2 0x1579 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x165B DUP7 DUP3 DUP8 ADD PUSH2 0x1579 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x166C DUP7 DUP3 DUP8 ADD PUSH2 0x15AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1688 DUP2 PUSH2 0x1676 JUMP JUMPDEST DUP2 EQ PUSH2 0x1692 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16A3 DUP2 PUSH2 0x167F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16BE JUMPI PUSH2 0x16BD PUSH2 0x13D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16CB DUP5 DUP3 DUP6 ADD PUSH2 0x1695 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16DD DUP2 PUSH2 0x1676 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16F6 PUSH0 DUP4 ADD DUP5 PUSH2 0x16D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1712 JUMPI PUSH2 0x1711 PUSH2 0x13D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x171F DUP6 DUP3 DUP7 ADD PUSH2 0x1695 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1730 DUP6 DUP3 DUP7 ADD PUSH2 0x1579 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x174F DUP2 PUSH2 0x173A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1768 PUSH0 DUP4 ADD DUP5 PUSH2 0x1746 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1783 JUMPI PUSH2 0x1782 PUSH2 0x13D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1790 DUP5 DUP3 DUP6 ADD PUSH2 0x1579 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17AF JUMPI PUSH2 0x17AE PUSH2 0x13D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17BC DUP6 DUP3 DUP7 ADD PUSH2 0x1579 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17CD DUP6 DUP3 DUP7 ADD PUSH2 0x1579 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x181B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x182E JUMPI PUSH2 0x182D PUSH2 0x17D7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742061206D696E74657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1868 PUSH1 0x16 DUP4 PUSH2 0x1493 JUMP JUMPDEST SWAP2 POP PUSH2 0x1873 DUP3 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1895 DUP2 PUSH2 0x185C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18A5 DUP2 PUSH2 0x1552 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18BE PUSH0 DUP4 ADD DUP7 PUSH2 0x189C JUMP JUMPDEST PUSH2 0x18CB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15FE JUMP JUMPDEST PUSH2 0x18D8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15FE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x189C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1930 DUP3 PUSH2 0x158D JUMP JUMPDEST SWAP2 POP PUSH2 0x193B DUP4 PUSH2 0x158D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1953 JUMPI PUSH2 0x1952 PUSH2 0x18F9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x196C PUSH0 DUP4 ADD DUP6 PUSH2 0x189C JUMP JUMPDEST PUSH2 0x1979 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16D4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19B4 PUSH1 0x10 DUP4 PUSH2 0x1493 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BF DUP3 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19E1 DUP2 PUSH2 0x19A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xBD 0xD9 MSTORE 0xE2 SWAP11 PUSH23 0xB60B9607F66D10D9FA6C37320D0D79C79F084E08A5DB81 0xDF SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "314:1294:10:-:0;;;752:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1601:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1006:5:3;996:7;;:15;;;;;;;;;;;;;;;;;;850:42:10::1;2232:4:0;861:18:10::0;::::1;881:10;850;;;:42;;:::i;:::-;;931:32;412:24;955:7;931:10;;;:32;;:::i;:::-;;1021;481:24;1045:7;1021:10;;;:32;;:::i;:::-;;1111;550:24;1135:7;1111:10;;;:32;;:::i;:::-;;752:465:::0;;;314:1294;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;1514:99::-;1566:6;1600:5;1594:12;1584:22;;1514:99;;;:::o;1619:180::-;1667:77;1664:1;1657:88;1764:4;1761:1;1754:15;1788:4;1785:1;1778:15;1805:180;1853:77;1850:1;1843:88;1950:4;1947:1;1940:15;1974:4;1971:1;1964:15;1991:320;2035:6;2072:1;2066:4;2062:12;2052:22;;2119:1;2113:4;2109:12;2140:18;2130:81;;2196:4;2188:6;2184:17;2174:27;;2130:81;2258:2;2250:6;2247:14;2227:18;2224:38;2221:84;;2277:18;;:::i;:::-;2221:84;2042:269;1991:320;;;:::o;2317:141::-;2366:4;2389:3;2381:11;;2412:3;2409:1;2402:14;2446:4;2443:1;2433:18;2425:26;;2317:141;;;:::o;2464:93::-;2501:6;2548:2;2543;2536:5;2532:14;2528:23;2518:33;;2464:93;;;:::o;2563:107::-;2607:8;2657:5;2651:4;2647:16;2626:37;;2563:107;;;;:::o;2676:393::-;2745:6;2795:1;2783:10;2779:18;2818:97;2848:66;2837:9;2818:97;:::i;:::-;2936:39;2966:8;2955:9;2936:39;:::i;:::-;2924:51;;3008:4;3004:9;2997:5;2993:21;2984:30;;3057:4;3047:8;3043:19;3036:5;3033:30;3023:40;;2752:317;;2676:393;;;;;:::o;3075:77::-;3112:7;3141:5;3130:16;;3075:77;;;:::o;3158:60::-;3186:3;3207:5;3200:12;;3158:60;;;:::o;3224:142::-;3274:9;3307:53;3325:34;3334:24;3352:5;3334:24;:::i;:::-;3325:34;:::i;:::-;3307:53;:::i;:::-;3294:66;;3224:142;;;:::o;3372:75::-;3415:3;3436:5;3429:12;;3372:75;;;:::o;3453:269::-;3563:39;3594:7;3563:39;:::i;:::-;3624:91;3673:41;3697:16;3673:41;:::i;:::-;3665:6;3658:4;3652:11;3624:91;:::i;:::-;3618:4;3611:105;3529:193;3453:269;;;:::o;3728:73::-;3773:3;3728:73;:::o;3807:189::-;3884:32;;:::i;:::-;3925:65;3983:6;3975;3969:4;3925:65;:::i;:::-;3860:136;3807:189;;:::o;4002:186::-;4062:120;4079:3;4072:5;4069:14;4062:120;;;4133:39;4170:1;4163:5;4133:39;:::i;:::-;4106:1;4099:5;4095:13;4086:22;;4062:120;;;4002:186;;:::o;4194:543::-;4295:2;4290:3;4287:11;4284:446;;;4329:38;4361:5;4329:38;:::i;:::-;4413:29;4431:10;4413:29;:::i;:::-;4403:8;4399:44;4596:2;4584:10;4581:18;4578:49;;;4617:8;4602:23;;4578:49;4640:80;4696:22;4714:3;4696:22;:::i;:::-;4686:8;4682:37;4669:11;4640:80;:::i;:::-;4299:431;;4284:446;4194:543;;;:::o;4743:117::-;4797:8;4847:5;4841:4;4837:16;4816:37;;4743:117;;;;:::o;4866:169::-;4910:6;4943:51;4991:1;4987:6;4979:5;4976:1;4972:13;4943:51;:::i;:::-;4939:56;5024:4;5018;5014:15;5004:25;;4917:118;4866:169;;;;:::o;5040:295::-;5116:4;5262:29;5287:3;5281:4;5262:29;:::i;:::-;5254:37;;5324:3;5321:1;5317:11;5311:4;5308:21;5300:29;;5040:295;;;;:::o;5340:1395::-;5457:37;5490:3;5457:37;:::i;:::-;5559:18;5551:6;5548:30;5545:56;;;5581:18;;:::i;:::-;5545:56;5625:38;5657:4;5651:11;5625:38;:::i;:::-;5710:67;5770:6;5762;5756:4;5710:67;:::i;:::-;5804:1;5828:4;5815:17;;5860:2;5852:6;5849:14;5877:1;5872:618;;;;6534:1;6551:6;6548:77;;;6600:9;6595:3;6591:19;6585:26;6576:35;;6548:77;6651:67;6711:6;6704:5;6651:67;:::i;:::-;6645:4;6638:81;6507:222;5842:887;;5872:618;5924:4;5920:9;5912:6;5908:22;5958:37;5990:4;5958:37;:::i;:::-;6017:1;6031:208;6045:7;6042:1;6039:14;6031:208;;;6124:9;6119:3;6115:19;6109:26;6101:6;6094:42;6175:1;6167:6;6163:14;6153:24;;6222:2;6211:9;6207:18;6194:31;;6068:4;6065:1;6061:12;6056:17;;6031:208;;;6267:6;6258:7;6255:19;6252:179;;;6325:9;6320:3;6316:19;6310:26;6368:48;6410:4;6402:6;6398:17;6387:9;6368:48;:::i;:::-;6360:6;6353:64;6275:156;6252:179;6477:1;6473;6465:6;6461:14;6457:22;6451:4;6444:36;5879:611;;;5842:887;;5432:1303;;;5340:1395;;:::o;314:1294:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BURNER_ROLE_1329": {
									"entryPoint": 1522,
									"id": 1329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 2286,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1324": {
									"entryPoint": 2326,
									"id": 1324,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAUSER_ROLE_1334": {
									"entryPoint": 2526,
									"id": 1334,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1029": {
									"entryPoint": 2674,
									"id": 1029,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1089": {
									"entryPoint": 3919,
									"id": 1089,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1011": {
									"entryPoint": 3792,
									"id": 1011,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 4919,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 3079,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 3099,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_978": {
									"entryPoint": 3567,
									"id": 978,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1254": {
									"entryPoint": 2667,
									"id": 1254,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_606": {
									"entryPoint": 3694,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_579": {
									"entryPoint": 5000,
									"id": 579,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 3333,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1137": {
									"entryPoint": 2692,
									"id": 1137,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_868": {
									"entryPoint": 2839,
									"id": 868,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_945": {
									"entryPoint": 4382,
									"id": 945,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_765": {
									"entryPoint": 2396,
									"id": 765,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_789": {
									"entryPoint": 1404,
									"id": 789,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_724": {
									"entryPoint": 1863,
									"id": 724,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1407": {
									"entryPoint": 2229,
									"id": 1407,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_702": {
									"entryPoint": 1592,
									"id": 702,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 1493,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 1558,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 1985,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_1391": {
									"entryPoint": 1723,
									"id": 1391,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_684": {
									"entryPoint": 1260,
									"id": 684,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1417": {
									"entryPoint": 1932,
									"id": 1417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_567": {
									"entryPoint": 1842,
									"id": 567,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 1600,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 2362,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1295": {
									"entryPoint": 2562,
									"id": 1295,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1139,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_693": {
									"entryPoint": 2085,
									"id": 693,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_711": {
									"entryPoint": 1438,
									"id": 711,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_821": {
									"entryPoint": 1447,
									"id": 821,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_748": {
									"entryPoint": 2292,
									"id": 748,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 6489,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6315,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5283,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6393,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6103,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5074,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 6528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf": {
									"entryPoint": 6196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11922:11",
										"nodeType": "YulBlock",
										"src": "0:11922:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "378:105:11",
													"nodeType": "YulBlock",
													"src": "378:105:11",
													"statements": [
														{
															"nativeSrc": "388:89:11",
															"nodeType": "YulAssignment",
															"src": "388:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:11",
																		"nodeType": "YulLiteral",
																		"src": "410:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:11"
																},
																"nativeSrc": "399:78:11",
																"nodeType": "YulFunctionCall",
																"src": "399:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:11",
														"nodeType": "YulTypedName",
														"src": "360:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:11",
														"nodeType": "YulTypedName",
														"src": "370:7:11",
														"type": ""
													}
												],
												"src": "334:149:11"
											},
											{
												"body": {
													"nativeSrc": "531:78:11",
													"nodeType": "YulBlock",
													"src": "531:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:11",
																"nodeType": "YulBlock",
																"src": "587:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:11",
																					"nodeType": "YulLiteral",
																					"src": "596:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:11",
																					"nodeType": "YulLiteral",
																					"src": "599:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:11"
																			},
																			"nativeSrc": "589:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:11"
																		},
																		"nativeSrc": "589:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:11"
																				},
																				"nativeSrc": "561:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:11"
																		},
																		"nativeSrc": "551:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:11"
																},
																"nativeSrc": "544:42:11",
																"nodeType": "YulFunctionCall",
																"src": "544:42:11"
															},
															"nativeSrc": "541:62:11",
															"nodeType": "YulIf",
															"src": "541:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:11",
														"nodeType": "YulTypedName",
														"src": "524:5:11",
														"type": ""
													}
												],
												"src": "489:120:11"
											},
											{
												"body": {
													"nativeSrc": "666:86:11",
													"nodeType": "YulBlock",
													"src": "666:86:11",
													"statements": [
														{
															"nativeSrc": "676:29:11",
															"nodeType": "YulAssignment",
															"src": "676:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:11"
																},
																"nativeSrc": "685:20:11",
																"nodeType": "YulFunctionCall",
																"src": "685:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:11"
																},
																"nativeSrc": "714:32:11",
																"nodeType": "YulFunctionCall",
																"src": "714:32:11"
															},
															"nativeSrc": "714:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:11",
														"nodeType": "YulTypedName",
														"src": "644:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:11",
														"nodeType": "YulTypedName",
														"src": "652:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:11",
														"nodeType": "YulTypedName",
														"src": "660:5:11",
														"type": ""
													}
												],
												"src": "615:137:11"
											},
											{
												"body": {
													"nativeSrc": "823:262:11",
													"nodeType": "YulBlock",
													"src": "823:262:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:11",
																"nodeType": "YulBlock",
																"src": "869:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:11"
																			},
																			"nativeSrc": "871:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:11"
																		},
																		"nativeSrc": "871:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:11"
																		},
																		"nativeSrc": "840:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:11",
																		"nodeType": "YulLiteral",
																		"src": "865:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:11"
																},
																"nativeSrc": "836:32:11",
																"nodeType": "YulFunctionCall",
																"src": "836:32:11"
															},
															"nativeSrc": "833:119:11",
															"nodeType": "YulIf",
															"src": "833:119:11"
														},
														{
															"nativeSrc": "962:116:11",
															"nodeType": "YulBlock",
															"src": "962:116:11",
															"statements": [
																{
																	"nativeSrc": "977:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:11",
																		"nodeType": "YulLiteral",
																		"src": "991:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:11",
																			"nodeType": "YulTypedName",
																			"src": "981:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:11",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:11"
																				},
																				"nativeSrc": "1036:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:11",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:11"
																		},
																		"nativeSrc": "1016:52:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:11",
														"nodeType": "YulTypedName",
														"src": "793:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:11",
														"nodeType": "YulTypedName",
														"src": "804:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:11",
														"nodeType": "YulTypedName",
														"src": "816:6:11",
														"type": ""
													}
												],
												"src": "758:327:11"
											},
											{
												"body": {
													"nativeSrc": "1133:48:11",
													"nodeType": "YulBlock",
													"src": "1133:48:11",
													"statements": [
														{
															"nativeSrc": "1143:32:11",
															"nodeType": "YulAssignment",
															"src": "1143:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:11"
																		},
																		"nativeSrc": "1161:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:11"
																},
																"nativeSrc": "1154:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:11",
														"nodeType": "YulTypedName",
														"src": "1115:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:11",
														"nodeType": "YulTypedName",
														"src": "1125:7:11",
														"type": ""
													}
												],
												"src": "1091:90:11"
											},
											{
												"body": {
													"nativeSrc": "1246:50:11",
													"nodeType": "YulBlock",
													"src": "1246:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:11"
																		},
																		"nativeSrc": "1268:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:11"
																},
																"nativeSrc": "1256:34:11",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:11"
															},
															"nativeSrc": "1256:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:11",
														"nodeType": "YulTypedName",
														"src": "1234:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:11",
														"nodeType": "YulTypedName",
														"src": "1241:3:11",
														"type": ""
													}
												],
												"src": "1187:109:11"
											},
											{
												"body": {
													"nativeSrc": "1394:118:11",
													"nodeType": "YulBlock",
													"src": "1394:118:11",
													"statements": [
														{
															"nativeSrc": "1404:26:11",
															"nodeType": "YulAssignment",
															"src": "1404:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:11"
																},
																"nativeSrc": "1412:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:11"
																		},
																		"nativeSrc": "1487:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:11"
																},
																"nativeSrc": "1440:65:11",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:11"
															},
															"nativeSrc": "1440:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:11",
														"nodeType": "YulTypedName",
														"src": "1366:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:11",
														"nodeType": "YulTypedName",
														"src": "1378:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:11",
														"nodeType": "YulTypedName",
														"src": "1389:4:11",
														"type": ""
													}
												],
												"src": "1302:210:11"
											},
											{
												"body": {
													"nativeSrc": "1577:40:11",
													"nodeType": "YulBlock",
													"src": "1577:40:11",
													"statements": [
														{
															"nativeSrc": "1588:22:11",
															"nodeType": "YulAssignment",
															"src": "1588:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:11"
																},
																"nativeSrc": "1598:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:11",
														"nodeType": "YulTypedName",
														"src": "1560:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:11",
														"nodeType": "YulTypedName",
														"src": "1570:6:11",
														"type": ""
													}
												],
												"src": "1518:99:11"
											},
											{
												"body": {
													"nativeSrc": "1719:73:11",
													"nodeType": "YulBlock",
													"src": "1719:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:11"
																},
																"nativeSrc": "1729:19:11",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:11"
															},
															"nativeSrc": "1729:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:11"
														},
														{
															"nativeSrc": "1757:29:11",
															"nodeType": "YulAssignment",
															"src": "1757:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:11"
																},
																"nativeSrc": "1772:14:11",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:11",
														"nodeType": "YulTypedName",
														"src": "1691:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:11",
														"nodeType": "YulTypedName",
														"src": "1696:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:11",
														"nodeType": "YulTypedName",
														"src": "1707:11:11",
														"type": ""
													}
												],
												"src": "1623:169:11"
											},
											{
												"body": {
													"nativeSrc": "1860:184:11",
													"nodeType": "YulBlock",
													"src": "1860:184:11",
													"statements": [
														{
															"nativeSrc": "1870:10:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:11",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:11",
																"nodeType": "YulLiteral",
																"src": "1879:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:11",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:11",
																"nodeType": "YulBlock",
																"src": "1939:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:11"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:11"
																					},
																					"nativeSrc": "1960:11:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:11"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:11"
																							},
																							"nativeSrc": "1979:11:11",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:11"
																					},
																					"nativeSrc": "1973:18:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:11"
																			},
																			"nativeSrc": "1953:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:11"
																		},
																		"nativeSrc": "1953:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:11"
																},
																"nativeSrc": "1897:13:11",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:11"
															},
															"nativeSrc": "1889:113:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:11",
																"nodeType": "YulBlock",
																"src": "1911:19:11",
																"statements": [
																	{
																		"nativeSrc": "1913:15:11",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:11",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:11",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:11"
																			},
																			"nativeSrc": "1918:10:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:11",
																"nodeType": "YulBlock",
																"src": "1893:3:11",
																"statements": []
															},
															"src": "1889:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:11"
																		},
																		"nativeSrc": "2018:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:11"
																},
																"nativeSrc": "2011:27:11",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:11"
															},
															"nativeSrc": "2011:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:11",
														"nodeType": "YulTypedName",
														"src": "1842:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:11",
														"nodeType": "YulTypedName",
														"src": "1847:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:11",
														"nodeType": "YulTypedName",
														"src": "1852:6:11",
														"type": ""
													}
												],
												"src": "1798:246:11"
											},
											{
												"body": {
													"nativeSrc": "2098:54:11",
													"nodeType": "YulBlock",
													"src": "2098:54:11",
													"statements": [
														{
															"nativeSrc": "2108:38:11",
															"nodeType": "YulAssignment",
															"src": "2108:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:11"
																		},
																		"nativeSrc": "2122:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:11"
																		},
																		"nativeSrc": "2138:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:11"
																},
																"nativeSrc": "2118:28:11",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:11",
														"nodeType": "YulTypedName",
														"src": "2081:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:11",
														"nodeType": "YulTypedName",
														"src": "2091:6:11",
														"type": ""
													}
												],
												"src": "2050:102:11"
											},
											{
												"body": {
													"nativeSrc": "2250:285:11",
													"nodeType": "YulBlock",
													"src": "2250:285:11",
													"statements": [
														{
															"nativeSrc": "2260:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:11"
																},
																"nativeSrc": "2274:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:11",
															"nodeType": "YulAssignment",
															"src": "2322:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:11"
																},
																"nativeSrc": "2329:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:11"
																		},
																		"nativeSrc": "2444:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:11"
																},
																"nativeSrc": "2409:65:11",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:11"
															},
															"nativeSrc": "2409:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:11"
														},
														{
															"nativeSrc": "2483:46:11",
															"nodeType": "YulAssignment",
															"src": "2483:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:11"
																		},
																		"nativeSrc": "2499:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:11"
																},
																"nativeSrc": "2490:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:11",
														"nodeType": "YulTypedName",
														"src": "2231:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:11",
														"nodeType": "YulTypedName",
														"src": "2238:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:11",
														"nodeType": "YulTypedName",
														"src": "2246:3:11",
														"type": ""
													}
												],
												"src": "2158:377:11"
											},
											{
												"body": {
													"nativeSrc": "2659:195:11",
													"nodeType": "YulBlock",
													"src": "2659:195:11",
													"statements": [
														{
															"nativeSrc": "2669:26:11",
															"nodeType": "YulAssignment",
															"src": "2669:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:11"
																},
																"nativeSrc": "2677:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:11"
																		},
																		"nativeSrc": "2712:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:11"
																		},
																		"nativeSrc": "2731:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:11"
																},
																"nativeSrc": "2705:47:11",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:11"
															},
															"nativeSrc": "2705:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:11"
														},
														{
															"nativeSrc": "2761:86:11",
															"nodeType": "YulAssignment",
															"src": "2761:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:11"
																},
																"nativeSrc": "2769:78:11",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:11",
														"nodeType": "YulTypedName",
														"src": "2631:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:11",
														"nodeType": "YulTypedName",
														"src": "2643:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:11",
														"nodeType": "YulTypedName",
														"src": "2654:4:11",
														"type": ""
													}
												],
												"src": "2541:313:11"
											},
											{
												"body": {
													"nativeSrc": "2905:81:11",
													"nodeType": "YulBlock",
													"src": "2905:81:11",
													"statements": [
														{
															"nativeSrc": "2915:65:11",
															"nodeType": "YulAssignment",
															"src": "2915:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2930:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2930:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2937:42:11",
																		"nodeType": "YulLiteral",
																		"src": "2937:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2926:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2926:3:11"
																},
																"nativeSrc": "2926:54:11",
																"nodeType": "YulFunctionCall",
																"src": "2926:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2860:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:11",
														"nodeType": "YulTypedName",
														"src": "2887:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:11",
														"nodeType": "YulTypedName",
														"src": "2897:7:11",
														"type": ""
													}
												],
												"src": "2860:126:11"
											},
											{
												"body": {
													"nativeSrc": "3037:51:11",
													"nodeType": "YulBlock",
													"src": "3037:51:11",
													"statements": [
														{
															"nativeSrc": "3047:35:11",
															"nodeType": "YulAssignment",
															"src": "3047:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3076:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3076:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3058:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "3058:17:11"
																},
																"nativeSrc": "3058:24:11",
																"nodeType": "YulFunctionCall",
																"src": "3058:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3047:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "3047:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2992:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3019:5:11",
														"nodeType": "YulTypedName",
														"src": "3019:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3029:7:11",
														"nodeType": "YulTypedName",
														"src": "3029:7:11",
														"type": ""
													}
												],
												"src": "2992:96:11"
											},
											{
												"body": {
													"nativeSrc": "3137:79:11",
													"nodeType": "YulBlock",
													"src": "3137:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3194:16:11",
																"nodeType": "YulBlock",
																"src": "3194:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3203:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3203:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3206:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3206:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3196:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3196:6:11"
																			},
																			"nativeSrc": "3196:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3196:12:11"
																		},
																		"nativeSrc": "3196:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3196:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3160:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3160:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3185:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3185:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3167:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3167:17:11"
																				},
																				"nativeSrc": "3167:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3167:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3157:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3157:2:11"
																		},
																		"nativeSrc": "3157:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3157:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3150:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3150:6:11"
																},
																"nativeSrc": "3150:43:11",
																"nodeType": "YulFunctionCall",
																"src": "3150:43:11"
															},
															"nativeSrc": "3147:63:11",
															"nodeType": "YulIf",
															"src": "3147:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3094:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3130:5:11",
														"nodeType": "YulTypedName",
														"src": "3130:5:11",
														"type": ""
													}
												],
												"src": "3094:122:11"
											},
											{
												"body": {
													"nativeSrc": "3274:87:11",
													"nodeType": "YulBlock",
													"src": "3274:87:11",
													"statements": [
														{
															"nativeSrc": "3284:29:11",
															"nodeType": "YulAssignment",
															"src": "3284:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3306:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3306:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3293:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3293:12:11"
																},
																"nativeSrc": "3293:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3293:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3284:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3284:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3349:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3349:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3322:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3322:26:11"
																},
																"nativeSrc": "3322:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3322:33:11"
															},
															"nativeSrc": "3322:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3322:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3222:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3252:6:11",
														"nodeType": "YulTypedName",
														"src": "3252:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3260:3:11",
														"nodeType": "YulTypedName",
														"src": "3260:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3268:5:11",
														"nodeType": "YulTypedName",
														"src": "3268:5:11",
														"type": ""
													}
												],
												"src": "3222:139:11"
											},
											{
												"body": {
													"nativeSrc": "3412:32:11",
													"nodeType": "YulBlock",
													"src": "3412:32:11",
													"statements": [
														{
															"nativeSrc": "3422:16:11",
															"nodeType": "YulAssignment",
															"src": "3422:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "3433:5:11",
																"nodeType": "YulIdentifier",
																"src": "3433:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3422:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "3422:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3367:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3394:5:11",
														"nodeType": "YulTypedName",
														"src": "3394:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3404:7:11",
														"nodeType": "YulTypedName",
														"src": "3404:7:11",
														"type": ""
													}
												],
												"src": "3367:77:11"
											},
											{
												"body": {
													"nativeSrc": "3493:79:11",
													"nodeType": "YulBlock",
													"src": "3493:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3550:16:11",
																"nodeType": "YulBlock",
																"src": "3550:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3559:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3559:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3562:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3562:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3552:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3552:6:11"
																			},
																			"nativeSrc": "3552:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3552:12:11"
																		},
																		"nativeSrc": "3552:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3552:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3516:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3516:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3541:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3541:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3523:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3523:17:11"
																				},
																				"nativeSrc": "3523:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3523:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3513:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3513:2:11"
																		},
																		"nativeSrc": "3513:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3513:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3506:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3506:6:11"
																},
																"nativeSrc": "3506:43:11",
																"nodeType": "YulFunctionCall",
																"src": "3506:43:11"
															},
															"nativeSrc": "3503:63:11",
															"nodeType": "YulIf",
															"src": "3503:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3450:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3486:5:11",
														"nodeType": "YulTypedName",
														"src": "3486:5:11",
														"type": ""
													}
												],
												"src": "3450:122:11"
											},
											{
												"body": {
													"nativeSrc": "3630:87:11",
													"nodeType": "YulBlock",
													"src": "3630:87:11",
													"statements": [
														{
															"nativeSrc": "3640:29:11",
															"nodeType": "YulAssignment",
															"src": "3640:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3662:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3662:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3649:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3649:12:11"
																},
																"nativeSrc": "3649:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3649:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3640:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3640:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3705:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3705:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3678:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3678:26:11"
																},
																"nativeSrc": "3678:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3678:33:11"
															},
															"nativeSrc": "3678:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3678:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3578:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3608:6:11",
														"nodeType": "YulTypedName",
														"src": "3608:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3616:3:11",
														"nodeType": "YulTypedName",
														"src": "3616:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3624:5:11",
														"nodeType": "YulTypedName",
														"src": "3624:5:11",
														"type": ""
													}
												],
												"src": "3578:139:11"
											},
											{
												"body": {
													"nativeSrc": "3806:391:11",
													"nodeType": "YulBlock",
													"src": "3806:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3852:83:11",
																"nodeType": "YulBlock",
																"src": "3852:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3854:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3854:77:11"
																			},
																			"nativeSrc": "3854:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3854:79:11"
																		},
																		"nativeSrc": "3854:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3854:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3827:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3827:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3836:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3836:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3823:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:11"
																		},
																		"nativeSrc": "3823:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3823:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3848:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3819:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3819:3:11"
																},
																"nativeSrc": "3819:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3819:32:11"
															},
															"nativeSrc": "3816:119:11",
															"nodeType": "YulIf",
															"src": "3816:119:11"
														},
														{
															"nativeSrc": "3945:117:11",
															"nodeType": "YulBlock",
															"src": "3945:117:11",
															"statements": [
																{
																	"nativeSrc": "3960:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3960:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3974:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3964:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3964:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3989:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3989:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4024:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4024:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4035:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4035:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4020:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4020:3:11"
																				},
																				"nativeSrc": "4020:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4020:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4044:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4044:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3999:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3999:20:11"
																		},
																		"nativeSrc": "3999:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3989:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3989:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4072:118:11",
															"nodeType": "YulBlock",
															"src": "4072:118:11",
															"statements": [
																{
																	"nativeSrc": "4087:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4087:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4101:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4101:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4091:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4091:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4117:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4117:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4152:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4152:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4163:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4163:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4148:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4148:3:11"
																				},
																				"nativeSrc": "4148:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4148:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4172:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4172:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4127:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4127:20:11"
																		},
																		"nativeSrc": "4127:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4127:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4117:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4117:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3723:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3768:9:11",
														"nodeType": "YulTypedName",
														"src": "3768:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3779:7:11",
														"nodeType": "YulTypedName",
														"src": "3779:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3791:6:11",
														"nodeType": "YulTypedName",
														"src": "3791:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3799:6:11",
														"nodeType": "YulTypedName",
														"src": "3799:6:11",
														"type": ""
													}
												],
												"src": "3723:474:11"
											},
											{
												"body": {
													"nativeSrc": "4268:53:11",
													"nodeType": "YulBlock",
													"src": "4268:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4285:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4285:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4308:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4308:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4290:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "4290:17:11"
																		},
																		"nativeSrc": "4290:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4290:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4278:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:11"
																},
																"nativeSrc": "4278:37:11",
																"nodeType": "YulFunctionCall",
																"src": "4278:37:11"
															},
															"nativeSrc": "4278:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "4278:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4203:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4256:5:11",
														"nodeType": "YulTypedName",
														"src": "4256:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4263:3:11",
														"nodeType": "YulTypedName",
														"src": "4263:3:11",
														"type": ""
													}
												],
												"src": "4203:118:11"
											},
											{
												"body": {
													"nativeSrc": "4425:124:11",
													"nodeType": "YulBlock",
													"src": "4425:124:11",
													"statements": [
														{
															"nativeSrc": "4435:26:11",
															"nodeType": "YulAssignment",
															"src": "4435:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4447:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4447:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4458:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4458:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4443:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4443:3:11"
																},
																"nativeSrc": "4443:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4443:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4435:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4435:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4515:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4515:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4528:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4528:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4539:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4539:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4524:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4524:3:11"
																		},
																		"nativeSrc": "4524:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4524:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4471:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4471:43:11"
																},
																"nativeSrc": "4471:71:11",
																"nodeType": "YulFunctionCall",
																"src": "4471:71:11"
															},
															"nativeSrc": "4471:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "4471:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4327:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4397:9:11",
														"nodeType": "YulTypedName",
														"src": "4397:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4409:6:11",
														"nodeType": "YulTypedName",
														"src": "4409:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4420:4:11",
														"nodeType": "YulTypedName",
														"src": "4420:4:11",
														"type": ""
													}
												],
												"src": "4327:222:11"
											},
											{
												"body": {
													"nativeSrc": "4655:519:11",
													"nodeType": "YulBlock",
													"src": "4655:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4701:83:11",
																"nodeType": "YulBlock",
																"src": "4701:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4703:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4703:77:11"
																			},
																			"nativeSrc": "4703:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4703:79:11"
																		},
																		"nativeSrc": "4703:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4703:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4676:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4676:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4685:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4685:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4672:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4672:3:11"
																		},
																		"nativeSrc": "4672:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4672:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4697:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4697:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4668:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4668:3:11"
																},
																"nativeSrc": "4668:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4668:32:11"
															},
															"nativeSrc": "4665:119:11",
															"nodeType": "YulIf",
															"src": "4665:119:11"
														},
														{
															"nativeSrc": "4794:117:11",
															"nodeType": "YulBlock",
															"src": "4794:117:11",
															"statements": [
																{
																	"nativeSrc": "4809:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4809:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4823:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4823:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4813:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4813:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4838:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4838:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4873:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4873:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4884:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4884:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4869:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4869:3:11"
																				},
																				"nativeSrc": "4869:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4869:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4893:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4893:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4848:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4848:20:11"
																		},
																		"nativeSrc": "4848:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4848:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4838:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4838:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4921:118:11",
															"nodeType": "YulBlock",
															"src": "4921:118:11",
															"statements": [
																{
																	"nativeSrc": "4936:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4936:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4950:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4950:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4940:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4940:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4966:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4966:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5001:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5001:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5012:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5012:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4997:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4997:3:11"
																				},
																				"nativeSrc": "4997:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4997:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5021:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5021:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4976:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4976:20:11"
																		},
																		"nativeSrc": "4976:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4976:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4966:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4966:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5049:118:11",
															"nodeType": "YulBlock",
															"src": "5049:118:11",
															"statements": [
																{
																	"nativeSrc": "5064:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5064:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5078:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5078:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5068:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5068:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5094:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5094:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5129:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5129:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5140:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5140:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5125:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5125:3:11"
																				},
																				"nativeSrc": "5125:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5125:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5149:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5149:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5104:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5104:20:11"
																		},
																		"nativeSrc": "5104:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5104:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5094:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5094:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4555:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4609:9:11",
														"nodeType": "YulTypedName",
														"src": "4609:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4620:7:11",
														"nodeType": "YulTypedName",
														"src": "4620:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4632:6:11",
														"nodeType": "YulTypedName",
														"src": "4632:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4640:6:11",
														"nodeType": "YulTypedName",
														"src": "4640:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4648:6:11",
														"nodeType": "YulTypedName",
														"src": "4648:6:11",
														"type": ""
													}
												],
												"src": "4555:619:11"
											},
											{
												"body": {
													"nativeSrc": "5225:32:11",
													"nodeType": "YulBlock",
													"src": "5225:32:11",
													"statements": [
														{
															"nativeSrc": "5235:16:11",
															"nodeType": "YulAssignment",
															"src": "5235:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "5246:5:11",
																"nodeType": "YulIdentifier",
																"src": "5246:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5235:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "5235:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5180:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5207:5:11",
														"nodeType": "YulTypedName",
														"src": "5207:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5217:7:11",
														"nodeType": "YulTypedName",
														"src": "5217:7:11",
														"type": ""
													}
												],
												"src": "5180:77:11"
											},
											{
												"body": {
													"nativeSrc": "5306:79:11",
													"nodeType": "YulBlock",
													"src": "5306:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5363:16:11",
																"nodeType": "YulBlock",
																"src": "5363:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5372:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5372:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5375:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5375:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5365:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5365:6:11"
																			},
																			"nativeSrc": "5365:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5365:12:11"
																		},
																		"nativeSrc": "5365:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5365:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5329:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5329:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5354:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5354:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5336:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "5336:17:11"
																				},
																				"nativeSrc": "5336:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5336:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5326:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "5326:2:11"
																		},
																		"nativeSrc": "5326:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5326:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5319:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5319:6:11"
																},
																"nativeSrc": "5319:43:11",
																"nodeType": "YulFunctionCall",
																"src": "5319:43:11"
															},
															"nativeSrc": "5316:63:11",
															"nodeType": "YulIf",
															"src": "5316:63:11"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5263:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5299:5:11",
														"nodeType": "YulTypedName",
														"src": "5299:5:11",
														"type": ""
													}
												],
												"src": "5263:122:11"
											},
											{
												"body": {
													"nativeSrc": "5443:87:11",
													"nodeType": "YulBlock",
													"src": "5443:87:11",
													"statements": [
														{
															"nativeSrc": "5453:29:11",
															"nodeType": "YulAssignment",
															"src": "5453:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5475:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5475:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5462:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5462:12:11"
																},
																"nativeSrc": "5462:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5462:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5453:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5453:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5518:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5518:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5491:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "5491:26:11"
																},
																"nativeSrc": "5491:33:11",
																"nodeType": "YulFunctionCall",
																"src": "5491:33:11"
															},
															"nativeSrc": "5491:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "5491:33:11"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5391:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5421:6:11",
														"nodeType": "YulTypedName",
														"src": "5421:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5429:3:11",
														"nodeType": "YulTypedName",
														"src": "5429:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5437:5:11",
														"nodeType": "YulTypedName",
														"src": "5437:5:11",
														"type": ""
													}
												],
												"src": "5391:139:11"
											},
											{
												"body": {
													"nativeSrc": "5602:263:11",
													"nodeType": "YulBlock",
													"src": "5602:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5648:83:11",
																"nodeType": "YulBlock",
																"src": "5648:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5650:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5650:77:11"
																			},
																			"nativeSrc": "5650:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5650:79:11"
																		},
																		"nativeSrc": "5650:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5650:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5623:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5623:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5632:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5632:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5619:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5619:3:11"
																		},
																		"nativeSrc": "5619:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5619:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5644:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5644:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5615:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5615:3:11"
																},
																"nativeSrc": "5615:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5615:32:11"
															},
															"nativeSrc": "5612:119:11",
															"nodeType": "YulIf",
															"src": "5612:119:11"
														},
														{
															"nativeSrc": "5741:117:11",
															"nodeType": "YulBlock",
															"src": "5741:117:11",
															"statements": [
																{
																	"nativeSrc": "5756:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5756:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5770:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5770:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5760:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5760:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5785:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5785:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5820:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5820:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5831:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5831:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5816:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5816:3:11"
																				},
																				"nativeSrc": "5816:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5816:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5840:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5840:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5795:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5795:20:11"
																		},
																		"nativeSrc": "5795:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5795:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5785:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5785:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5536:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5572:9:11",
														"nodeType": "YulTypedName",
														"src": "5572:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5583:7:11",
														"nodeType": "YulTypedName",
														"src": "5583:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5595:6:11",
														"nodeType": "YulTypedName",
														"src": "5595:6:11",
														"type": ""
													}
												],
												"src": "5536:329:11"
											},
											{
												"body": {
													"nativeSrc": "5936:53:11",
													"nodeType": "YulBlock",
													"src": "5936:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5953:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5953:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5976:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5976:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5958:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "5958:17:11"
																		},
																		"nativeSrc": "5958:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5958:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5946:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5946:6:11"
																},
																"nativeSrc": "5946:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5946:37:11"
															},
															"nativeSrc": "5946:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "5946:37:11"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5871:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5924:5:11",
														"nodeType": "YulTypedName",
														"src": "5924:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5931:3:11",
														"nodeType": "YulTypedName",
														"src": "5931:3:11",
														"type": ""
													}
												],
												"src": "5871:118:11"
											},
											{
												"body": {
													"nativeSrc": "6093:124:11",
													"nodeType": "YulBlock",
													"src": "6093:124:11",
													"statements": [
														{
															"nativeSrc": "6103:26:11",
															"nodeType": "YulAssignment",
															"src": "6103:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6115:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6115:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6126:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6126:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6111:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6111:3:11"
																},
																"nativeSrc": "6111:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6111:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6103:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6103:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6183:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6183:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6196:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6207:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6207:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6192:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:11"
																		},
																		"nativeSrc": "6192:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6192:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6139:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6139:43:11"
																},
																"nativeSrc": "6139:71:11",
																"nodeType": "YulFunctionCall",
																"src": "6139:71:11"
															},
															"nativeSrc": "6139:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "6139:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5995:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6065:9:11",
														"nodeType": "YulTypedName",
														"src": "6065:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6077:6:11",
														"nodeType": "YulTypedName",
														"src": "6077:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6088:4:11",
														"nodeType": "YulTypedName",
														"src": "6088:4:11",
														"type": ""
													}
												],
												"src": "5995:222:11"
											},
											{
												"body": {
													"nativeSrc": "6306:391:11",
													"nodeType": "YulBlock",
													"src": "6306:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6352:83:11",
																"nodeType": "YulBlock",
																"src": "6352:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6354:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6354:77:11"
																			},
																			"nativeSrc": "6354:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6354:79:11"
																		},
																		"nativeSrc": "6354:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6354:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6327:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6327:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6336:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6336:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6323:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6323:3:11"
																		},
																		"nativeSrc": "6323:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6323:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6348:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6348:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6319:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6319:3:11"
																},
																"nativeSrc": "6319:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6319:32:11"
															},
															"nativeSrc": "6316:119:11",
															"nodeType": "YulIf",
															"src": "6316:119:11"
														},
														{
															"nativeSrc": "6445:117:11",
															"nodeType": "YulBlock",
															"src": "6445:117:11",
															"statements": [
																{
																	"nativeSrc": "6460:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6460:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6474:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6474:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6464:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6464:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6489:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6489:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6524:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6524:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6535:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6535:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6520:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6520:3:11"
																				},
																				"nativeSrc": "6520:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6520:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6544:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6544:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6499:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6499:20:11"
																		},
																		"nativeSrc": "6499:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6499:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6489:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6489:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6572:118:11",
															"nodeType": "YulBlock",
															"src": "6572:118:11",
															"statements": [
																{
																	"nativeSrc": "6587:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6587:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6601:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6601:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6591:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6591:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6617:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6617:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6652:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6652:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6663:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6663:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6648:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6648:3:11"
																				},
																				"nativeSrc": "6648:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6648:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6672:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6672:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6627:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6627:20:11"
																		},
																		"nativeSrc": "6627:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6627:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6617:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6617:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6223:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6268:9:11",
														"nodeType": "YulTypedName",
														"src": "6268:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6279:7:11",
														"nodeType": "YulTypedName",
														"src": "6279:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6291:6:11",
														"nodeType": "YulTypedName",
														"src": "6291:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6299:6:11",
														"nodeType": "YulTypedName",
														"src": "6299:6:11",
														"type": ""
													}
												],
												"src": "6223:474:11"
											},
											{
												"body": {
													"nativeSrc": "6746:43:11",
													"nodeType": "YulBlock",
													"src": "6746:43:11",
													"statements": [
														{
															"nativeSrc": "6756:27:11",
															"nodeType": "YulAssignment",
															"src": "6756:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6771:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6771:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6778:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6778:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6767:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6767:3:11"
																},
																"nativeSrc": "6767:16:11",
																"nodeType": "YulFunctionCall",
																"src": "6767:16:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6756:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "6756:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6703:86:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6728:5:11",
														"nodeType": "YulTypedName",
														"src": "6728:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6738:7:11",
														"nodeType": "YulTypedName",
														"src": "6738:7:11",
														"type": ""
													}
												],
												"src": "6703:86:11"
											},
											{
												"body": {
													"nativeSrc": "6856:51:11",
													"nodeType": "YulBlock",
													"src": "6856:51:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6873:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6873:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6894:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6894:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6878:15:11",
																			"nodeType": "YulIdentifier",
																			"src": "6878:15:11"
																		},
																		"nativeSrc": "6878:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6878:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6866:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6866:6:11"
																},
																"nativeSrc": "6866:35:11",
																"nodeType": "YulFunctionCall",
																"src": "6866:35:11"
															},
															"nativeSrc": "6866:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "6866:35:11"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6795:112:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6844:5:11",
														"nodeType": "YulTypedName",
														"src": "6844:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6851:3:11",
														"nodeType": "YulTypedName",
														"src": "6851:3:11",
														"type": ""
													}
												],
												"src": "6795:112:11"
											},
											{
												"body": {
													"nativeSrc": "7007:120:11",
													"nodeType": "YulBlock",
													"src": "7007:120:11",
													"statements": [
														{
															"nativeSrc": "7017:26:11",
															"nodeType": "YulAssignment",
															"src": "7017:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7029:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7029:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7040:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7040:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7025:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7025:3:11"
																},
																"nativeSrc": "7025:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7025:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7017:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7017:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7093:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7093:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7106:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7106:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7117:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7117:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7102:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7102:3:11"
																		},
																		"nativeSrc": "7102:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7102:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7053:39:11",
																	"nodeType": "YulIdentifier",
																	"src": "7053:39:11"
																},
																"nativeSrc": "7053:67:11",
																"nodeType": "YulFunctionCall",
																"src": "7053:67:11"
															},
															"nativeSrc": "7053:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "7053:67:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6913:214:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6979:9:11",
														"nodeType": "YulTypedName",
														"src": "6979:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6991:6:11",
														"nodeType": "YulTypedName",
														"src": "6991:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7002:4:11",
														"nodeType": "YulTypedName",
														"src": "7002:4:11",
														"type": ""
													}
												],
												"src": "6913:214:11"
											},
											{
												"body": {
													"nativeSrc": "7199:263:11",
													"nodeType": "YulBlock",
													"src": "7199:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7245:83:11",
																"nodeType": "YulBlock",
																"src": "7245:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7247:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "7247:77:11"
																			},
																			"nativeSrc": "7247:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7247:79:11"
																		},
																		"nativeSrc": "7247:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7247:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7220:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7220:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7229:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7229:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7216:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7216:3:11"
																		},
																		"nativeSrc": "7216:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7216:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7241:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7241:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7212:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7212:3:11"
																},
																"nativeSrc": "7212:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7212:32:11"
															},
															"nativeSrc": "7209:119:11",
															"nodeType": "YulIf",
															"src": "7209:119:11"
														},
														{
															"nativeSrc": "7338:117:11",
															"nodeType": "YulBlock",
															"src": "7338:117:11",
															"statements": [
																{
																	"nativeSrc": "7353:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7353:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7367:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7367:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7357:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7357:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7382:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7382:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7417:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7417:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7428:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7428:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7413:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7413:3:11"
																				},
																				"nativeSrc": "7413:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7413:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7437:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7437:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7392:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7392:20:11"
																		},
																		"nativeSrc": "7392:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7392:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7382:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7382:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7133:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7169:9:11",
														"nodeType": "YulTypedName",
														"src": "7169:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7180:7:11",
														"nodeType": "YulTypedName",
														"src": "7180:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7192:6:11",
														"nodeType": "YulTypedName",
														"src": "7192:6:11",
														"type": ""
													}
												],
												"src": "7133:329:11"
											},
											{
												"body": {
													"nativeSrc": "7551:391:11",
													"nodeType": "YulBlock",
													"src": "7551:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7597:83:11",
																"nodeType": "YulBlock",
																"src": "7597:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7599:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "7599:77:11"
																			},
																			"nativeSrc": "7599:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7599:79:11"
																		},
																		"nativeSrc": "7599:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7599:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7572:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7572:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7581:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7581:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7568:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7568:3:11"
																		},
																		"nativeSrc": "7568:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7568:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7593:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7593:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7564:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7564:3:11"
																},
																"nativeSrc": "7564:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7564:32:11"
															},
															"nativeSrc": "7561:119:11",
															"nodeType": "YulIf",
															"src": "7561:119:11"
														},
														{
															"nativeSrc": "7690:117:11",
															"nodeType": "YulBlock",
															"src": "7690:117:11",
															"statements": [
																{
																	"nativeSrc": "7705:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7705:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7719:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7719:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7709:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7709:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7734:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7734:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7769:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7769:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7780:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7780:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7765:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7765:3:11"
																				},
																				"nativeSrc": "7765:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7765:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7789:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7789:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7744:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7744:20:11"
																		},
																		"nativeSrc": "7744:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7744:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7734:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7734:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7817:118:11",
															"nodeType": "YulBlock",
															"src": "7817:118:11",
															"statements": [
																{
																	"nativeSrc": "7832:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7832:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7846:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7846:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7836:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7836:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7862:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7862:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7897:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7897:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7908:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7908:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7893:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7893:3:11"
																				},
																				"nativeSrc": "7893:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7893:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7917:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7917:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7872:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7872:20:11"
																		},
																		"nativeSrc": "7872:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7872:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7862:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7862:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7468:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7513:9:11",
														"nodeType": "YulTypedName",
														"src": "7513:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7524:7:11",
														"nodeType": "YulTypedName",
														"src": "7524:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7536:6:11",
														"nodeType": "YulTypedName",
														"src": "7536:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7544:6:11",
														"nodeType": "YulTypedName",
														"src": "7544:6:11",
														"type": ""
													}
												],
												"src": "7468:474:11"
											},
											{
												"body": {
													"nativeSrc": "7976:152:11",
													"nodeType": "YulBlock",
													"src": "7976:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7993:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7993:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7996:77:11",
																		"nodeType": "YulLiteral",
																		"src": "7996:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7986:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7986:6:11"
																},
																"nativeSrc": "7986:88:11",
																"nodeType": "YulFunctionCall",
																"src": "7986:88:11"
															},
															"nativeSrc": "7986:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "7986:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8090:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8090:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8093:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8093:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8083:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8083:6:11"
																},
																"nativeSrc": "8083:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8083:15:11"
															},
															"nativeSrc": "8083:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8083:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8114:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8114:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8117:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8117:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8107:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8107:6:11"
																},
																"nativeSrc": "8107:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8107:15:11"
															},
															"nativeSrc": "8107:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8107:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7948:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "7948:180:11"
											},
											{
												"body": {
													"nativeSrc": "8185:269:11",
													"nodeType": "YulBlock",
													"src": "8185:269:11",
													"statements": [
														{
															"nativeSrc": "8195:22:11",
															"nodeType": "YulAssignment",
															"src": "8195:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8209:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8209:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8215:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8215:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8205:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8205:3:11"
																},
																"nativeSrc": "8205:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8205:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8195:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8195:6:11"
																}
															]
														},
														{
															"nativeSrc": "8226:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8226:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8256:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8256:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8262:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8262:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8252:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8252:3:11"
																},
																"nativeSrc": "8252:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8252:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8230:18:11",
																	"nodeType": "YulTypedName",
																	"src": "8230:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8303:51:11",
																"nodeType": "YulBlock",
																"src": "8303:51:11",
																"statements": [
																	{
																		"nativeSrc": "8317:27:11",
																		"nodeType": "YulAssignment",
																		"src": "8317:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8331:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "8331:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8339:4:11",
																					"nodeType": "YulLiteral",
																					"src": "8339:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8327:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "8327:3:11"
																			},
																			"nativeSrc": "8327:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8327:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8317:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8317:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8283:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "8283:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8276:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8276:6:11"
																},
																"nativeSrc": "8276:26:11",
																"nodeType": "YulFunctionCall",
																"src": "8276:26:11"
															},
															"nativeSrc": "8273:81:11",
															"nodeType": "YulIf",
															"src": "8273:81:11"
														},
														{
															"body": {
																"nativeSrc": "8406:42:11",
																"nodeType": "YulBlock",
																"src": "8406:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8420:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "8420:16:11"
																			},
																			"nativeSrc": "8420:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8420:18:11"
																		},
																		"nativeSrc": "8420:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8420:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8370:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "8370:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8393:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8393:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8401:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8401:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8390:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "8390:2:11"
																		},
																		"nativeSrc": "8390:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8390:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8367:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8367:2:11"
																},
																"nativeSrc": "8367:38:11",
																"nodeType": "YulFunctionCall",
																"src": "8367:38:11"
															},
															"nativeSrc": "8364:84:11",
															"nodeType": "YulIf",
															"src": "8364:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8134:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8169:4:11",
														"nodeType": "YulTypedName",
														"src": "8169:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8178:6:11",
														"nodeType": "YulTypedName",
														"src": "8178:6:11",
														"type": ""
													}
												],
												"src": "8134:320:11"
											},
											{
												"body": {
													"nativeSrc": "8566:66:11",
													"nodeType": "YulBlock",
													"src": "8566:66:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8588:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8588:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8596:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8596:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8584:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8584:3:11"
																		},
																		"nativeSrc": "8584:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8584:14:11"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f742061206d696e746572",
																		"kind": "string",
																		"nativeSrc": "8600:24:11",
																		"nodeType": "YulLiteral",
																		"src": "8600:24:11",
																		"type": "",
																		"value": "Caller is not a minter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8577:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8577:6:11"
																},
																"nativeSrc": "8577:48:11",
																"nodeType": "YulFunctionCall",
																"src": "8577:48:11"
															},
															"nativeSrc": "8577:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "8577:48:11"
														}
													]
												},
												"name": "store_literal_in_memory_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf",
												"nativeSrc": "8460:172:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8558:6:11",
														"nodeType": "YulTypedName",
														"src": "8558:6:11",
														"type": ""
													}
												],
												"src": "8460:172:11"
											},
											{
												"body": {
													"nativeSrc": "8784:220:11",
													"nodeType": "YulBlock",
													"src": "8784:220:11",
													"statements": [
														{
															"nativeSrc": "8794:74:11",
															"nodeType": "YulAssignment",
															"src": "8794:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8860:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8860:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8865:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8865:2:11",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8801:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "8801:58:11"
																},
																"nativeSrc": "8801:67:11",
																"nodeType": "YulFunctionCall",
																"src": "8801:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8794:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8794:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8966:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8966:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf",
																	"nativeSrc": "8877:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "8877:88:11"
																},
																"nativeSrc": "8877:93:11",
																"nodeType": "YulFunctionCall",
																"src": "8877:93:11"
															},
															"nativeSrc": "8877:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "8877:93:11"
														},
														{
															"nativeSrc": "8979:19:11",
															"nodeType": "YulAssignment",
															"src": "8979:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8990:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8990:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8995:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8995:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8986:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8986:3:11"
																},
																"nativeSrc": "8986:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8986:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8979:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8979:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8638:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8772:3:11",
														"nodeType": "YulTypedName",
														"src": "8772:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8780:3:11",
														"nodeType": "YulTypedName",
														"src": "8780:3:11",
														"type": ""
													}
												],
												"src": "8638:366:11"
											},
											{
												"body": {
													"nativeSrc": "9181:248:11",
													"nodeType": "YulBlock",
													"src": "9181:248:11",
													"statements": [
														{
															"nativeSrc": "9191:26:11",
															"nodeType": "YulAssignment",
															"src": "9191:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9203:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9203:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9214:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9214:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9199:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9199:3:11"
																},
																"nativeSrc": "9199:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9199:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9191:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9191:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9238:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9238:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9249:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9249:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9234:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9234:3:11"
																		},
																		"nativeSrc": "9234:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9234:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9257:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "9257:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9263:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9263:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9253:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9253:3:11"
																		},
																		"nativeSrc": "9253:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9253:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9227:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9227:6:11"
																},
																"nativeSrc": "9227:47:11",
																"nodeType": "YulFunctionCall",
																"src": "9227:47:11"
															},
															"nativeSrc": "9227:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "9227:47:11"
														},
														{
															"nativeSrc": "9283:139:11",
															"nodeType": "YulAssignment",
															"src": "9283:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9417:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "9417:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9291:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "9291:124:11"
																},
																"nativeSrc": "9291:131:11",
																"nodeType": "YulFunctionCall",
																"src": "9291:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9283:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9283:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9010:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9161:9:11",
														"nodeType": "YulTypedName",
														"src": "9161:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9176:4:11",
														"nodeType": "YulTypedName",
														"src": "9176:4:11",
														"type": ""
													}
												],
												"src": "9010:419:11"
											},
											{
												"body": {
													"nativeSrc": "9500:53:11",
													"nodeType": "YulBlock",
													"src": "9500:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9517:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9517:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9540:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "9540:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9522:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "9522:17:11"
																		},
																		"nativeSrc": "9522:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9522:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9510:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9510:6:11"
																},
																"nativeSrc": "9510:37:11",
																"nodeType": "YulFunctionCall",
																"src": "9510:37:11"
															},
															"nativeSrc": "9510:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "9510:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9435:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9488:5:11",
														"nodeType": "YulTypedName",
														"src": "9488:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9495:3:11",
														"nodeType": "YulTypedName",
														"src": "9495:3:11",
														"type": ""
													}
												],
												"src": "9435:118:11"
											},
											{
												"body": {
													"nativeSrc": "9713:288:11",
													"nodeType": "YulBlock",
													"src": "9713:288:11",
													"statements": [
														{
															"nativeSrc": "9723:26:11",
															"nodeType": "YulAssignment",
															"src": "9723:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9735:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9735:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9746:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9746:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9731:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9731:3:11"
																},
																"nativeSrc": "9731:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9731:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9723:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9723:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9803:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9803:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9816:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9816:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9827:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9827:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9812:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9812:3:11"
																		},
																		"nativeSrc": "9812:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9812:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9759:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "9759:43:11"
																},
																"nativeSrc": "9759:71:11",
																"nodeType": "YulFunctionCall",
																"src": "9759:71:11"
															},
															"nativeSrc": "9759:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "9759:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9884:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9884:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9897:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9897:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9908:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9908:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9893:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9893:3:11"
																		},
																		"nativeSrc": "9893:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9893:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9840:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "9840:43:11"
																},
																"nativeSrc": "9840:72:11",
																"nodeType": "YulFunctionCall",
																"src": "9840:72:11"
															},
															"nativeSrc": "9840:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "9840:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9966:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9966:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9979:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9979:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9990:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9990:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9975:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9975:3:11"
																		},
																		"nativeSrc": "9975:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9975:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9922:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "9922:43:11"
																},
																"nativeSrc": "9922:72:11",
																"nodeType": "YulFunctionCall",
																"src": "9922:72:11"
															},
															"nativeSrc": "9922:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "9922:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9559:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9669:9:11",
														"nodeType": "YulTypedName",
														"src": "9669:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9681:6:11",
														"nodeType": "YulTypedName",
														"src": "9681:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9689:6:11",
														"nodeType": "YulTypedName",
														"src": "9689:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9697:6:11",
														"nodeType": "YulTypedName",
														"src": "9697:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9708:4:11",
														"nodeType": "YulTypedName",
														"src": "9708:4:11",
														"type": ""
													}
												],
												"src": "9559:442:11"
											},
											{
												"body": {
													"nativeSrc": "10105:124:11",
													"nodeType": "YulBlock",
													"src": "10105:124:11",
													"statements": [
														{
															"nativeSrc": "10115:26:11",
															"nodeType": "YulAssignment",
															"src": "10115:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10127:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10127:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10138:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10138:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10123:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10123:3:11"
																},
																"nativeSrc": "10123:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10123:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10115:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10115:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10195:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10195:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10208:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10208:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10219:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10219:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10204:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10204:3:11"
																		},
																		"nativeSrc": "10204:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10204:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10151:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10151:43:11"
																},
																"nativeSrc": "10151:71:11",
																"nodeType": "YulFunctionCall",
																"src": "10151:71:11"
															},
															"nativeSrc": "10151:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "10151:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10007:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10077:9:11",
														"nodeType": "YulTypedName",
														"src": "10077:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10089:6:11",
														"nodeType": "YulTypedName",
														"src": "10089:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10100:4:11",
														"nodeType": "YulTypedName",
														"src": "10100:4:11",
														"type": ""
													}
												],
												"src": "10007:222:11"
											},
											{
												"body": {
													"nativeSrc": "10263:152:11",
													"nodeType": "YulBlock",
													"src": "10263:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10280:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10280:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10283:77:11",
																		"nodeType": "YulLiteral",
																		"src": "10283:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10273:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10273:6:11"
																},
																"nativeSrc": "10273:88:11",
																"nodeType": "YulFunctionCall",
																"src": "10273:88:11"
															},
															"nativeSrc": "10273:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "10273:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10377:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10377:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10380:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10380:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10370:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10370:6:11"
																},
																"nativeSrc": "10370:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10370:15:11"
															},
															"nativeSrc": "10370:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10370:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10401:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10401:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10404:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10404:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10394:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10394:6:11"
																},
																"nativeSrc": "10394:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10394:15:11"
															},
															"nativeSrc": "10394:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10394:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10235:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "10235:180:11"
											},
											{
												"body": {
													"nativeSrc": "10465:147:11",
													"nodeType": "YulBlock",
													"src": "10465:147:11",
													"statements": [
														{
															"nativeSrc": "10475:25:11",
															"nodeType": "YulAssignment",
															"src": "10475:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10498:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10498:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10480:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10480:17:11"
																},
																"nativeSrc": "10480:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10480:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10475:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10475:1:11"
																}
															]
														},
														{
															"nativeSrc": "10509:25:11",
															"nodeType": "YulAssignment",
															"src": "10509:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10532:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10532:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10514:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10514:17:11"
																},
																"nativeSrc": "10514:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10514:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10509:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10509:1:11"
																}
															]
														},
														{
															"nativeSrc": "10543:16:11",
															"nodeType": "YulAssignment",
															"src": "10543:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10554:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10554:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10557:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10557:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10550:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10550:3:11"
																},
																"nativeSrc": "10550:9:11",
																"nodeType": "YulFunctionCall",
																"src": "10550:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10543:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10543:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10583:22:11",
																"nodeType": "YulBlock",
																"src": "10583:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10585:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10585:16:11"
																			},
																			"nativeSrc": "10585:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10585:18:11"
																		},
																		"nativeSrc": "10585:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10585:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10575:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10575:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10578:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10578:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10572:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10572:2:11"
																},
																"nativeSrc": "10572:10:11",
																"nodeType": "YulFunctionCall",
																"src": "10572:10:11"
															},
															"nativeSrc": "10569:36:11",
															"nodeType": "YulIf",
															"src": "10569:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10421:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10452:1:11",
														"nodeType": "YulTypedName",
														"src": "10452:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10455:1:11",
														"nodeType": "YulTypedName",
														"src": "10455:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10461:3:11",
														"nodeType": "YulTypedName",
														"src": "10461:3:11",
														"type": ""
													}
												],
												"src": "10421:191:11"
											},
											{
												"body": {
													"nativeSrc": "10744:206:11",
													"nodeType": "YulBlock",
													"src": "10744:206:11",
													"statements": [
														{
															"nativeSrc": "10754:26:11",
															"nodeType": "YulAssignment",
															"src": "10754:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10766:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10766:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10777:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10777:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10762:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10762:3:11"
																},
																"nativeSrc": "10762:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10762:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10754:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10754:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10834:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10834:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10847:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10847:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10858:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10858:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10843:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10843:3:11"
																		},
																		"nativeSrc": "10843:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10843:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10790:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10790:43:11"
																},
																"nativeSrc": "10790:71:11",
																"nodeType": "YulFunctionCall",
																"src": "10790:71:11"
															},
															"nativeSrc": "10790:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "10790:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10915:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10915:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10928:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10928:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10939:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10939:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10924:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10924:3:11"
																		},
																		"nativeSrc": "10924:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10924:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10871:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10871:43:11"
																},
																"nativeSrc": "10871:72:11",
																"nodeType": "YulFunctionCall",
																"src": "10871:72:11"
															},
															"nativeSrc": "10871:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "10871:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "10618:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10708:9:11",
														"nodeType": "YulTypedName",
														"src": "10708:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10720:6:11",
														"nodeType": "YulTypedName",
														"src": "10720:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10728:6:11",
														"nodeType": "YulTypedName",
														"src": "10728:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10739:4:11",
														"nodeType": "YulTypedName",
														"src": "10739:4:11",
														"type": ""
													}
												],
												"src": "10618:332:11"
											},
											{
												"body": {
													"nativeSrc": "11062:60:11",
													"nodeType": "YulBlock",
													"src": "11062:60:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11084:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11084:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11092:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11092:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11080:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11080:3:11"
																		},
																		"nativeSrc": "11080:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11080:14:11"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "11096:18:11",
																		"nodeType": "YulLiteral",
																		"src": "11096:18:11",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11073:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11073:6:11"
																},
																"nativeSrc": "11073:42:11",
																"nodeType": "YulFunctionCall",
																"src": "11073:42:11"
															},
															"nativeSrc": "11073:42:11",
															"nodeType": "YulExpressionStatement",
															"src": "11073:42:11"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "10956:166:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11054:6:11",
														"nodeType": "YulTypedName",
														"src": "11054:6:11",
														"type": ""
													}
												],
												"src": "10956:166:11"
											},
											{
												"body": {
													"nativeSrc": "11274:220:11",
													"nodeType": "YulBlock",
													"src": "11274:220:11",
													"statements": [
														{
															"nativeSrc": "11284:74:11",
															"nodeType": "YulAssignment",
															"src": "11284:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11350:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11350:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11355:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11355:2:11",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11291:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "11291:58:11"
																},
																"nativeSrc": "11291:67:11",
																"nodeType": "YulFunctionCall",
																"src": "11291:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11284:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11284:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11456:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11456:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "11367:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "11367:88:11"
																},
																"nativeSrc": "11367:93:11",
																"nodeType": "YulFunctionCall",
																"src": "11367:93:11"
															},
															"nativeSrc": "11367:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "11367:93:11"
														},
														{
															"nativeSrc": "11469:19:11",
															"nodeType": "YulAssignment",
															"src": "11469:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11480:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11480:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11485:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11485:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11476:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11476:3:11"
																},
																"nativeSrc": "11476:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11476:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11469:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11469:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11128:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11262:3:11",
														"nodeType": "YulTypedName",
														"src": "11262:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11270:3:11",
														"nodeType": "YulTypedName",
														"src": "11270:3:11",
														"type": ""
													}
												],
												"src": "11128:366:11"
											},
											{
												"body": {
													"nativeSrc": "11671:248:11",
													"nodeType": "YulBlock",
													"src": "11671:248:11",
													"statements": [
														{
															"nativeSrc": "11681:26:11",
															"nodeType": "YulAssignment",
															"src": "11681:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11693:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11693:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11704:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11704:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11689:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11689:3:11"
																},
																"nativeSrc": "11689:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11689:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11681:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11681:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11728:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11728:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11739:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11739:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11724:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11724:3:11"
																		},
																		"nativeSrc": "11724:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11724:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11747:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "11747:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11753:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11753:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11743:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11743:3:11"
																		},
																		"nativeSrc": "11743:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11743:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11717:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11717:6:11"
																},
																"nativeSrc": "11717:47:11",
																"nodeType": "YulFunctionCall",
																"src": "11717:47:11"
															},
															"nativeSrc": "11717:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "11717:47:11"
														},
														{
															"nativeSrc": "11773:139:11",
															"nodeType": "YulAssignment",
															"src": "11773:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11907:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "11907:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11781:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "11781:124:11"
																},
																"nativeSrc": "11781:131:11",
																"nodeType": "YulFunctionCall",
																"src": "11781:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11773:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11773:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11500:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11651:9:11",
														"nodeType": "YulTypedName",
														"src": "11651:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11666:4:11",
														"nodeType": "YulTypedName",
														"src": "11666:4:11",
														"type": ""
													}
												],
												"src": "11500:419:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not a minter\")\n\n    }\n\n    function abi_encode_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061014b575f3560e01c80635c975abb116100c1578063a217fddf1161007a578063a217fddf1461039d578063a9059cbb146103bb578063d5391393146103eb578063d547741f14610409578063dd62ed3e14610425578063e63ab1e9146104555761014b565b80635c975abb146102db57806370a08231146102f95780638456cb591461032957806391d148541461033357806395d89b41146103635780639dc29fac146103815761014b565b8063248a9ca311610113578063248a9ca31461021b578063282c51f31461024b5780632f2ff15d14610269578063313ce5671461028557806336568abe146102a357806340c10f19146102bf5761014b565b806301ffc9a71461014f57806306fdde031461017f578063095ea7b31461019d57806318160ddd146101cd57806323b872dd146101eb575b5f80fd5b6101696004803603810190610164919061142b565b610473565b6040516101769190611470565b60405180910390f35b6101876104ec565b6040516101949190611513565b60405180910390f35b6101b760048036038101906101b291906115c0565b61057c565b6040516101c49190611470565b60405180910390f35b6101d561059e565b6040516101e2919061160d565b60405180910390f35b61020560048036038101906102009190611626565b6105a7565b6040516102129190611470565b60405180910390f35b610235600480360381019061023091906116a9565b6105d5565b60405161024291906116e3565b60405180910390f35b6102536105f2565b60405161026091906116e3565b60405180910390f35b610283600480360381019061027e91906116fc565b610616565b005b61028d610638565b60405161029a9190611755565b60405180910390f35b6102bd60048036038101906102b891906116fc565b610640565b005b6102d960048036038101906102d491906115c0565b6106bb565b005b6102e3610732565b6040516102f09190611470565b60405180910390f35b610313600480360381019061030e919061176e565b610747565b604051610320919061160d565b60405180910390f35b61033161078c565b005b61034d600480360381019061034891906116fc565b6107c1565b60405161035a9190611470565b60405180910390f35b61036b610825565b6040516103789190611513565b60405180910390f35b61039b600480360381019061039691906115c0565b6108b5565b005b6103a56108ee565b6040516103b291906116e3565b60405180910390f35b6103d560048036038101906103d091906115c0565b6108f4565b6040516103e29190611470565b60405180910390f35b6103f3610916565b60405161040091906116e3565b60405180910390f35b610423600480360381019061041e91906116fc565b61093a565b005b61043f600480360381019061043a9190611799565b61095c565b60405161044c919061160d565b60405180910390f35b61045d6109de565b60405161046a91906116e3565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104e557506104e482610a02565b5b9050919050565b6060600380546104fb90611804565b80601f016020809104026020016040519081016040528092919081815260200182805461052790611804565b80156105725780601f1061054957610100808354040283529160200191610572565b820191905f5260205f20905b81548152906001019060200180831161055557829003601f168201915b5050505050905090565b5f80610586610a6b565b9050610593818585610a72565b600191505092915050565b5f600254905090565b5f806105b1610a6b565b90506105be858285610a84565b6105c9858585610b17565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b61061f826105d5565b61062881610c07565b6106328383610c1b565b50505050565b5f6012905090565b610648610a6b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106ac576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106b68282610d05565b505050565b6106e57f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6336107c1565b610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b9061187e565b60405180910390fd5b61072e8282610def565b5050565b5f60065f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6107b681610c07565b6107be610e6e565b50565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60606004805461083490611804565b80601f016020809104026020016040519081016040528092919081815260200182805461086090611804565b80156108ab5780601f10610882576101008083540402835291602001916108ab565b820191905f5260205f20905b81548152906001019060200180831161088e57829003601f168201915b5050505050905090565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8486108df81610c07565b6108e98383610ed0565b505050565b5f801b81565b5f806108fe610a6b565b905061090b818585610b17565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610943826105d5565b61094c81610c07565b6109568383610d05565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b610a7f8383836001610f4f565b505050565b5f610a8f848461095c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610b115781811015610b02578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610af9939291906118ab565b60405180910390fd5b610b1084848484035f610f4f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b87575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b7e91906118e0565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bf7575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bee91906118e0565b60405180910390fd5b610c0283838361111e565b505050565b610c1881610c13610a6b565b611337565b50565b5f610c2683836107c1565b610cfb57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610c98610a6b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610cff565b5f90505b92915050565b5f610d1083836107c1565b15610de5575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610d82610a6b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610de9565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e5f575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e5691906118e0565b60405180910390fd5b610e6a5f838361111e565b5050565b610e76611388565b600160065f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610eb9610a6b565b604051610ec691906118e0565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f40575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f3791906118e0565b60405180910390fd5b610f4b825f8361111e565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fbf575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610fb691906118e0565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361102f575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161102691906118e0565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611118578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161110f919061160d565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361116e578060025f8282546111629190611926565b9250508190555061123c565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156111f7578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016111ee939291906118ab565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611283578060025f82825403925050819055506112cd565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161132a919061160d565b60405180910390a3505050565b61134182826107c1565b6113845780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161137b929190611959565b60405180910390fd5b5050565b611390610732565b156113d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c7906119ca565b60405180910390fd5b565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61140a816113d6565b8114611414575f80fd5b50565b5f8135905061142581611401565b92915050565b5f602082840312156114405761143f6113d2565b5b5f61144d84828501611417565b91505092915050565b5f8115159050919050565b61146a81611456565b82525050565b5f6020820190506114835f830184611461565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156114c05780820151818401526020810190506114a5565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6114e582611489565b6114ef8185611493565b93506114ff8185602086016114a3565b611508816114cb565b840191505092915050565b5f6020820190508181035f83015261152b81846114db565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61155c82611533565b9050919050565b61156c81611552565b8114611576575f80fd5b50565b5f8135905061158781611563565b92915050565b5f819050919050565b61159f8161158d565b81146115a9575f80fd5b50565b5f813590506115ba81611596565b92915050565b5f80604083850312156115d6576115d56113d2565b5b5f6115e385828601611579565b92505060206115f4858286016115ac565b9150509250929050565b6116078161158d565b82525050565b5f6020820190506116205f8301846115fe565b92915050565b5f805f6060848603121561163d5761163c6113d2565b5b5f61164a86828701611579565b935050602061165b86828701611579565b925050604061166c868287016115ac565b9150509250925092565b5f819050919050565b61168881611676565b8114611692575f80fd5b50565b5f813590506116a38161167f565b92915050565b5f602082840312156116be576116bd6113d2565b5b5f6116cb84828501611695565b91505092915050565b6116dd81611676565b82525050565b5f6020820190506116f65f8301846116d4565b92915050565b5f8060408385031215611712576117116113d2565b5b5f61171f85828601611695565b925050602061173085828601611579565b9150509250929050565b5f60ff82169050919050565b61174f8161173a565b82525050565b5f6020820190506117685f830184611746565b92915050565b5f60208284031215611783576117826113d2565b5b5f61179084828501611579565b91505092915050565b5f80604083850312156117af576117ae6113d2565b5b5f6117bc85828601611579565b92505060206117cd85828601611579565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061181b57607f821691505b60208210810361182e5761182d6117d7565b5b50919050565b7f43616c6c6572206973206e6f742061206d696e746572000000000000000000005f82015250565b5f611868601683611493565b915061187382611834565b602082019050919050565b5f6020820190508181035f8301526118958161185c565b9050919050565b6118a581611552565b82525050565b5f6060820190506118be5f83018661189c565b6118cb60208301856115fe565b6118d860408301846115fe565b949350505050565b5f6020820190506118f35f83018461189c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119308261158d565b915061193b8361158d565b9250828201905080821115611953576119526118f9565b5b92915050565b5f60408201905061196c5f83018561189c565b61197960208301846116d4565b9392505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6119b4601083611493565b91506119bf82611980565b602082019050919050565b5f6020820190508181035f8301526119e1816119a8565b905091905056fea2646970667358221220bfbdd952e29a76b60b9607f66d10d9fa6c37320d0d79c79f084e08a5db81df9164736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x455 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x381 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2BF JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1EB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x142B JUMP JUMPDEST PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1513 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x59E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28D PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E3 PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH2 0x78C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH2 0x825 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x1513 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x8B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A5 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F3 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x423 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x1799 JUMP JUMPDEST PUSH2 0x95C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4E5 JUMPI POP PUSH2 0x4E4 DUP3 PUSH2 0xA02 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4FB SWAP1 PUSH2 0x1804 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x527 SWAP1 PUSH2 0x1804 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x572 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x549 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x572 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x555 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x586 PUSH2 0xA6B JUMP JUMPDEST SWAP1 POP PUSH2 0x593 DUP2 DUP6 DUP6 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5B1 PUSH2 0xA6B JUMP JUMPDEST SWAP1 POP PUSH2 0x5BE DUP6 DUP3 DUP6 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0x5C9 DUP6 DUP6 DUP6 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0x61F DUP3 PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x628 DUP2 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 PUSH2 0xC1B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x648 PUSH2 0xA6B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B6 DUP3 DUP3 PUSH2 0xD05 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6E5 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x724 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71B SWAP1 PUSH2 0x187E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72E DUP3 DUP3 PUSH2 0xDEF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x7B6 DUP2 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x7BE PUSH2 0xE6E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x834 SWAP1 PUSH2 0x1804 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x860 SWAP1 PUSH2 0x1804 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8AB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x882 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8AB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x88E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x8DF DUP2 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x8E9 DUP4 DUP4 PUSH2 0xED0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8FE PUSH2 0xA6B JUMP JUMPDEST SWAP1 POP PUSH2 0x90B DUP2 DUP6 DUP6 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x943 DUP3 PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x94C DUP2 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x956 DUP4 DUP4 PUSH2 0xD05 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA7F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF4F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA8F DUP5 DUP5 PUSH2 0x95C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xB11 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB02 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB10 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xF4F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB87 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7E SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEE SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC02 DUP4 DUP4 DUP4 PUSH2 0x111E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC18 DUP2 PUSH2 0xC13 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x1337 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xC26 DUP4 DUP4 PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0xCFB JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC98 PUSH2 0xA6B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xCFF JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD10 DUP4 DUP4 PUSH2 0x7C1 JUMP JUMPDEST ISZERO PUSH2 0xDE5 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD82 PUSH2 0xA6B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xDE9 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE5F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE56 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE6A PUSH0 DUP4 DUP4 PUSH2 0x111E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE76 PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xEB9 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC6 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF40 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF37 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF4B DUP3 PUSH0 DUP4 PUSH2 0x111E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFBF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB6 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x102F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1026 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1118 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x110F SWAP2 SWAP1 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x116E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1162 SWAP2 SWAP1 PUSH2 0x1926 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x123C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x11F7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1283 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12CD JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x132A SWAP2 SWAP1 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1341 DUP3 DUP3 PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x1384 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137B SWAP3 SWAP2 SWAP1 PUSH2 0x1959 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1390 PUSH2 0x732 JUMP JUMPDEST ISZERO PUSH2 0x13D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C7 SWAP1 PUSH2 0x19CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140A DUP2 PUSH2 0x13D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1414 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1425 DUP2 PUSH2 0x1401 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1440 JUMPI PUSH2 0x143F PUSH2 0x13D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x144D DUP5 DUP3 DUP6 ADD PUSH2 0x1417 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146A DUP2 PUSH2 0x1456 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1483 PUSH0 DUP4 ADD DUP5 PUSH2 0x1461 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14C0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14A5 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14E5 DUP3 PUSH2 0x1489 JUMP JUMPDEST PUSH2 0x14EF DUP2 DUP6 PUSH2 0x1493 JUMP JUMPDEST SWAP4 POP PUSH2 0x14FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14A3 JUMP JUMPDEST PUSH2 0x1508 DUP2 PUSH2 0x14CB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x152B DUP2 DUP5 PUSH2 0x14DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x155C DUP3 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x156C DUP2 PUSH2 0x1552 JUMP JUMPDEST DUP2 EQ PUSH2 0x1576 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1587 DUP2 PUSH2 0x1563 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x159F DUP2 PUSH2 0x158D JUMP JUMPDEST DUP2 EQ PUSH2 0x15A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15BA DUP2 PUSH2 0x1596 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15D6 JUMPI PUSH2 0x15D5 PUSH2 0x13D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15E3 DUP6 DUP3 DUP7 ADD PUSH2 0x1579 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15F4 DUP6 DUP3 DUP7 ADD PUSH2 0x15AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1607 DUP2 PUSH2 0x158D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1620 PUSH0 DUP4 ADD DUP5 PUSH2 0x15FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x163D JUMPI PUSH2 0x163C PUSH2 0x13D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x164A DUP7 DUP3 DUP8 ADD PUSH2 0x1579 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x165B DUP7 DUP3 DUP8 ADD PUSH2 0x1579 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x166C DUP7 DUP3 DUP8 ADD PUSH2 0x15AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1688 DUP2 PUSH2 0x1676 JUMP JUMPDEST DUP2 EQ PUSH2 0x1692 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16A3 DUP2 PUSH2 0x167F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16BE JUMPI PUSH2 0x16BD PUSH2 0x13D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16CB DUP5 DUP3 DUP6 ADD PUSH2 0x1695 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16DD DUP2 PUSH2 0x1676 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16F6 PUSH0 DUP4 ADD DUP5 PUSH2 0x16D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1712 JUMPI PUSH2 0x1711 PUSH2 0x13D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x171F DUP6 DUP3 DUP7 ADD PUSH2 0x1695 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1730 DUP6 DUP3 DUP7 ADD PUSH2 0x1579 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x174F DUP2 PUSH2 0x173A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1768 PUSH0 DUP4 ADD DUP5 PUSH2 0x1746 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1783 JUMPI PUSH2 0x1782 PUSH2 0x13D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1790 DUP5 DUP3 DUP6 ADD PUSH2 0x1579 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17AF JUMPI PUSH2 0x17AE PUSH2 0x13D2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17BC DUP6 DUP3 DUP7 ADD PUSH2 0x1579 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17CD DUP6 DUP3 DUP7 ADD PUSH2 0x1579 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x181B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x182E JUMPI PUSH2 0x182D PUSH2 0x17D7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742061206D696E74657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1868 PUSH1 0x16 DUP4 PUSH2 0x1493 JUMP JUMPDEST SWAP2 POP PUSH2 0x1873 DUP3 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1895 DUP2 PUSH2 0x185C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18A5 DUP2 PUSH2 0x1552 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18BE PUSH0 DUP4 ADD DUP7 PUSH2 0x189C JUMP JUMPDEST PUSH2 0x18CB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15FE JUMP JUMPDEST PUSH2 0x18D8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15FE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x189C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1930 DUP3 PUSH2 0x158D JUMP JUMPDEST SWAP2 POP PUSH2 0x193B DUP4 PUSH2 0x158D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1953 JUMPI PUSH2 0x1952 PUSH2 0x18F9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x196C PUSH0 DUP4 ADD DUP6 PUSH2 0x189C JUMP JUMPDEST PUSH2 0x1979 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16D4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19B4 PUSH1 0x10 DUP4 PUSH2 0x1493 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BF DUP3 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19E1 DUP2 PUSH2 0x19A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xBD 0xD9 MSTORE 0xE2 SWAP11 PUSH23 0xB60B9607F66D10D9FA6C37320D0D79C79F084E08A5DB81 0xDF SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "314:1294:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;443:62:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2707:82:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1232:166:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1615:84:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1523:72:10;;;:::i;:::-;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1406:109:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;374:62:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;512:62:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;1779:89:4:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;443:62:10:-;481:24;443:62;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;2707:82:4:-;2756:5;2780:2;2773:9;;2707:82;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;1232:166:10:-;1301:32;412:24;1322:10;1301:7;:32::i;:::-;1293:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1371:19;1377:3;1382:7;1371:5;:19::i;:::-;1232:166;;:::o;1615:84:3:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;3004:116:4:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1523:72:10:-;550:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1579:8:10::1;:6;:8::i;:::-;1523:72:::0;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1981:93:4:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;1406:109:10:-;481:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1488:19:10::1;1494:3;1499:7;1488:5;:19::i;:::-;1406:109:::0;;;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3315:178:4:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;374:62:10:-;412:24;374:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3551:140:4:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;512:62:10:-;550:24;512:62;:::o;763:146:8:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8726:128:4:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;7458:208:4:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;2186:115:3:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;7984:206:4:-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;1767:106:3:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;88:117:11:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:126::-;2897:7;2937:42;2930:5;2926:54;2915:65;;2860:126;;;:::o;2992:96::-;3029:7;3058:24;3076:5;3058:24;:::i;:::-;3047:35;;2992:96;;;:::o;3094:122::-;3167:24;3185:5;3167:24;:::i;:::-;3160:5;3157:35;3147:63;;3206:1;3203;3196:12;3147:63;3094:122;:::o;3222:139::-;3268:5;3306:6;3293:20;3284:29;;3322:33;3349:5;3322:33;:::i;:::-;3222:139;;;;:::o;3367:77::-;3404:7;3433:5;3422:16;;3367:77;;;:::o;3450:122::-;3523:24;3541:5;3523:24;:::i;:::-;3516:5;3513:35;3503:63;;3562:1;3559;3552:12;3503:63;3450:122;:::o;3578:139::-;3624:5;3662:6;3649:20;3640:29;;3678:33;3705:5;3678:33;:::i;:::-;3578:139;;;;:::o;3723:474::-;3791:6;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;3723:474;;;;;:::o;4203:118::-;4290:24;4308:5;4290:24;:::i;:::-;4285:3;4278:37;4203:118;;:::o;4327:222::-;4420:4;4458:2;4447:9;4443:18;4435:26;;4471:71;4539:1;4528:9;4524:17;4515:6;4471:71;:::i;:::-;4327:222;;;;:::o;4555:619::-;4632:6;4640;4648;4697:2;4685:9;4676:7;4672:23;4668:32;4665:119;;;4703:79;;:::i;:::-;4665:119;4823:1;4848:53;4893:7;4884:6;4873:9;4869:22;4848:53;:::i;:::-;4838:63;;4794:117;4950:2;4976:53;5021:7;5012:6;5001:9;4997:22;4976:53;:::i;:::-;4966:63;;4921:118;5078:2;5104:53;5149:7;5140:6;5129:9;5125:22;5104:53;:::i;:::-;5094:63;;5049:118;4555:619;;;;;:::o;5180:77::-;5217:7;5246:5;5235:16;;5180:77;;;:::o;5263:122::-;5336:24;5354:5;5336:24;:::i;:::-;5329:5;5326:35;5316:63;;5375:1;5372;5365:12;5316:63;5263:122;:::o;5391:139::-;5437:5;5475:6;5462:20;5453:29;;5491:33;5518:5;5491:33;:::i;:::-;5391:139;;;;:::o;5536:329::-;5595:6;5644:2;5632:9;5623:7;5619:23;5615:32;5612:119;;;5650:79;;:::i;:::-;5612:119;5770:1;5795:53;5840:7;5831:6;5820:9;5816:22;5795:53;:::i;:::-;5785:63;;5741:117;5536:329;;;;:::o;5871:118::-;5958:24;5976:5;5958:24;:::i;:::-;5953:3;5946:37;5871:118;;:::o;5995:222::-;6088:4;6126:2;6115:9;6111:18;6103:26;;6139:71;6207:1;6196:9;6192:17;6183:6;6139:71;:::i;:::-;5995:222;;;;:::o;6223:474::-;6291:6;6299;6348:2;6336:9;6327:7;6323:23;6319:32;6316:119;;;6354:79;;:::i;:::-;6316:119;6474:1;6499:53;6544:7;6535:6;6524:9;6520:22;6499:53;:::i;:::-;6489:63;;6445:117;6601:2;6627:53;6672:7;6663:6;6652:9;6648:22;6627:53;:::i;:::-;6617:63;;6572:118;6223:474;;;;;:::o;6703:86::-;6738:7;6778:4;6771:5;6767:16;6756:27;;6703:86;;;:::o;6795:112::-;6878:22;6894:5;6878:22;:::i;:::-;6873:3;6866:35;6795:112;;:::o;6913:214::-;7002:4;7040:2;7029:9;7025:18;7017:26;;7053:67;7117:1;7106:9;7102:17;7093:6;7053:67;:::i;:::-;6913:214;;;;:::o;7133:329::-;7192:6;7241:2;7229:9;7220:7;7216:23;7212:32;7209:119;;;7247:79;;:::i;:::-;7209:119;7367:1;7392:53;7437:7;7428:6;7417:9;7413:22;7392:53;:::i;:::-;7382:63;;7338:117;7133:329;;;;:::o;7468:474::-;7536:6;7544;7593:2;7581:9;7572:7;7568:23;7564:32;7561:119;;;7599:79;;:::i;:::-;7561:119;7719:1;7744:53;7789:7;7780:6;7769:9;7765:22;7744:53;:::i;:::-;7734:63;;7690:117;7846:2;7872:53;7917:7;7908:6;7897:9;7893:22;7872:53;:::i;:::-;7862:63;;7817:118;7468:474;;;;;:::o;7948:180::-;7996:77;7993:1;7986:88;8093:4;8090:1;8083:15;8117:4;8114:1;8107:15;8134:320;8178:6;8215:1;8209:4;8205:12;8195:22;;8262:1;8256:4;8252:12;8283:18;8273:81;;8339:4;8331:6;8327:17;8317:27;;8273:81;8401:2;8393:6;8390:14;8370:18;8367:38;8364:84;;8420:18;;:::i;:::-;8364:84;8185:269;8134:320;;;:::o;8460:172::-;8600:24;8596:1;8588:6;8584:14;8577:48;8460:172;:::o;8638:366::-;8780:3;8801:67;8865:2;8860:3;8801:67;:::i;:::-;8794:74;;8877:93;8966:3;8877:93;:::i;:::-;8995:2;8990:3;8986:12;8979:19;;8638:366;;;:::o;9010:419::-;9176:4;9214:2;9203:9;9199:18;9191:26;;9263:9;9257:4;9253:20;9249:1;9238:9;9234:17;9227:47;9291:131;9417:4;9291:131;:::i;:::-;9283:139;;9010:419;;;:::o;9435:118::-;9522:24;9540:5;9522:24;:::i;:::-;9517:3;9510:37;9435:118;;:::o;9559:442::-;9708:4;9746:2;9735:9;9731:18;9723:26;;9759:71;9827:1;9816:9;9812:17;9803:6;9759:71;:::i;:::-;9840:72;9908:2;9897:9;9893:18;9884:6;9840:72;:::i;:::-;9922;9990:2;9979:9;9975:18;9966:6;9922:72;:::i;:::-;9559:442;;;;;;:::o;10007:222::-;10100:4;10138:2;10127:9;10123:18;10115:26;;10151:71;10219:1;10208:9;10204:17;10195:6;10151:71;:::i;:::-;10007:222;;;;:::o;10235:180::-;10283:77;10280:1;10273:88;10380:4;10377:1;10370:15;10404:4;10401:1;10394:15;10421:191;10461:3;10480:20;10498:1;10480:20;:::i;:::-;10475:25;;10514:20;10532:1;10514:20;:::i;:::-;10509:25;;10557:1;10554;10550:9;10543:16;;10578:3;10575:1;10572:10;10569:36;;;10585:18;;:::i;:::-;10569:36;10421:191;;;;:::o;10618:332::-;10739:4;10777:2;10766:9;10762:18;10754:26;;10790:71;10858:1;10847:9;10843:17;10834:6;10790:71;:::i;:::-;10871:72;10939:2;10928:9;10924:18;10915:6;10871:72;:::i;:::-;10618:332;;;;;:::o;10956:166::-;11096:18;11092:1;11084:6;11080:14;11073:42;10956:166;:::o;11128:366::-;11270:3;11291:67;11355:2;11350:3;11291:67;:::i;:::-;11284:74;;11367:93;11456:3;11367:93;:::i;:::-;11485:2;11480:3;11476:12;11469:19;;11128:366;;;:::o;11500:419::-;11666:4;11704:2;11693:9;11689:18;11681:26;;11753:9;11747:4;11743:20;11739:1;11728:9;11724:17;11717:47;11781:131;11907:4;11781:131;:::i;:::-;11773:139;;11500:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1337200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BURNER_ROLE()": "370",
								"DEFAULT_ADMIN_ROLE()": "352",
								"MINTER_ROLE()": "391",
								"PAUSER_ROLE()": "457",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"burn(address,uint256)": "infinite",
								"decimals()": "427",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3211",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"pause()": "infinite",
								"paused()": "2496",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 314,
									"end": 1608,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 314,
									"end": 1608,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 314,
									"end": 1608,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 752,
									"end": 1217,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "4D79546F6B656E00000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "544B4E0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 850,
									"end": 892,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 861,
									"end": 879,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 861,
									"end": 879,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 881,
									"end": 891,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 850,
									"end": 860,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 850,
									"end": 860,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 850,
									"end": 860,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 850,
									"end": 892,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 850,
									"end": 892,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 850,
									"end": 892,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 850,
									"end": 892,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 850,
									"end": 892,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 850,
									"end": 892,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 931,
									"end": 963,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 412,
									"end": 436,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 955,
									"end": 962,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 931,
									"end": 941,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 931,
									"end": 941,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 931,
									"end": 941,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 931,
									"end": 963,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 931,
									"end": 963,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 931,
									"end": 963,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 931,
									"end": 963,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 931,
									"end": 963,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 931,
									"end": 963,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1021,
									"end": 1053,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 481,
									"end": 505,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
								},
								{
									"begin": 1045,
									"end": 1052,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1021,
									"end": 1031,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 1021,
									"end": 1031,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1021,
									"end": 1031,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1021,
									"end": 1053,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1021,
									"end": 1053,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1021,
									"end": 1053,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1021,
									"end": 1053,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1021,
									"end": 1053,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1021,
									"end": 1053,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1111,
									"end": 1143,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 550,
									"end": 574,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
								},
								{
									"begin": 1135,
									"end": 1142,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1111,
									"end": 1121,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 1111,
									"end": 1121,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1111,
									"end": 1121,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1111,
									"end": 1143,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1111,
									"end": 1143,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1111,
									"end": 1143,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1111,
									"end": 1143,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1111,
									"end": 1143,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1111,
									"end": 1143,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 752,
									"end": 1217,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 314,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 314,
									"end": 1608,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1566,
									"end": 1572,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1600,
									"end": 1605,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1594,
									"end": 1606,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1584,
									"end": 1606,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1584,
									"end": 1606,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1514,
									"end": 1613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1619,
									"end": 1799,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 1619,
									"end": 1799,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1667,
									"end": 1744,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1664,
									"end": 1665,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1657,
									"end": 1745,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1764,
									"end": 1768,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1761,
									"end": 1762,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1754,
									"end": 1769,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1788,
									"end": 1792,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1785,
									"end": 1786,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1778,
									"end": 1793,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1805,
									"end": 1985,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 1805,
									"end": 1985,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1853,
									"end": 1930,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1850,
									"end": 1851,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1843,
									"end": 1931,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1950,
									"end": 1954,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1947,
									"end": 1948,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1940,
									"end": 1955,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1971,
									"end": 1972,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1964,
									"end": 1979,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2035,
									"end": 2041,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2072,
									"end": 2073,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 2066,
									"end": 2070,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2062,
									"end": 2074,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 2052,
									"end": 2074,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2052,
									"end": 2074,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2119,
									"end": 2120,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2113,
									"end": 2117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2109,
									"end": 2121,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2140,
									"end": 2158,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2130,
									"end": 2211,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2196,
									"end": 2200,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 2188,
									"end": 2194,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2184,
									"end": 2201,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2174,
									"end": 2201,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2174,
									"end": 2201,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2130,
									"end": 2211,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2130,
									"end": 2211,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2258,
									"end": 2260,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2250,
									"end": 2256,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2247,
									"end": 2261,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2227,
									"end": 2245,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2224,
									"end": 2262,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2221,
									"end": 2305,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2221,
									"end": 2305,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 2277,
									"end": 2295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2221,
									"end": 2305,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2221,
									"end": 2305,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2042,
									"end": 2311,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1991,
									"end": 2311,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2366,
									"end": 2370,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2389,
									"end": 2392,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2381,
									"end": 2392,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2381,
									"end": 2392,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2412,
									"end": 2415,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2409,
									"end": 2410,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2402,
									"end": 2416,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2446,
									"end": 2450,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2443,
									"end": 2444,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2433,
									"end": 2451,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 2425,
									"end": 2451,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2425,
									"end": 2451,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2317,
									"end": 2458,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2501,
									"end": 2507,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2548,
									"end": 2550,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2543,
									"end": 2545,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2536,
									"end": 2541,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2532,
									"end": 2546,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2528,
									"end": 2551,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 2518,
									"end": 2551,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2518,
									"end": 2551,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2464,
									"end": 2557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2607,
									"end": 2615,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2657,
									"end": 2662,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2651,
									"end": 2655,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2647,
									"end": 2663,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 2626,
									"end": 2663,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2626,
									"end": 2663,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2563,
									"end": 2670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2745,
									"end": 2751,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2795,
									"end": 2796,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 2783,
									"end": 2793,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2779,
									"end": 2797,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2818,
									"end": 2915,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 2848,
									"end": 2914,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2837,
									"end": 2846,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2818,
									"end": 2915,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 2818,
									"end": 2915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2818,
									"end": 2915,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 2818,
									"end": 2915,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2936,
									"end": 2975,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 2966,
									"end": 2974,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2955,
									"end": 2964,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2936,
									"end": 2975,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 2936,
									"end": 2975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2936,
									"end": 2975,
									"name": "tag",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 2936,
									"end": 2975,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2924,
									"end": 2975,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 2924,
									"end": 2975,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3008,
									"end": 3012,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3004,
									"end": 3013,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2997,
									"end": 3002,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2993,
									"end": 3014,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2984,
									"end": 3014,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 2984,
									"end": 3014,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3057,
									"end": 3061,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3047,
									"end": 3055,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3036,
									"end": 3041,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3033,
									"end": 3063,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 3023,
									"end": 3063,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3023,
									"end": 3063,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2752,
									"end": 3069,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2752,
									"end": 3069,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2676,
									"end": 3069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3112,
									"end": 3119,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3141,
									"end": 3146,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3075,
									"end": 3152,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "tag",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3186,
									"end": 3189,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3207,
									"end": 3212,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3200,
									"end": 3212,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3200,
									"end": 3212,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3158,
									"end": 3218,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3274,
									"end": 3283,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3307,
									"end": 3360,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 3325,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 3334,
									"end": 3358,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 3352,
									"end": 3357,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3334,
									"end": 3358,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 3334,
									"end": 3358,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3334,
									"end": 3358,
									"name": "tag",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 3334,
									"end": 3358,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3325,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 3325,
									"end": 3359,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3325,
									"end": 3359,
									"name": "tag",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 3325,
									"end": 3359,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3307,
									"end": 3360,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 3307,
									"end": 3360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3307,
									"end": 3360,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 3307,
									"end": 3360,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3294,
									"end": 3360,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3294,
									"end": 3360,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3224,
									"end": 3366,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "tag",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3415,
									"end": 3418,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3441,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3429,
									"end": 3441,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3429,
									"end": 3441,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3372,
									"end": 3447,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3563,
									"end": 3602,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 3594,
									"end": 3601,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3563,
									"end": 3602,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 3563,
									"end": 3602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3563,
									"end": 3602,
									"name": "tag",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 3563,
									"end": 3602,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3624,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 3673,
									"end": 3714,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 3697,
									"end": 3713,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3673,
									"end": 3714,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 3673,
									"end": 3714,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3673,
									"end": 3714,
									"name": "tag",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 3673,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3665,
									"end": 3671,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3658,
									"end": 3662,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3652,
									"end": 3663,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 3624,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 3624,
									"end": 3715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3624,
									"end": 3715,
									"name": "tag",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 3624,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3618,
									"end": 3622,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3611,
									"end": 3716,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3529,
									"end": 3722,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3453,
									"end": 3722,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3728,
									"end": 3801,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 3728,
									"end": 3801,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3773,
									"end": 3776,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3728,
									"end": 3801,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3728,
									"end": 3801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3807,
									"end": 3996,
									"name": "tag",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 3807,
									"end": 3996,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3884,
									"end": 3916,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 3884,
									"end": 3916,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 3884,
									"end": 3916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3884,
									"end": 3916,
									"name": "tag",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 3884,
									"end": 3916,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 3983,
									"end": 3989,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3975,
									"end": 3981,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3969,
									"end": 3973,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 3925,
									"end": 3990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 3990,
									"name": "tag",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 3925,
									"end": 3990,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3860,
									"end": 3996,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3807,
									"end": 3996,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3807,
									"end": 3996,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3807,
									"end": 3996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4002,
									"end": 4188,
									"name": "tag",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 4002,
									"end": 4188,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "tag",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4079,
									"end": 4082,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4072,
									"end": 4077,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4069,
									"end": 4083,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4133,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 4170,
									"end": 4171,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4163,
									"end": 4168,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4133,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 4133,
									"end": 4172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4133,
									"end": 4172,
									"name": "tag",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 4133,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4106,
									"end": 4107,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4099,
									"end": 4104,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4095,
									"end": 4108,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4086,
									"end": 4108,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4086,
									"end": 4108,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "tag",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4002,
									"end": 4188,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4002,
									"end": 4188,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4002,
									"end": 4188,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "tag",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4295,
									"end": 4297,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4290,
									"end": 4293,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4287,
									"end": 4298,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4329,
									"end": 4367,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "108"
								},
								{
									"begin": 4361,
									"end": 4366,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4329,
									"end": 4367,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 4329,
									"end": 4367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4329,
									"end": 4367,
									"name": "tag",
									"source": 11,
									"value": "108"
								},
								{
									"begin": 4329,
									"end": 4367,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4413,
									"end": 4442,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 4431,
									"end": 4441,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4413,
									"end": 4442,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4413,
									"end": 4442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4413,
									"end": 4442,
									"name": "tag",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 4413,
									"end": 4442,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4403,
									"end": 4411,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4443,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4596,
									"end": 4598,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4584,
									"end": 4594,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4581,
									"end": 4599,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4617,
									"end": 4625,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4602,
									"end": 4625,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4602,
									"end": 4625,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "tag",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4640,
									"end": 4720,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 4696,
									"end": 4718,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 4714,
									"end": 4717,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4696,
									"end": 4718,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4696,
									"end": 4718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4696,
									"end": 4718,
									"name": "tag",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 4696,
									"end": 4718,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4686,
									"end": 4694,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4682,
									"end": 4719,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4669,
									"end": 4680,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4640,
									"end": 4720,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 4640,
									"end": 4720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4640,
									"end": 4720,
									"name": "tag",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 4640,
									"end": 4720,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4299,
									"end": 4730,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4299,
									"end": 4730,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "tag",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4194,
									"end": 4737,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4797,
									"end": 4805,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4847,
									"end": 4852,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4841,
									"end": 4845,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4837,
									"end": 4853,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 4816,
									"end": 4853,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4816,
									"end": 4853,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4743,
									"end": 4860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4910,
									"end": 4916,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4943,
									"end": 4994,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 4991,
									"end": 4992,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4987,
									"end": 4993,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4979,
									"end": 4984,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4976,
									"end": 4977,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 4972,
									"end": 4985,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4943,
									"end": 4994,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 4943,
									"end": 4994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4943,
									"end": 4994,
									"name": "tag",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 4943,
									"end": 4994,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4939,
									"end": 4995,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 5024,
									"end": 5028,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5018,
									"end": 5022,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5014,
									"end": 5029,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5004,
									"end": 5029,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5004,
									"end": 5029,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4917,
									"end": 5035,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4866,
									"end": 5035,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5116,
									"end": 5120,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5262,
									"end": 5291,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 5287,
									"end": 5290,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5281,
									"end": 5285,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5262,
									"end": 5291,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 5262,
									"end": 5291,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5262,
									"end": 5291,
									"name": "tag",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 5262,
									"end": 5291,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5254,
									"end": 5291,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5254,
									"end": 5291,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5324,
									"end": 5327,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5321,
									"end": 5322,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 5317,
									"end": 5328,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 5311,
									"end": 5315,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5308,
									"end": 5329,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 5300,
									"end": 5329,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5300,
									"end": 5329,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5040,
									"end": 5335,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5340,
									"end": 6735,
									"name": "tag",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 5340,
									"end": 6735,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5457,
									"end": 5494,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 5490,
									"end": 5493,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5457,
									"end": 5494,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 5457,
									"end": 5494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5457,
									"end": 5494,
									"name": "tag",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 5457,
									"end": 5494,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5559,
									"end": 5577,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5551,
									"end": 5557,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5548,
									"end": 5578,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5581,
									"end": 5599,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "121"
								},
								{
									"begin": 5581,
									"end": 5599,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 5581,
									"end": 5599,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5581,
									"end": 5599,
									"name": "tag",
									"source": 11,
									"value": "121"
								},
								{
									"begin": 5581,
									"end": 5599,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "tag",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5625,
									"end": 5663,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 5657,
									"end": 5661,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5651,
									"end": 5662,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 5625,
									"end": 5663,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 5625,
									"end": 5663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5625,
									"end": 5663,
									"name": "tag",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 5625,
									"end": 5663,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5710,
									"end": 5777,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "123"
								},
								{
									"begin": 5770,
									"end": 5776,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5762,
									"end": 5768,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 5710,
									"end": 5777,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 5710,
									"end": 5777,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5710,
									"end": 5777,
									"name": "tag",
									"source": 11,
									"value": "123"
								},
								{
									"begin": 5710,
									"end": 5777,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5828,
									"end": 5832,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5815,
									"end": 5832,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5815,
									"end": 5832,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5860,
									"end": 5862,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 5852,
									"end": 5858,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5849,
									"end": 5863,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 5877,
									"end": 5878,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6534,
									"end": 6535,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6551,
									"end": 6557,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "126"
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6600,
									"end": 6609,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6595,
									"end": 6598,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 6591,
									"end": 6610,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6585,
									"end": 6611,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 6576,
									"end": 6611,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6576,
									"end": 6611,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "tag",
									"source": 11,
									"value": "126"
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6651,
									"end": 6718,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 6711,
									"end": 6717,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6704,
									"end": 6709,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6651,
									"end": 6718,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 6651,
									"end": 6718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6651,
									"end": 6718,
									"name": "tag",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 6651,
									"end": 6718,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6645,
									"end": 6649,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 6638,
									"end": 6719,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 6507,
									"end": 6729,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "tag",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5924,
									"end": 5928,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 5920,
									"end": 5929,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 5912,
									"end": 5918,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5908,
									"end": 5930,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5958,
									"end": 5995,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "128"
								},
								{
									"begin": 5990,
									"end": 5994,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5958,
									"end": 5995,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 5958,
									"end": 5995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5958,
									"end": 5995,
									"name": "tag",
									"source": 11,
									"value": "128"
								},
								{
									"begin": 5958,
									"end": 5995,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6017,
									"end": 6018,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "tag",
									"source": 11,
									"value": "129"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6045,
									"end": 6052,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6042,
									"end": 6043,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6039,
									"end": 6053,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6124,
									"end": 6133,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6119,
									"end": 6122,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 6115,
									"end": 6134,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6109,
									"end": 6135,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 6101,
									"end": 6107,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6094,
									"end": 6136,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 6175,
									"end": 6176,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 6167,
									"end": 6173,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6163,
									"end": 6177,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6153,
									"end": 6177,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6153,
									"end": 6177,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6222,
									"end": 6224,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6220,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6207,
									"end": 6225,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6194,
									"end": 6225,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 6194,
									"end": 6225,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6068,
									"end": 6072,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 6065,
									"end": 6066,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6061,
									"end": 6073,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6056,
									"end": 6073,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6056,
									"end": 6073,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "129"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "tag",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6267,
									"end": 6273,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 6258,
									"end": 6265,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6255,
									"end": 6274,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6325,
									"end": 6334,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6320,
									"end": 6323,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 6316,
									"end": 6335,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6310,
									"end": 6336,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 6368,
									"end": 6416,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 6410,
									"end": 6414,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 6402,
									"end": 6408,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 6398,
									"end": 6415,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 6387,
									"end": 6396,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6368,
									"end": 6416,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 6368,
									"end": 6416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6368,
									"end": 6416,
									"name": "tag",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 6368,
									"end": 6416,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6360,
									"end": 6366,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6353,
									"end": 6417,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 6275,
									"end": 6431,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "tag",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6477,
									"end": 6478,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 6473,
									"end": 6474,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 6465,
									"end": 6471,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 6461,
									"end": 6475,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 6457,
									"end": 6479,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6451,
									"end": 6455,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 6444,
									"end": 6480,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5879,
									"end": 6490,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5879,
									"end": 6490,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5879,
									"end": 6490,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "tag",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5432,
									"end": 6735,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5432,
									"end": 6735,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5432,
									"end": 6735,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5340,
									"end": 6735,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5340,
									"end": 6735,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5340,
									"end": 6735,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 314,
									"end": 1608,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 314,
									"end": 1608,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 314,
									"end": 1608,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 1608,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 314,
									"end": 1608,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 1608,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 1608,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 314,
									"end": 1608,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 1608,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bfbdd952e29a76b60b9607f66d10d9fa6c37320d0d79c79f084e08a5db81df9164736f6c63430008180033",
									".code": [
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "D5391393"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "E63AB1E9"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "8456CB59"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "9DC29FAC"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "248A9CA3"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "248A9CA3"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "282C51F3"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "40C10F19"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 314,
											"end": 1608,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 443,
											"end": 505,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 443,
											"end": 505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 443,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 443,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 443,
											"end": 505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 443,
											"end": 505,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 443,
											"end": 505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 443,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 505,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 443,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 443,
											"end": 505,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 443,
											"end": 505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 443,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 443,
											"end": 505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 443,
											"end": 505,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 443,
											"end": 505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 443,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 505,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 443,
											"end": 505,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 443,
											"end": 505,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 443,
											"end": 505,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 443,
											"end": 505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 443,
											"end": 505,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1232,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1232,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1595,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1523,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1523,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1523,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1523,
											"end": 1595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1523,
											"end": 1595,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1523,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1523,
											"end": 1595,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1406,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1406,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 374,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 374,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 374,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 374,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 374,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 374,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 374,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 374,
											"end": 436,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 436,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 374,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 374,
											"end": 436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 374,
											"end": 436,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 374,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 374,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 374,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 374,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 374,
											"end": 436,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 436,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 374,
											"end": 436,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 374,
											"end": 436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 374,
											"end": 436,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 374,
											"end": 436,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 374,
											"end": 436,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 512,
											"end": 574,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 512,
											"end": 574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 512,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 512,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 512,
											"end": 574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 512,
											"end": 574,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 512,
											"end": 574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 512,
											"end": 574,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 574,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 512,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 512,
											"end": 574,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 512,
											"end": 574,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 512,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 512,
											"end": 574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 512,
											"end": 574,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 512,
											"end": 574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 512,
											"end": 574,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 574,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 512,
											"end": 574,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 512,
											"end": 574,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 512,
											"end": 574,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 512,
											"end": 574,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 512,
											"end": 574,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 443,
											"end": 505,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 443,
											"end": 505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 481,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 443,
											"end": 505,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 443,
											"end": 505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 412,
											"end": 436,
											"name": "PUSH",
											"source": 10,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 1322,
											"end": 1332,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1301,
											"end": 1333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1333,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 1301,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 1293,
											"end": 1360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 1293,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1371,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 1377,
											"end": 1380,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1382,
											"end": 1389,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1371,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 1371,
											"end": 1390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1371,
											"end": 1390,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 1371,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1398,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1595,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1523,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 550,
											"end": 574,
											"name": "PUSH",
											"source": 10,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 1579,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 1579,
											"end": 1587,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1579,
											"end": 1587,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 1579,
											"end": 1587,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1523,
											"end": 1595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1523,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 481,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 1494,
											"end": 1497,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 1488,
											"end": 1507,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1507,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 1488,
											"end": 1507,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1406,
											"end": 1515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1406,
											"end": 1515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 374,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 374,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 412,
											"end": 436,
											"name": "PUSH",
											"source": 10,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 374,
											"end": 436,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 374,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 512,
											"end": 574,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 512,
											"end": 574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 550,
											"end": 574,
											"name": "PUSH",
											"source": 10,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 512,
											"end": 574,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 512,
											"end": 574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2979,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2935,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2926,
											"end": 2980,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3036,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 3076,
											"end": 3081,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 3058,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 3167,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3192,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3196,
											"end": 3208,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3094,
											"end": 3216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3273,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3312,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3293,
											"end": 3313,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 3349,
											"end": 3354,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 3322,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3222,
											"end": 3361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3404,
											"end": 3411,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3367,
											"end": 3444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 3541,
											"end": 3546,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 3523,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3516,
											"end": 3521,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3562,
											"end": 3563,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3450,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3624,
											"end": 3629,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3668,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3649,
											"end": 3669,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 3705,
											"end": 3710,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 3678,
											"end": 3711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3578,
											"end": 3717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3836,
											"end": 3845,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3827,
											"end": 3834,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3846,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3819,
											"end": 3851,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 3854,
											"end": 3933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 4044,
											"end": 4051,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4041,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4024,
											"end": 4033,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4042,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 3999,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4062,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 4172,
											"end": 4179,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4163,
											"end": 4169,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4152,
											"end": 4161,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4148,
											"end": 4170,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 4127,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4072,
											"end": 4190,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3723,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 4308,
											"end": 4313,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 4290,
											"end": 4314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4285,
											"end": 4288,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4315,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4424,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4460,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4456,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4443,
											"end": 4461,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4435,
											"end": 4461,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4435,
											"end": 4461,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 4539,
											"end": 4540,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4537,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4524,
											"end": 4541,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4515,
											"end": 4521,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 4471,
											"end": 4542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4632,
											"end": 4638,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4699,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4685,
											"end": 4694,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4676,
											"end": 4683,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4672,
											"end": 4695,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4668,
											"end": 4700,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 4703,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4824,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 4893,
											"end": 4900,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4884,
											"end": 4890,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4869,
											"end": 4891,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 4848,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4838,
											"end": 4901,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4838,
											"end": 4901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4794,
											"end": 4911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 4952,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 5021,
											"end": 5028,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5012,
											"end": 5018,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5010,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4997,
											"end": 5019,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 4976,
											"end": 5029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4966,
											"end": 5029,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4966,
											"end": 5029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4921,
											"end": 5039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5078,
											"end": 5080,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 5149,
											"end": 5156,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5138,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5125,
											"end": 5147,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 5104,
											"end": 5157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5094,
											"end": 5157,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5094,
											"end": 5157,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5049,
											"end": 5167,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4555,
											"end": 5174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5217,
											"end": 5224,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5251,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5235,
											"end": 5251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5235,
											"end": 5251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5180,
											"end": 5257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 5354,
											"end": 5359,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 5336,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5329,
											"end": 5334,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5326,
											"end": 5361,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5375,
											"end": 5376,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5263,
											"end": 5385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5437,
											"end": 5442,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5462,
											"end": 5482,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5453,
											"end": 5482,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5453,
											"end": 5482,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 5518,
											"end": 5523,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 5491,
											"end": 5524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5595,
											"end": 5601,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5646,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5623,
											"end": 5630,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5619,
											"end": 5642,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5615,
											"end": 5647,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 5650,
											"end": 5729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5770,
											"end": 5771,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 5840,
											"end": 5847,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5831,
											"end": 5837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5820,
											"end": 5829,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5816,
											"end": 5838,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 5795,
											"end": 5848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5785,
											"end": 5848,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5785,
											"end": 5848,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5741,
											"end": 5858,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 5958,
											"end": 5982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5953,
											"end": 5956,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5946,
											"end": 5983,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5871,
											"end": 5989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6088,
											"end": 6092,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6128,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6103,
											"end": 6129,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6103,
											"end": 6129,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 6207,
											"end": 6208,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6205,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6192,
											"end": 6209,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6183,
											"end": 6189,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 6139,
											"end": 6210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5995,
											"end": 6217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6305,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6348,
											"end": 6350,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6336,
											"end": 6345,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6327,
											"end": 6334,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6323,
											"end": 6346,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6351,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 6354,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6474,
											"end": 6475,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 6544,
											"end": 6551,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6535,
											"end": 6541,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6524,
											"end": 6533,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6520,
											"end": 6542,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 6499,
											"end": 6552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6489,
											"end": 6552,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6489,
											"end": 6552,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6445,
											"end": 6562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6601,
											"end": 6603,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 6672,
											"end": 6679,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6652,
											"end": 6661,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6670,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 6627,
											"end": 6680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6572,
											"end": 6690,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6223,
											"end": 6697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6738,
											"end": 6745,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6782,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6771,
											"end": 6776,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6767,
											"end": 6783,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6756,
											"end": 6783,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6756,
											"end": 6783,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6703,
											"end": 6789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 6894,
											"end": 6899,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 6878,
											"end": 6900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6873,
											"end": 6876,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6866,
											"end": 6901,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6795,
											"end": 6907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7002,
											"end": 7006,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7042,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7029,
											"end": 7038,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7017,
											"end": 7043,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7017,
											"end": 7043,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 7117,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7106,
											"end": 7115,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7102,
											"end": 7119,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7099,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 7053,
											"end": 7120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6913,
											"end": 7127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7192,
											"end": 7198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7243,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7229,
											"end": 7238,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7220,
											"end": 7227,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7212,
											"end": 7244,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 7247,
											"end": 7326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7367,
											"end": 7368,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7428,
											"end": 7434,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7417,
											"end": 7426,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7413,
											"end": 7435,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 7392,
											"end": 7445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7382,
											"end": 7445,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7382,
											"end": 7445,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7338,
											"end": 7455,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7133,
											"end": 7462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7536,
											"end": 7542,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7550,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7593,
											"end": 7595,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7572,
											"end": 7579,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7568,
											"end": 7591,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7564,
											"end": 7596,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 7599,
											"end": 7678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7719,
											"end": 7720,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 7789,
											"end": 7796,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7780,
											"end": 7786,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7769,
											"end": 7778,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7787,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 7744,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7734,
											"end": 7797,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7734,
											"end": 7797,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7690,
											"end": 7807,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7846,
											"end": 7848,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 7917,
											"end": 7924,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7908,
											"end": 7914,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7897,
											"end": 7906,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7893,
											"end": 7915,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 7872,
											"end": 7925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7862,
											"end": 7925,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7862,
											"end": 7925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7817,
											"end": 7935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7948,
											"end": 8128,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 7948,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7996,
											"end": 8073,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7993,
											"end": 7994,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8074,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8093,
											"end": 8097,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 8090,
											"end": 8091,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8083,
											"end": 8098,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8117,
											"end": 8121,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8114,
											"end": 8115,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8107,
											"end": 8122,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8178,
											"end": 8184,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8215,
											"end": 8216,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 8209,
											"end": 8213,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8205,
											"end": 8217,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 8195,
											"end": 8217,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8195,
											"end": 8217,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8262,
											"end": 8263,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8256,
											"end": 8260,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8252,
											"end": 8264,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8339,
											"end": 8343,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8327,
											"end": 8344,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8317,
											"end": 8344,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8317,
											"end": 8344,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8401,
											"end": 8403,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8393,
											"end": 8399,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8390,
											"end": 8404,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8367,
											"end": 8405,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 8420,
											"end": 8438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8185,
											"end": 8454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8134,
											"end": 8454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8460,
											"end": 8632,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 8460,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8600,
											"end": 8624,
											"name": "PUSH",
											"source": 11,
											"value": "43616C6C6572206973206E6F742061206D696E74657200000000000000000000"
										},
										{
											"begin": 8596,
											"end": 8597,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8588,
											"end": 8594,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8577,
											"end": 8625,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8460,
											"end": 8632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8460,
											"end": 8632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8638,
											"end": 9004,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 8638,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8780,
											"end": 8783,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8801,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 8865,
											"end": 8867,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 8860,
											"end": 8863,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8801,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 8801,
											"end": 8868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8801,
											"end": 8868,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 8801,
											"end": 8868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8794,
											"end": 8868,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8794,
											"end": 8868,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8877,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 8966,
											"end": 8969,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8877,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 8877,
											"end": 8970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8877,
											"end": 8970,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 8877,
											"end": 8970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8995,
											"end": 8997,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8990,
											"end": 8993,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8986,
											"end": 8998,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8979,
											"end": 8998,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8979,
											"end": 8998,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8638,
											"end": 9004,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8638,
											"end": 9004,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8638,
											"end": 9004,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8638,
											"end": 9004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9010,
											"end": 9429,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 9010,
											"end": 9429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9176,
											"end": 9180,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9214,
											"end": 9216,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9203,
											"end": 9212,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9191,
											"end": 9217,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9191,
											"end": 9217,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9263,
											"end": 9272,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9257,
											"end": 9261,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9253,
											"end": 9273,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9249,
											"end": 9250,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9238,
											"end": 9247,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9234,
											"end": 9251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9227,
											"end": 9274,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9291,
											"end": 9422,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 9417,
											"end": 9421,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9291,
											"end": 9422,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 9291,
											"end": 9422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9291,
											"end": 9422,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 9291,
											"end": 9422,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9283,
											"end": 9422,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9283,
											"end": 9422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9010,
											"end": 9429,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9010,
											"end": 9429,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9010,
											"end": 9429,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9010,
											"end": 9429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9522,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 9540,
											"end": 9545,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9522,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 9522,
											"end": 9546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9522,
											"end": 9546,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 9522,
											"end": 9546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9517,
											"end": 9520,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9510,
											"end": 9547,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9435,
											"end": 9553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9559,
											"end": 10001,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 9559,
											"end": 10001,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9708,
											"end": 9712,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9746,
											"end": 9748,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9735,
											"end": 9744,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9731,
											"end": 9749,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9723,
											"end": 9749,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9723,
											"end": 9749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9759,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 9827,
											"end": 9828,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9816,
											"end": 9825,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9812,
											"end": 9829,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9803,
											"end": 9809,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9759,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 9759,
											"end": 9830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9759,
											"end": 9830,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 9759,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9840,
											"end": 9912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 9908,
											"end": 9910,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9897,
											"end": 9906,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9893,
											"end": 9911,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9884,
											"end": 9890,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9840,
											"end": 9912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 9840,
											"end": 9912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9840,
											"end": 9912,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 9840,
											"end": 9912,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9922,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 9990,
											"end": 9992,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9979,
											"end": 9988,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9966,
											"end": 9972,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9922,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 9922,
											"end": 9994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9922,
											"end": 9994,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 9922,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9559,
											"end": 10001,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9559,
											"end": 10001,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9559,
											"end": 10001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9559,
											"end": 10001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9559,
											"end": 10001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9559,
											"end": 10001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9559,
											"end": 10001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10007,
											"end": 10229,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 10007,
											"end": 10229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10100,
											"end": 10104,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10140,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10136,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10123,
											"end": 10141,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10141,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10141,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10151,
											"end": 10222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 10219,
											"end": 10220,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10208,
											"end": 10217,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10204,
											"end": 10221,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10195,
											"end": 10201,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10151,
											"end": 10222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 10151,
											"end": 10222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10151,
											"end": 10222,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 10151,
											"end": 10222,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10007,
											"end": 10229,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10007,
											"end": 10229,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10007,
											"end": 10229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10007,
											"end": 10229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10007,
											"end": 10229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10235,
											"end": 10415,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 10235,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10283,
											"end": 10360,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10280,
											"end": 10281,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10361,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10380,
											"end": 10384,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 10377,
											"end": 10378,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10370,
											"end": 10385,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10404,
											"end": 10408,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10401,
											"end": 10402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10394,
											"end": 10409,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10612,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 10421,
											"end": 10612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10461,
											"end": 10464,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10480,
											"end": 10500,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 10498,
											"end": 10499,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10480,
											"end": 10500,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 10480,
											"end": 10500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10480,
											"end": 10500,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 10480,
											"end": 10500,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10475,
											"end": 10500,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10475,
											"end": 10500,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10514,
											"end": 10534,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 10532,
											"end": 10533,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10514,
											"end": 10534,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 10514,
											"end": 10534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10514,
											"end": 10534,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 10514,
											"end": 10534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10509,
											"end": 10534,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10509,
											"end": 10534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10557,
											"end": 10558,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10554,
											"end": 10555,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10550,
											"end": 10559,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10543,
											"end": 10559,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10543,
											"end": 10559,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10578,
											"end": 10581,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10575,
											"end": 10576,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10572,
											"end": 10582,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10569,
											"end": 10605,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10569,
											"end": 10605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 10569,
											"end": 10605,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10585,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 10585,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 10585,
											"end": 10603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10585,
											"end": 10603,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 10585,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10569,
											"end": 10605,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 10569,
											"end": 10605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10612,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10612,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10618,
											"end": 10950,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 10618,
											"end": 10950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10739,
											"end": 10743,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10777,
											"end": 10779,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10766,
											"end": 10775,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10762,
											"end": 10780,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10754,
											"end": 10780,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10754,
											"end": 10780,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10790,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 10858,
											"end": 10859,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10847,
											"end": 10856,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10843,
											"end": 10860,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10834,
											"end": 10840,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10790,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 10790,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10790,
											"end": 10861,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 10790,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10871,
											"end": 10943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 10939,
											"end": 10941,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10928,
											"end": 10937,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10915,
											"end": 10921,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10871,
											"end": 10943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 10871,
											"end": 10943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10871,
											"end": 10943,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 10871,
											"end": 10943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10618,
											"end": 10950,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10618,
											"end": 10950,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10618,
											"end": 10950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10618,
											"end": 10950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10618,
											"end": 10950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10618,
											"end": 10950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10956,
											"end": 11122,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 10956,
											"end": 11122,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 11114,
											"name": "PUSH",
											"source": 11,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 11092,
											"end": 11093,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11084,
											"end": 11090,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11080,
											"end": 11094,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11073,
											"end": 11115,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10956,
											"end": 11122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10956,
											"end": 11122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11128,
											"end": 11494,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 11128,
											"end": 11494,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11270,
											"end": 11273,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11291,
											"end": 11358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 11355,
											"end": 11357,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 11350,
											"end": 11353,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11291,
											"end": 11358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 11291,
											"end": 11358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11291,
											"end": 11358,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 11291,
											"end": 11358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11284,
											"end": 11358,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11284,
											"end": 11358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11367,
											"end": 11460,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 11456,
											"end": 11459,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11367,
											"end": 11460,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 11367,
											"end": 11460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11367,
											"end": 11460,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 11367,
											"end": 11460,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11485,
											"end": 11487,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11480,
											"end": 11483,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11476,
											"end": 11488,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11469,
											"end": 11488,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11469,
											"end": 11488,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11128,
											"end": 11494,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11128,
											"end": 11494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11128,
											"end": 11494,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11128,
											"end": 11494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11500,
											"end": 11919,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 11500,
											"end": 11919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11666,
											"end": 11670,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11704,
											"end": 11706,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11693,
											"end": 11702,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11681,
											"end": 11707,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11681,
											"end": 11707,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11753,
											"end": 11762,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11747,
											"end": 11751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11743,
											"end": 11763,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11739,
											"end": 11740,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11728,
											"end": 11737,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11724,
											"end": 11741,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11717,
											"end": 11764,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11781,
											"end": 11912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 11907,
											"end": 11911,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11781,
											"end": 11912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 11781,
											"end": 11912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11781,
											"end": 11912,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 11781,
											"end": 11912,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11773,
											"end": 11912,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11773,
											"end": 11912,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11500,
											"end": 11919,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11500,
											"end": 11919,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11500,
											"end": 11919,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11500,
											"end": 11919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ERC20/Bloque 3/Token/RealCrypto.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BURNER_ROLE()": "282c51f3",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"PAUSER_ROLE()": "e63ab1e9",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"burner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":\"RealCrypto\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/ERC20/Bloque 3/Token/RealCrypto.sol\":{\"keccak256\":\"0x1d695d9e99bc816e57e6c47fb2db3362fe52a165863caa0295de38269748c2a6\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://44ebd4a1eec7b71447c0ee101c4684d4bff177c2bb8d49c72a87b833c78141da\",\"dweb:/ipfs/QmSwe8b93yw6XLfXK3YZbC6CDjMWcCXm42noJ9WdXBskr7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 646,
								"contract": "contracts/ERC20/Bloque 3/Token/RealCrypto.sol:RealCrypto",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 652,
								"contract": "contracts/ERC20/Bloque 3/Token/RealCrypto.sol:RealCrypto",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 654,
								"contract": "contracts/ERC20/Bloque 3/Token/RealCrypto.sol:RealCrypto",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 656,
								"contract": "contracts/ERC20/Bloque 3/Token/RealCrypto.sol:RealCrypto",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 658,
								"contract": "contracts/ERC20/Bloque 3/Token/RealCrypto.sol:RealCrypto",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "contracts/ERC20/Bloque 3/Token/RealCrypto.sol:RealCrypto",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 533,
								"contract": "contracts/ERC20/Bloque 3/Token/RealCrypto.sol:RealCrypto",
								"label": "_paused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/ERC20/Bloque 3/Token/RealCrypto.sol:RealCrypto",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/ERC20/Bloque 3/Token/RealCrypto.sol:RealCrypto",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1272
						],
						"ERC165": [
							1296
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1273,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1272,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1297,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1296,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1272,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1296,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1296,
								1308,
								378,
								1272
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1295
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1295,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1254,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1254,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 516,
							"src": "280:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 516,
							"src": "2190:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 516,
							"src": "4430:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1272
						],
						"Pausable": [
							623
						]
					},
					"id": 624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 518,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 624,
							"sourceUnit": 1273,
							"src": "130:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 520,
										"name": "Context",
										"nameLocations": [
											"632:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1272,
										"src": "632:7:3"
									},
									"id": 521,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:3"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 519,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 623,
							"linearizedBaseContracts": [
								623,
								1272
							],
							"name": "Pausable",
							"nameLocation": "620:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 526,
									"name": "Paused",
									"nameLocation": "730:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "737:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:3"
									},
									"src": "724:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 531,
									"name": "Unpaused",
									"nameLocation": "841:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "850:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:3"
									},
									"src": "835:32:3"
								},
								{
									"constant": false,
									"id": 533,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "873:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 532,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "986:32:3",
										"statements": [
											{
												"expression": {
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 537,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "996:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "996:15:3"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 542,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:3"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:3"
									},
									"scope": 623,
									"src": "972:46:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "1229:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 545,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "1239:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:3"
											},
											{
												"id": 548,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:3"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 550,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:3"
									},
									"src": "1204:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "1476:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 553,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "1486:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:3"
											},
											{
												"id": 556,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:3"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 558,
									"name": "whenPaused",
									"nameLocation": "1463:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:3"
									},
									"src": "1454:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1668:31:3",
										"statements": [
											{
												"expression": {
													"id": 564,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 533,
													"src": "1685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 563,
												"id": 565,
												"nodeType": "Return",
												"src": "1678:14:3"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:3"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1662:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:3"
									},
									"scope": 623,
									"src": "1615:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "1818:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 572,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1837:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:3"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:3"
									},
									"scope": 623,
									"src": "1767:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "1993:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 584,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "2011:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:3"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:3"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:3"
									},
									"scope": 623,
									"src": "1945:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "2235:66:3",
										"statements": [
											{
												"expression": {
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 596,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "2245:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 601,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "2281:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 600,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2274:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "2269:25:3"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 594,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 593,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "2221:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:3"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:3"
									},
									"scope": 623,
									"src": "2186:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "2481:69:3",
										"statements": [
											{
												"expression": {
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 612,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "2491:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "2530:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 616,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "2521:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "EmitStatement",
												"src": "2516:27:3"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 610,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 609,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 558,
												"src": "2470:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:3"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:3"
									},
									"scope": 623,
									"src": "2433:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 624,
							"src": "602:1950:3",
							"usedErrors": [],
							"usedEvents": [
								526,
								531
							]
						}
					],
					"src": "105:2448:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1272
						],
						"ERC20": [
							1138
						],
						"IERC20": [
							1216
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1242
						]
					},
					"id": 1139,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 627,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1139,
							"sourceUnit": 1217,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 626,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1216,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 629,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1139,
							"sourceUnit": 1243,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 628,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1242,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 631,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1139,
							"sourceUnit": 1273,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 630,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1272,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 633,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1139,
							"sourceUnit": 516,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 632,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 635,
										"name": "Context",
										"nameLocations": [
											"1133:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1272,
										"src": "1133:7:4"
									},
									"id": 636,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:4"
								},
								{
									"baseName": {
										"id": 637,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1216,
										"src": "1142:6:4"
									},
									"id": 638,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:4"
								},
								{
									"baseName": {
										"id": 639,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1242,
										"src": "1150:14:4"
									},
									"id": 640,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:4"
								},
								{
									"baseName": {
										"id": 641,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1166:12:4"
									},
									"id": 642,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 634,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1138,
							"linearizedBaseContracts": [
								1138,
								420,
								1242,
								1216,
								1272
							],
							"name": "ERC20",
							"nameLocation": "1124:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 646,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1138,
									"src": "1185:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 645,
										"keyName": "account",
										"keyNameLocation": "1201:7:4",
										"keyType": {
											"id": 643,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 644,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 652,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1138,
									"src": "1245:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 651,
										"keyName": "account",
										"keyNameLocation": "1261:7:4",
										"keyType": {
											"id": 647,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 650,
											"keyName": "spender",
											"keyNameLocation": "1288:7:4",
											"keyType": {
												"id": 648,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 649,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 654,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1138,
									"src": "1335:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 653,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 656,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1138,
									"src": "1370:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 655,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 658,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1138,
									"src": "1396:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 657,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "1657:57:4",
										"statements": [
											{
												"expression": {
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 666,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "1667:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 667,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "1675:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:4"
											},
											{
												"expression": {
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 670,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "1690:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 671,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "1700:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:4"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 675,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1613:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 660,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1634:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 662,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:4"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:4"
									},
									"scope": 1138,
									"src": "1601:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1229
									],
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "1839:29:4",
										"statements": [
											{
												"expression": {
													"id": 681,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 656,
													"src": "1856:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 680,
												"id": 682,
												"nodeType": "Return",
												"src": "1849:12:4"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:4"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1824:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:4"
									},
									"scope": 1138,
									"src": "1779:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1235
									],
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "2043:31:4",
										"statements": [
											{
												"expression": {
													"id": 690,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 658,
													"src": "2060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 689,
												"id": 691,
												"nodeType": "Return",
												"src": "2053:14:4"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:4"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "2028:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 1138,
									"src": "1981:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1241
									],
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "2763:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 698,
												"id": 700,
												"nodeType": "Return",
												"src": "2773:9:4"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:4"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2756:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 696,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:4"
									},
									"scope": 1138,
									"src": "2707:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1165
									],
									"body": {
										"id": 710,
										"nodeType": "Block",
										"src": "2910:36:4",
										"statements": [
											{
												"expression": {
													"id": 708,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 654,
													"src": "2927:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 707,
												"id": 709,
												"nodeType": "Return",
												"src": "2920:19:4"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:4"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "2901:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:4"
									},
									"scope": 1138,
									"src": "2849:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1173
									],
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "3078:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 719,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "3095:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 721,
													"indexExpression": {
														"id": 720,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "3105:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 718,
												"id": 722,
												"nodeType": "Return",
												"src": "3088:25:4"
											}
										]
									},
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "3023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:4"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "3069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:4"
									},
									"scope": 1138,
									"src": "3004:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1183
									],
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "3390:103:4",
										"statements": [
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 747,
														"src": "3400:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 734,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 736,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "3416:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 740,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "3448:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 741,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "3455:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 742,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "3459:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 739,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "3438:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 733,
												"id": 746,
												"nodeType": "Return",
												"src": "3475:11:4"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3333:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3345:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:4"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3384:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 731,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:4"
									},
									"scope": 1138,
									"src": "3315:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1193
									],
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "3640:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 758,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "3657:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 760,
														"indexExpression": {
															"id": 759,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "3669:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 762,
													"indexExpression": {
														"id": 761,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "3676:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 757,
												"id": 763,
												"nodeType": "Return",
												"src": "3650:34:4"
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "3570:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "3585:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:4"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "3631:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:4"
									},
									"scope": 1138,
									"src": "3551:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1203
									],
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "4077:107:4",
										"statements": [
											{
												"assignments": [
													776
												],
												"declarations": [
													{
														"constant": false,
														"id": 776,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 788,
														"src": "4087:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 775,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 779,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 777,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "4103:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 781,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "4134:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "4141:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 783,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "4150:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 780,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1029,
															1089
														],
														"referencedDeclaration": 1029,
														"src": "4125:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 774,
												"id": 787,
												"nodeType": "Return",
												"src": "4166:11:4"
											}
										]
									},
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "4015:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "4032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:4"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "4071:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 772,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:4"
									},
									"scope": 1138,
									"src": "3998:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1215
									],
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "4869:151:4",
										"statements": [
											{
												"assignments": [
													802
												],
												"declarations": [
													{
														"constant": false,
														"id": 802,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 820,
														"src": "4879:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 801,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 805,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 803,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "4897:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 807,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "4935:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 808,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "4941:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 809,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "4950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "4919:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 813,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "4976:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "4982:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "4986:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 812,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "4966:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 800,
												"id": 819,
												"nodeType": "Return",
												"src": "5002:11:4"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "4798:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "4812:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "4824:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:4"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "4863:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 798,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:4"
									},
									"scope": 1138,
									"src": "4776:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "5462:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 831,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "5476:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 832,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 845,
												"nodeType": "IfStatement",
												"src": "5472:86:4",
												"trueBody": {
													"id": 844,
													"nodeType": "Block",
													"src": "5496:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 840,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 838,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 837,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5517:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 843,
															"nodeType": "RevertStatement",
															"src": "5510:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 846,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "5571:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 847,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 860,
												"nodeType": "IfStatement",
												"src": "5567:86:4",
												"trueBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "5589:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 853,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 852,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5610:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 858,
															"nodeType": "RevertStatement",
															"src": "5603:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 862,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "5670:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 863,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "5676:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 864,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "5680:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 861,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "5662:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:4"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "5412:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "5426:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "5438:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:4"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:4"
									},
									"scope": 1138,
									"src": "5393:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "6083:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "6097:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 915,
													"nodeType": "Block",
													"src": "6271:362:4",
													"statements": [
														{
															"assignments": [
																890
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 890,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 915,
																	"src": "6285:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 889,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 894,
															"initialValue": {
																"baseExpression": {
																	"id": 891,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "6307:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 893,
																"indexExpression": {
																	"id": 892,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "6317:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 895,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "6340:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 896,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "6354:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 905,
															"nodeType": "IfStatement",
															"src": "6336:115:4",
															"trueBody": {
																"id": 904,
																"nodeType": "Block",
																"src": "6361:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 899,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 871,
																					"src": "6411:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 900,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 890,
																					"src": "6417:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 901,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 875,
																					"src": "6430:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 898,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6386:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 903,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:4"
																	}
																]
															}
														},
														{
															"id": 914,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 906,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 646,
																				"src": "6571:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 908,
																			"indexExpression": {
																				"id": 907,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 871,
																				"src": "6581:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 909,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 890,
																				"src": "6589:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 910,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 875,
																				"src": "6603:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 913,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:4"
																}
															]
														}
													]
												},
												"id": 916,
												"nodeType": "IfStatement",
												"src": "6093:540:4",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "6117:148:4",
													"statements": [
														{
															"expression": {
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 884,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "6233:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 885,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "6249:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 887,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 917,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "6647:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 918,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "6862:206:4",
													"statements": [
														{
															"id": 935,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 929,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 646,
																				"src": "7021:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 931,
																			"indexExpression": {
																				"id": 930,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 873,
																				"src": "7031:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 932,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 875,
																			"src": "7038:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 934,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:4"
																}
															]
														}
													]
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "6643:425:4",
												"trueBody": {
													"id": 928,
													"nodeType": "Block",
													"src": "6665:191:4",
													"statements": [
														{
															"id": 927,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 923,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "6810:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 924,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 875,
																			"src": "6826:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 926,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 939,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "7092:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "7098:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "7102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 938,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "7083:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "EmitStatement",
												"src": "7078:30:4"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "6025:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "6039:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "6051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:4"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:4"
									},
									"scope": 1138,
									"src": "6008:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "7514:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 953,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "7528:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 954,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 967,
												"nodeType": "IfStatement",
												"src": "7524:91:4",
												"trueBody": {
													"id": 966,
													"nodeType": "Block",
													"src": "7551:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 962,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 960,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 959,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7572:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 965,
															"nodeType": "RevertStatement",
															"src": "7565:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 969,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 973,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "7644:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "7653:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 968,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "7624:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:4"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "7473:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "7490:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:4"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:4"
									},
									"scope": 1138,
									"src": "7458:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "8040:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 986,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "8054:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 987,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1000,
												"nodeType": "IfStatement",
												"src": "8050:89:4",
												"trueBody": {
													"id": 999,
													"nodeType": "Block",
													"src": "8077:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 995,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 993,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 992,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8098:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 998,
															"nodeType": "RevertStatement",
															"src": "8091:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1002,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "8156:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1003,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1007,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "8177:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1001,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "8148:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:4"
											}
										]
									},
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "7999:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "8016:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:4"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:4"
									},
									"scope": 1138,
									"src": "7984:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "8800:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1022,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "8819:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "8826:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1024,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "8835:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1021,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1029,
															1089
														],
														"referencedDeclaration": 1089,
														"src": "8810:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:4"
											}
										]
									},
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "8744:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "8759:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "8776:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:4"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:4"
									},
									"scope": 1138,
									"src": "8726:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "9799:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1041,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "9813:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1042,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1055,
												"nodeType": "IfStatement",
												"src": "9809:89:4",
												"trueBody": {
													"id": 1054,
													"nodeType": "Block",
													"src": "9834:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1050,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1048,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1047,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "9855:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1053,
															"nodeType": "RevertStatement",
															"src": "9848:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1056,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "9911:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1057,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1070,
												"nodeType": "IfStatement",
												"src": "9907:90:4",
												"trueBody": {
													"id": 1069,
													"nodeType": "Block",
													"src": "9934:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1063,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1062,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "9955:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1068,
															"nodeType": "RevertStatement",
															"src": "9948:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1071,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "10006:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1074,
															"indexExpression": {
																"id": 1072,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1032,
																"src": "10018:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1075,
														"indexExpression": {
															"id": 1073,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "10025:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1076,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "10036:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:4"
											},
											{
												"condition": {
													"id": 1079,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1038,
													"src": "10055:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1087,
												"nodeType": "IfStatement",
												"src": "10051:76:4",
												"trueBody": {
													"id": 1086,
													"nodeType": "Block",
													"src": "10066:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1081,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1032,
																		"src": "10094:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1082,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1034,
																		"src": "10101:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1083,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "10110:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1080,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "10085:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1085,
															"nodeType": "EmitStatement",
															"src": "10080:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "9719:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "9734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "9751:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "9766:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1037,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:4"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:4"
									},
									"scope": 1138,
									"src": "9701:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "10504:387:4",
										"statements": [
											{
												"assignments": [
													1100
												],
												"declarations": [
													{
														"constant": false,
														"id": 1100,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "10514:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1099,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1105,
												"initialValue": {
													"arguments": [
														{
															"id": 1102,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "10551:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1103,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "10558:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1101,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "10541:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1106,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "10580:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1108,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1107,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "10576:309:4",
												"trueBody": {
													"id": 1134,
													"nodeType": "Block",
													"src": "10618:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1113,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "10636:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1114,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "10655:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1123,
															"nodeType": "IfStatement",
															"src": "10632:130:4",
															"trueBody": {
																"id": 1122,
																"nodeType": "Block",
																"src": "10662:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1117,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1094,
																					"src": "10714:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1118,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1100,
																					"src": "10723:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1119,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1096,
																					"src": "10741:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1116,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10687:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1121,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:4"
																	}
																]
															}
														},
														{
															"id": 1133,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1125,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1092,
																				"src": "10812:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1126,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1094,
																				"src": "10819:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1127,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1100,
																					"src": "10828:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1128,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1096,
																					"src": "10847:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1124,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1029,
																				1089
																			],
																			"referencedDeclaration": 1089,
																			"src": "10803:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1132,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "10440:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "10455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "10472:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:4"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:4"
									},
									"scope": 1138,
									"src": "10415:476:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1139,
							"src": "1106:9787:4",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1150,
								1159
							]
						}
					],
					"src": "105:10789:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1216
						]
					},
					"id": 1217,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1140,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1141,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1216,
							"linearizedBaseContracts": [
								1216
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1150,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1159,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 1216,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1216,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1180,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 1216,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 1216,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 1216,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1215,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1212,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 1216,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1217,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1150,
								1159
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1216
						],
						"IERC20Metadata": [
							1242
						]
					},
					"id": 1243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1218,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1220,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1243,
							"sourceUnit": 1217,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1219,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1216,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1222,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1216,
										"src": "306:6:6"
									},
									"id": 1223,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1221,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1242,
							"linearizedBaseContracts": [
								1242,
								1216
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1226,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1242,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1242,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1238,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1242,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1243,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								1150,
								1159
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1272
						]
					},
					"id": 1273,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1244,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1245,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1272,
							"linearizedBaseContracts": [
								1272
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1250,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1249,
												"id": 1252,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1272,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1262,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1259,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1258,
												"id": 1261,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1272,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1267,
												"id": 1269,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1272,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1273,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1296
						],
						"IERC165": [
							1308
						]
					},
					"id": 1297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1274,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1276,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1297,
							"sourceUnit": 1309,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1275,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1308,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1278,
										"name": "IERC165",
										"nameLocations": [
											"688:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1308,
										"src": "688:7:8"
									},
									"id": 1279,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1277,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1296,
							"linearizedBaseContracts": [
								1296,
								1308
							],
							"name": "ERC165",
							"nameLocation": "678:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1307
									],
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "845:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1287,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "862:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1289,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "882:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1308_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1308_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1288,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1308",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1286,
												"id": 1293,
												"nodeType": "Return",
												"src": "855:47:8"
											}
										]
									},
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "790:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1281,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:8"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "839:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:8"
									},
									"scope": 1296,
									"src": "763:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1297,
							"src": "660:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1308
						]
					},
					"id": 1309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1299,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1308,
							"linearizedBaseContracts": [
								1308
							],
							"name": "IERC165",
							"nameLocation": "432:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "818:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1301,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:9"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "861:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:9"
									},
									"scope": 1308,
									"src": "791:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1309,
							"src": "422:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:9"
				},
				"id": 9
			},
			"contracts/ERC20/Bloque 3/Token/RealCrypto.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20/Bloque 3/Token/RealCrypto.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1272
						],
						"ERC165": [
							1296
						],
						"ERC20": [
							1138
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1216
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1242
						],
						"Pausable": [
							623
						],
						"RealCrypto": [
							1418
						]
					},
					"id": 1419,
					"license": "LGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1310,
							"literals": [
								"solidity",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "55:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1311,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1419,
							"sourceUnit": 1139,
							"src": "82:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1312,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1419,
							"sourceUnit": 296,
							"src": "139:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1313,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1419,
							"sourceUnit": 624,
							"src": "255:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1314,
										"name": "ERC20",
										"nameLocations": [
											"337:5:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1138,
										"src": "337:5:10"
									},
									"id": 1315,
									"nodeType": "InheritanceSpecifier",
									"src": "337:5:10"
								},
								{
									"baseName": {
										"id": 1316,
										"name": "AccessControl",
										"nameLocations": [
											"344:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "344:13:10"
									},
									"id": 1317,
									"nodeType": "InheritanceSpecifier",
									"src": "344:13:10"
								},
								{
									"baseName": {
										"id": 1318,
										"name": "Pausable",
										"nameLocations": [
											"359:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 623,
										"src": "359:8:10"
									},
									"id": 1319,
									"nodeType": "InheritanceSpecifier",
									"src": "359:8:10"
								}
							],
							"canonicalName": "RealCrypto",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1418,
							"linearizedBaseContracts": [
								1418,
								623,
								295,
								1296,
								1308,
								378,
								1138,
								420,
								1242,
								1216,
								1272
							],
							"name": "RealCrypto",
							"nameLocation": "323:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1324,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "398:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1418,
									"src": "374:62:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1320,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "374:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1322,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "422:13:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1321,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "412:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1323,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "412:24:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "282c51f3",
									"id": 1329,
									"mutability": "constant",
									"name": "BURNER_ROLE",
									"nameLocation": "467:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1418,
									"src": "443:62:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1325,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "443:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4255524e45525f524f4c45",
												"id": 1327,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "491:13:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												},
												"value": "BURNER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												}
											],
											"id": 1326,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "481:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1328,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "481:24:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 1334,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nameLocation": "536:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1418,
									"src": "512:62:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1330,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "512:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 1332,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "560:13:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 1331,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "550:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1333,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "550:24:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "839:378:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1348,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "861:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1349,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "881:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "885:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "881:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1347,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "850:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "850:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "850:42:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1354,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "942:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1355,
															"name": "minter_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "955:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1353,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "931:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "931:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "931:32:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1359,
															"name": "BURNER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "1032:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1360,
															"name": "burner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "1045:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1358,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1021:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1021:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1362,
												"nodeType": "ExpressionStatement",
												"src": "1021:32:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1364,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "1122:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1365,
															"name": "pauser_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "1135:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1363,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1111:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1111:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "1111:32:10"
											}
										]
									},
									"id": 1369,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "821:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "544b4e",
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "832:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9ee187a325c80a9ca820b4f297a58770bf5a85fede3756f8e7e9d14ff37d7b66",
														"typeString": "literal_string \"TKN\""
													},
													"value": "TKN"
												}
											],
											"id": 1345,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1342,
												"name": "ERC20",
												"nameLocations": [
													"815:5:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1138,
												"src": "815:5:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "815:23:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "minter_",
												"nameLocation": "772:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "764:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "burner_",
												"nameLocation": "789:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "781:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "pauser_",
												"nameLocation": "806:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "798:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:51:10"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:0:10"
									},
									"scope": 1418,
									"src": "752:465:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "1282:116:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1378,
																	"name": "MINTER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "1309:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1379,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1322:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1326:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1322:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1377,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1301:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1301:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f742061206d696e746572",
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1335:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf",
																"typeString": "literal_string \"Caller is not a minter\""
															},
															"value": "Caller is not a minter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf",
																"typeString": "literal_string \"Caller is not a minter\""
															}
														],
														"id": 1376,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1293:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:67:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "1293:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1386,
															"name": "to_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "1377:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1387,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "1382:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1385,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "1371:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1371:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1389,
												"nodeType": "ExpressionStatement",
												"src": "1371:19:10"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1241:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "to_",
												"nameLocation": "1254:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "1246:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "amount_",
												"nameLocation": "1265:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "1260:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1260:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:28:10"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1282:0:10"
									},
									"scope": 1418,
									"src": "1232:166:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "1477:38:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1402,
															"name": "to_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "1494:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1403,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "1499:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1401,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "1488:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1488:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "1488:19:10"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1398,
													"name": "BURNER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1329,
													"src": "1464:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1399,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1397,
												"name": "onlyRole",
												"nameLocations": [
													"1455:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1455:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1455:21:10"
										}
									],
									"name": "burn",
									"nameLocation": "1415:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "to_",
												"nameLocation": "1428:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1420:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "amount_",
												"nameLocation": "1439:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1434:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1434:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1419:28:10"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1477:0:10"
									},
									"scope": 1418,
									"src": "1406:109:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1416,
										"nodeType": "Block",
										"src": "1568:27:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1413,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "1579:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1579:8:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1415,
												"nodeType": "ExpressionStatement",
												"src": "1579:8:10"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1417,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1410,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1334,
													"src": "1556:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1411,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1409,
												"name": "onlyRole",
												"nameLocations": [
													"1547:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1547:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1547:21:10"
										}
									],
									"name": "pause",
									"nameLocation": "1532:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1537:2:10"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1568:0:10"
									},
									"scope": 1418,
									"src": "1523:72:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1419,
							"src": "314:1294:10",
							"usedErrors": [
								305,
								308,
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								317,
								326,
								335,
								526,
								531,
								1150,
								1159
							]
						}
					],
					"src": "55:1555:10"
				},
				"id": 10
			}
		}
	}
}